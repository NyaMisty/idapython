# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from _typeshed import Incomplete

def _swig_repr(self): ...
def _swig_setattr_nondynamic_instance_variable(set): ...
def _swig_setattr_nondynamic_class_variable(set): ...
def _swig_add_metaclass(metaclass): ...

class _SwigNonDynamicMeta(type):
    __setattr__: Incomplete

SWIG_PYTHON_LEGACY_BOOL: Incomplete
FIXUP_OFF8: Incomplete
FIXUP_OFF16: Incomplete
FIXUP_SEG16: Incomplete
FIXUP_PTR16: Incomplete
FIXUP_OFF32: Incomplete
FIXUP_PTR32: Incomplete
FIXUP_HI8: Incomplete
FIXUP_HI16: Incomplete
FIXUP_LOW8: Incomplete
FIXUP_LOW16: Incomplete
V695_FIXUP_VHIGH: Incomplete
V695_FIXUP_VLOW: Incomplete
FIXUP_OFF64: Incomplete
FIXUP_OFF8S: Incomplete
FIXUP_OFF16S: Incomplete
FIXUP_OFF32S: Incomplete
FIXUP_CUSTOM: Incomplete

def is_fixup_custom(*args) -> bool: ...

FIXUPF_REL: Incomplete
FIXUPF_EXTDEF: Incomplete
FIXUPF_UNUSED: Incomplete
FIXUPF_CREATED: Incomplete
FIXUPF_LOADER_MASK: Incomplete

class fixup_data_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    sel: Incomplete
    off: Incomplete
    displacement: Incomplete
    def __init__(self, *args) -> None: ...
    def get_type(self, *args) -> fixup_type_t: ...
    def set_type(self, *args) -> None: ...
    def set_type_and_flags(self, *args) -> None: ...
    def is_custom(self, *args) -> bool: ...
    def get_flags(self, *args) -> uint32: ...
    def is_extdef(self, *args) -> bool: ...
    def set_extdef(self, *args) -> None: ...
    def clr_extdef(self, *args) -> None: ...
    def is_unused(self, *args) -> bool: ...
    def set_unused(self, *args) -> None: ...
    def clr_unused(self, *args) -> None: ...
    def has_base(self, *args) -> bool: ...
    def was_created(self, *args) -> bool: ...
    def get_base(self, *args) -> ea_t: ...
    def set_base(self, *args) -> None: ...
    def set_sel(self, *args) -> None: ...
    def set_target_sel(self, *args) -> None: ...
    def set(self, *args) -> None: ...
    def get(self, *args) -> bool: ...
    def get_handler(self, *args) -> 'fixup_handler_t const *': ...
    def get_desc(self, *args) -> 'char const *': ...
    def calc_size(self, *args) -> int: ...
    def get_value(self, *args) -> uval_t: ...
    def patch_value(self, *args) -> bool: ...
    __swig_destroy__: Incomplete

def get_fixup(*args) -> bool: ...
def exists_fixup(*args) -> bool: ...
def set_fixup(*args) -> None: ...
def del_fixup(*args) -> None: ...
def get_first_fixup_ea(*args) -> ea_t: ...
def get_next_fixup_ea(*args) -> ea_t: ...
def get_prev_fixup_ea(*args) -> ea_t: ...
def get_fixup_handler(*args) -> 'fixup_handler_t const *': ...
def get_fixup_value(*args) -> uval_t: ...
def patch_fixup_value(*args) -> bool: ...
def get_fixup_desc(*args) -> 'fixup_data_t const &': ...
def calc_fixup_size(*args) -> int: ...
def find_custom_fixup(*args) -> fixup_type_t: ...

class fixup_info_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    ea: Incomplete
    fd: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete

def get_fixups(*args) -> bool: ...
def contains_fixups(*args) -> bool: ...
def gen_fix_fixups(*args) -> None: ...
def handle_fixups_in_macro(*args) -> bool: ...
