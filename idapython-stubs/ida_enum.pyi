# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from _typeshed import Incomplete

def _swig_repr(self): ...
def _swig_setattr_nondynamic_instance_variable(set): ...
def _swig_setattr_nondynamic_class_variable(set): ...
def _swig_add_metaclass(metaclass): ...

class _SwigNonDynamicMeta(type):
    __setattr__: Incomplete

SWIG_PYTHON_LEGACY_BOOL: Incomplete
DEFMASK: Incomplete

def get_enum_qty(*args) -> size_t: ...
def getn_enum(*args) -> enum_t: ...
def get_enum_idx(*args) -> uval_t: ...
def get_enum(*args) -> enum_t: ...
def is_bf(*args) -> bool: ...
def is_enum_hidden(*args) -> bool: ...
def set_enum_hidden(*args) -> bool: ...
def is_enum_fromtil(*args) -> bool: ...
def set_enum_fromtil(*args) -> bool: ...
def is_ghost_enum(*args) -> bool: ...
def set_enum_ghost(*args) -> bool: ...
def get_enum_name(*args) -> 'qstring *': ...
def get_enum_name2(*args) -> 'qstring *': ...

ENFL_REGEX: Incomplete

def get_enum_width(*args) -> size_t: ...
def set_enum_width(*args) -> bool: ...
def get_enum_cmt(*args) -> 'qstring *': ...
def get_enum_size(*args) -> size_t: ...
def get_enum_flag(*args) -> flags64_t: ...
def get_enum_member_by_name(*args) -> const_t: ...
def get_enum_member_value(*args) -> uval_t: ...
def get_enum_member_enum(*args) -> enum_t: ...
def get_enum_member_bmask(*args) -> bmask_t: ...
def get_enum_member(*args) -> const_t: ...
def get_first_bmask(*args) -> bmask_t: ...
def get_last_bmask(*args) -> bmask_t: ...
def get_next_bmask(*args) -> bmask_t: ...
def get_prev_bmask(*args) -> bmask_t: ...
def get_first_enum_member(*args) -> uval_t: ...
def get_last_enum_member(*args) -> uval_t: ...
def get_next_enum_member(*args) -> uval_t: ...
def get_prev_enum_member(*args) -> uval_t: ...
def get_enum_member_name(*args) -> 'qstring *': ...
def get_enum_member_cmt(*args) -> 'qstring *': ...
def get_first_serial_enum_member(*args) -> 'uchar *': ...
def get_last_serial_enum_member(*args) -> 'uchar *': ...
def get_next_serial_enum_member(*args) -> 'uchar *': ...
def get_prev_serial_enum_member(*args) -> 'uchar *': ...

class enum_member_visitor_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    def visit_enum_member(self, *args) -> int: ...
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def __disown__(self): ...

cvar: Incomplete
MAX_ENUM_SERIAL: Incomplete

def for_all_enum_members(*args) -> int: ...
def get_enum_member_serial(*args) -> uchar: ...
def get_enum_type_ordinal(*args) -> int32: ...
def set_enum_type_ordinal(*args) -> None: ...
def add_enum(*args) -> enum_t: ...
def del_enum(*args) -> None: ...
def set_enum_idx(*args) -> bool: ...
def set_enum_bf(*args) -> bool: ...
def set_enum_name(*args) -> bool: ...
def set_enum_cmt(*args) -> bool: ...
def set_enum_flag(*args) -> bool: ...
def add_enum_member(*args) -> int: ...

ENUM_MEMBER_ERROR_NAME: Incomplete
ENUM_MEMBER_ERROR_VALUE: Incomplete
ENUM_MEMBER_ERROR_ENUM: Incomplete
ENUM_MEMBER_ERROR_MASK: Incomplete
ENUM_MEMBER_ERROR_ILLV: Incomplete

def del_enum_member(*args) -> bool: ...
def set_enum_member_name(*args) -> bool: ...
def set_enum_member_cmt(*args) -> bool: ...
def is_one_bit_mask(*args) -> bool: ...
def set_bmask_name(*args) -> bool: ...
def get_bmask_name(*args) -> 'qstring *': ...
def set_bmask_cmt(*args) -> bool: ...
def get_bmask_cmt(*args) -> 'qstring *': ...
