# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

import abc
from _typeshed import Incomplete
from typing import Sequence, overload

SIP_VERSION: int
SIP_VERSION_STR: str

class wrappertype: ...
class simplewrapper: ...
class wrapper(simplewrapper): ...

Buffer: Incomplete

class array(Sequence, metaclass=abc.ABCMeta): ...

class voidptr:
    def __init__(addr: int | Buffer, size: int = -1, writeable: bool = True) -> None: ...
    def __int__(self) -> int: ...
    @overload
    def __getitem__(self, i: int) -> bytes: ...
    @overload
    def __getitem__(self, s: slice) -> Noneptr: ...
    def __hex__(self) -> str: ...
    def __len__(self) -> int: ...
    def __setitem__(self, i: int | slice, v: Buffer) -> None: ...
    def asarray(self, size: int = -1) -> array: ...
    def asstring(self, size: int = -1) -> bytes: ...
    def getsize(self) -> int: ...
    def getwriteable(self) -> bool: ...
    def setsize(self, size: int) -> None: ...
    def setwriteable(self, bool) -> None: ...

def cast(obj: simplewrapper, type: wrappertype) -> simplewrapper: ...
def delete(obj: simplewrapper) -> None: ...
def dump(obj: simplewrapper) -> None: ...
def enableautoconversion(type: wrappertype, enable: bool) -> bool: ...
def getapi(name: str) -> int: ...
def isdeleted(obj: simplewrapper) -> bool: ...
def ispycreated(obj: simplewrapper) -> bool: ...
def ispyowned(obj: simplewrapper) -> bool: ...
def setapi(name: str, version: int) -> None: ...
def setdeleted(obj: simplewrapper) -> None: ...
def setdestroyonexit(destroy: bool) -> None: ...
def settracemask(mask: int) -> None: ...
def transferback(obj: wrapper) -> None: ...
def transferto(obj: wrapper, owner: wrapper) -> None: ...
def unwrapinstance(obj: simplewrapper) -> None: ...
def wrapinstance(addr: int, type: wrappertype) -> simplewrapper: ...
