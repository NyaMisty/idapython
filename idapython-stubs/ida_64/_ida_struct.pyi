from typing import Any, overload

MF_BASECLASS: int
MF_BYTIL: int
MF_DTOR: int
MF_DUPNAME: int
MF_HASTI: int
MF_HASUNI: int
MF_OK: int
MF_UNIMEM: int
SET_MEMTI_BYTIL: int
SET_MEMTI_COMPATIBLE: int
SET_MEMTI_FUNCARG: int
SET_MEMTI_MAY_DESTROY: int
SET_MEMTI_USERTI: int
SF_ALIGN: int
SF_ASMTIL: int
SF_FRAME: int
SF_GHOST: int
SF_HASUNI: int
SF_HIDDEN: int
SF_NOLIST: int
SF_TYPLIB: int
SF_UNION: int
SF_VAR: int
SMT_ARRAY: int
SMT_BADARG: int
SMT_FAILED: int
SMT_KEEP: int
SMT_NOCOMPAT: int
SMT_OK: int
SMT_OVERLAP: int
SMT_SIZE: int
SMT_WORSE: int
STRNFL_REGEX: int
STRUC_ERROR_MEMBER_LTUDT: int
STRUC_ERROR_MEMBER_NAME: int
STRUC_ERROR_MEMBER_NESTED: int
STRUC_ERROR_MEMBER_OFFSET: int
STRUC_ERROR_MEMBER_OK: int
STRUC_ERROR_MEMBER_SIZE: int
STRUC_ERROR_MEMBER_STRUCT: int
STRUC_ERROR_MEMBER_TINFO: int
STRUC_ERROR_MEMBER_UNIVAR: int
STRUC_ERROR_MEMBER_VARLAST: int
STRUC_SEPARATOR: str
SWIG_PYTHON_LEGACY_BOOL: int

def add_struc(idx, name, is_union=...) -> tid_t: ...
def add_struc_member(sptr, fieldname, offset, flag, mt, nbytes) -> struc_error_t: ...
def del_member_tinfo(sptr, mptr) -> bool: ...
def del_struc(sptr) -> bool: ...
def del_struc_member(sptr, offset) -> bool: ...
def del_struc_members(sptr, off1, off2) -> int: ...
def delete_dyn_member_ref_array(self) -> Any: ...
def delete_member_t(self) -> Any: ...
def delete_struc_t(self) -> Any: ...
def delete_struct_field_visitor_t(self) -> Any: ...
def delete_udm_visitor_t(self) -> Any: ...
def disown_struct_field_visitor_t(*args, **kwargs): ...
def disown_udm_visitor_t(*args, **kwargs): ...
def dyn_member_ref_array___getitem__(self, i) -> member_t: ...
def dyn_member_ref_array___len__(self) -> size_t: ...
def dyn_member_ref_array___setitem__(self, i, v) -> Any: ...
def dyn_member_ref_array_count_get(self) -> size_t: ...
def dyn_member_ref_array_data_get(self) -> member_t: ...
def dyn_member_ref_array_swiginit(*args, **kwargs): ...
def dyn_member_ref_array_swigregister(*args, **kwargs): ...
def expand_struc(sptr, offset, delta, recalc=...) -> bool: ...
def get_best_fit_member(sptr, offset) -> member_t: ...
def get_first_struc_idx() -> uval_t: ...
def get_innermost_member(*args, **kwargs): ...
def get_last_struc_idx() -> uval_t: ...
def get_max_offset(sptr) -> ea_t: ...
def get_member(sptr, offset) -> member_t: ...
def get_member_by_fullname(fullname) -> member_t: ...
def get_member_by_id(mid) -> member_t: ...
def get_member_by_name(sptr, membername) -> member_t: ...
def get_member_cmt(mid, repeatable) -> ssize_t: ...
def get_member_fullname(mid) -> ssize_t: ...
def get_member_id(sptr, offset) -> tid_t: ...
def get_member_name(mid) -> ssize_t: ...
def get_member_size(NONNULL_mptr) -> asize_t: ...
def get_member_struc(fullname) -> struc_t: ...
def get_member_tinfo(tif, mptr) -> bool: ...
def get_next_member_idx(sptr, off) -> ssize_t: ...
def get_next_struc_idx(idx) -> uval_t: ...
def get_or_guess_member_tinfo(tif, mptr) -> bool: ...
def get_prev_member_idx(sptr, off) -> ssize_t: ...
def get_prev_struc_idx(idx) -> uval_t: ...
def get_sptr(mptr) -> struc_t: ...
def get_struc(id) -> struc_t: ...
def get_struc_by_idx(idx) -> tid_t: ...
def get_struc_cmt(id, repeatable) -> ssize_t: ...
def get_struc_first_offset(sptr) -> ea_t: ...
def get_struc_id(name) -> tid_t: ...
def get_struc_idx(id) -> uval_t: ...
def get_struc_last_offset(sptr) -> ea_t: ...
def get_struc_name(id, flags=...) -> ssize_t: ...
def get_struc_next_offset(sptr, offset) -> ea_t: ...
def get_struc_prev_offset(sptr, offset) -> ea_t: ...
def get_struc_qty() -> size_t: ...
@overload
def get_struc_size(sptr) -> asize_t: ...
@overload
def get_struc_size(id) -> asize_t: ...
def is_anonymous_member_name(name) -> bool: ...
def is_dummy_member_name(name) -> bool: ...
def is_member_id(mid) -> bool: ...
def is_special_member(id) -> bool: ...
def is_union(id) -> bool: ...
def is_varmember(mptr) -> bool: ...
def is_varstr(id) -> bool: ...
def member_t_by_til(self) -> bool: ...
def member_t_eoff_get(self) -> ea_t: ...
def member_t_eoff_set(self, eoff) -> Any: ...
def member_t_flag_get(self) -> flags_t: ...
def member_t_flag_set(self, flag) -> Any: ...
def member_t_get_size(self) -> asize_t: ...
def member_t_get_soff(self) -> ea_t: ...
def member_t_has_ti(self) -> bool: ...
def member_t_has_union(self) -> bool: ...
def member_t_id_get(self) -> tid_t: ...
def member_t_id_set(self, id) -> Any: ...
def member_t_is_baseclass(self) -> bool: ...
def member_t_is_destructor(self) -> bool: ...
def member_t_is_dupname(self) -> bool: ...
def member_t_props_get(self) -> uint32: ...
def member_t_props_set(self, props) -> Any: ...
def member_t_soff_get(self) -> ea_t: ...
def member_t_soff_set(self, soff) -> Any: ...
def member_t_swiginit(*args, **kwargs): ...
def member_t_swigregister(*args, **kwargs): ...
def member_t_unimem(self) -> bool: ...
def new_dyn_member_ref_array(_data, _count) -> dyn_member_ref_array: ...
def new_member_t() -> member_t: ...
def new_struct_field_visitor_t(_self) -> struct_field_visitor_t: ...
def new_udm_visitor_t(_self) -> udm_visitor_t: ...
def retrieve_member_info(buf, mptr) -> opinfo_t: ...
def save_struc(sptr, may_update_ltypes=...) -> Any: ...
def set_member_cmt(mptr, cmt, repeatable) -> bool: ...
def set_member_name(sptr, offset, name) -> bool: ...
def set_member_tinfo(sptr, mptr, memoff, tif, flags) -> smt_code_t: ...
def set_member_type(sptr, offset, flag, mt, nbytes) -> bool: ...
def set_struc_align(sptr, shift) -> bool: ...
def set_struc_cmt(id, cmt, repeatable) -> bool: ...
def set_struc_hidden(sptr, is_hidden) -> Any: ...
def set_struc_idx(sptr, idx) -> bool: ...
def set_struc_listed(sptr, is_listed) -> Any: ...
def set_struc_name(id, name) -> bool: ...
@overload
def stroff_as_size(plen, sptr, value) -> bool: ...
@overload
def stroff_as_size(plen, tif, value) -> bool: ...
def struc_t___get_members__(self) -> dyn_member_ref_array: ...
def struc_t_age_get(self) -> ushort: ...
def struc_t_age_set(self, age) -> Any: ...
def struc_t_from_til(self) -> bool: ...
def struc_t_get_alignment(self) -> int: ...
@overload
def struc_t_get_last_member(self) -> member_t: ...
@overload
def struc_t_get_last_member(self) -> member_t: ...
def struc_t_has_union(self) -> bool: ...
def struc_t_id_get(self) -> tid_t: ...
def struc_t_id_set(self, id) -> Any: ...
def struc_t_is_choosable(self) -> bool: ...
def struc_t_is_copyof(self) -> bool: ...
def struc_t_is_frame(self) -> bool: ...
def struc_t_is_ghost(self) -> bool: ...
def struc_t_is_hidden(self) -> bool: ...
def struc_t_is_mappedto(self) -> bool: ...
def struc_t_is_synced(self) -> bool: ...
def struc_t_is_union(self) -> bool: ...
def struc_t_is_varstr(self) -> bool: ...
def struc_t_like_union(self) -> bool: ...
def struc_t_members_get(self) -> member_t: ...
def struc_t_members_set(self, members) -> Any: ...
def struc_t_memqty_get(self) -> uint32: ...
def struc_t_memqty_set(self, memqty) -> Any: ...
def struc_t_ordinal_get(self) -> int32: ...
def struc_t_ordinal_set(self, ordinal) -> Any: ...
def struc_t_props_get(self) -> uint32: ...
def struc_t_props_set(self, props) -> Any: ...
def struc_t_set_alignment(self, shift) -> Any: ...
def struc_t_swigregister(*args, **kwargs): ...
def struct_field_visitor_t_swiginit(*args, **kwargs): ...
def struct_field_visitor_t_swigregister(*args, **kwargs): ...
def struct_field_visitor_t_visit_field(self, sptr, mptr) -> int: ...
def udm_visitor_t_swiginit(*args, **kwargs): ...
def udm_visitor_t_swigregister(*args, **kwargs): ...
def udm_visitor_t_visit_udm(self, tid, tif, udt, idx) -> int: ...
def unsync_and_delete_struc(sptr) -> Any: ...
def visit_stroff_fields(sfv, path, disp, appzero) -> flags64_t: ...
def visit_stroff_udms(sfv, path, disp, appzero) -> int: ...
# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"