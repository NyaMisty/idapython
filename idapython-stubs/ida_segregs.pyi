# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

import ida_range
from _typeshed import Incomplete

def _swig_repr(self): ...
def _swig_setattr_nondynamic_instance_variable(set): ...
def _swig_setattr_nondynamic_class_variable(set): ...
def _swig_add_metaclass(metaclass): ...

class _SwigNonDynamicMeta(type):
    __setattr__: Incomplete

SWIG_PYTHON_LEGACY_BOOL: Incomplete
R_es: Incomplete
R_cs: Incomplete
R_ss: Incomplete
R_ds: Incomplete
R_fs: Incomplete
R_gs: Incomplete

class sreg_range_t(ida_range.range_t):
    thisown: Incomplete
    __repr__ = _swig_repr
    val: Incomplete
    tag: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete

SR_inherit: Incomplete
SR_user: Incomplete
SR_auto: Incomplete
SR_autostart: Incomplete

def get_sreg(*args) -> sel_t: ...
def split_sreg_range(*args) -> bool: ...
def set_default_sreg_value(*args) -> bool: ...
def set_sreg_at_next_code(*args) -> None: ...
def get_sreg_range(*args) -> bool: ...
def get_prev_sreg_range(*args) -> bool: ...
def set_default_dataseg(*args) -> None: ...
def get_sreg_ranges_qty(*args) -> size_t: ...
def getn_sreg_range(*args) -> bool: ...
def get_sreg_range_num(*args) -> int: ...
def del_sreg_range(*args) -> bool: ...
def copy_sreg_ranges(*args) -> None: ...
