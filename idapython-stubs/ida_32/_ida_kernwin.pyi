# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from typing import Any, overload

AA_CHECKABLE: int
AA_CHECKED: int
AA_ICON: int
AA_LABEL: int
AA_NONE: int
AA_SHORTCUT: int
AA_STATE: int
AA_TOOLTIP: int
AA_VISIBILITY: int
ACF_HAS_FIELD_DIRTREE_SELECTION: int
ACF_HAS_SELECTION: int
ACF_HAS_SOURCE: int
ACF_HAS_TYPE_REF: int
ACF_XTRN_EA: int
ADF_CHECKABLE: int
ADF_CHECKED: int
ADF_GLOBAL: int
ADF_NO_HIGHLIGHT: int
ADF_NO_UNDO: int
ADF_OT_MASK: int
ADF_OT_PLUGIN: int
ADF_OT_PLUGMOD: int
ADF_OT_PROCMOD: int
ADF_OWN_HANDLER: int
AHF_VERSION: int
AHF_VERSION_MASK: int
ASKBTN_BTN1: int
ASKBTN_BTN2: int
ASKBTN_BTN3: int
ASKBTN_CANCEL: int
ASKBTN_NO: int
ASKBTN_YES: int
AST_DISABLE: int
AST_DISABLE_ALWAYS: int
AST_DISABLE_FOR_IDB: int
AST_DISABLE_FOR_WIDGET: int
AST_ENABLE: int
AST_ENABLE_ALWAYS: int
AST_ENABLE_FOR_IDB: int
AST_ENABLE_FOR_WIDGET: int
BWN_ADDRWATCH: int
BWN_BOOKMARKS: int
BWN_BPTS: int
BWN_CALLS: int
BWN_CALLS_CALLEES: int
BWN_CALLS_CALLERS: int
BWN_CALL_STACK: int
BWN_CHOOSER: int
BWN_CLI: int
BWN_CMDPALCSR: int
BWN_CMDPALWIN: int
BWN_CPUREGS: int
BWN_CUSTVIEW: int
BWN_CV_LINE_INFOS: int
BWN_DISASM: int
BWN_DISASMS: int
BWN_DISASM_ARROWS: int
BWN_DUMP: int
BWN_DUMPS: int
BWN_ENUMS: int
BWN_EXPORTS: int
BWN_FRAME: int
BWN_FUNCS: int
BWN_IMPORTS: int
BWN_LOCALS: int
BWN_LOCTYPS: int
BWN_MDVIEWCSR: int
BWN_MODULES: int
BWN_NAMES: int
BWN_NAVBAND: int
BWN_NOTEPAD: int
BWN_OUTPUT: int
BWN_PROBS: int
BWN_PSEUDOCODE: int
BWN_SCRIPTS_CSR: int
BWN_SEARCH: int
BWN_SEARCHS: int
BWN_SEGREGS: int
BWN_SEGS: int
BWN_SELS: int
BWN_SHORTCUTCSR: int
BWN_SHORTCUTWIN: int
BWN_SIGNS: int
BWN_SNIPPETS: int
BWN_SNIPPETS_CSR: int
BWN_SO_OFFSETS: int
BWN_SO_STRUCTS: int
BWN_SRCPTHMAP_CSR: int
BWN_SRCPTHUND_CSR: int
BWN_STACK: int
BWN_STKVIEW: int
BWN_STRINGS: int
BWN_STRUCTS: int
BWN_THREADS: int
BWN_TILIST: int
BWN_TILS: int
BWN_TRACE: int
BWN_UNDOHIST: int
BWN_UNKNOWN: int
BWN_WATCH: int
BWN_XREFS: int
CB_CANCEL: int
CB_CLOSE: int
CB_DESTROYING: int
CB_INIT: int
CB_INVISIBLE: int
CB_NO: int
CB_YES: int
CDVF_LINEICONS: int
CDVF_NOLINES: int
CDVF_STATUSBAR: int
CDVH_LINES_ALIGNMENT: int
CDVH_LINES_CLICK: int
CDVH_LINES_DBLCLICK: int
CDVH_LINES_DRAWICON: int
CDVH_LINES_ICONMARGIN: int
CDVH_LINES_LINENUM: int
CDVH_LINES_POPUP: int
CDVH_LINES_RADIX: int
CDVH_SRCVIEW: int
CDVH_USERDATA: int
CH2_HAS_INODE2INDEX: int
CH2_LAZY_LOADED: int
CHCOL_DEC: int
CHCOL_DEFHIDDEN: int
CHCOL_DRAGHINT: int
CHCOL_EA: int
CHCOL_FNAME: int
CHCOL_FORMAT: int
CHCOL_HEX: int
CHCOL_INODENAME: int
CHCOL_PATH: int
CHCOL_PLAIN: int
CHITEM_BOLD: int
CHITEM_GRAY: int
CHITEM_ITALIC: int
CHITEM_STRIKE: int
CHITEM_UNDER: int
CHOOSER_MENU_EDIT: int
CHOOSER_MENU_JUMP: int
CHOOSER_MENU_SEARCH: int
CHOOSER_MULTI_SELECTION: int
CHOOSER_NOMAINMENU: str
CHOOSER_NOSTATUSBAR: str
CHOOSER_NO_SELECTION: int
CHOOSER_POPUP_MENU: int
CH_ATTRS: int
CH_BUILTIN_MASK: int
CH_BUILTIN_SHIFT: int
CH_CAN_DEL: int
CH_CAN_EDIT: int
CH_CAN_INS: int
CH_CAN_REFRESH: int
CH_FORCE_DEFAULT: int
CH_HAS_DIFF: int
CH_HAS_DIRTREE: int
CH_KEEP: int
CH_MODAL: int
CH_MULTI: int
CH_MULTI_EDIT: int
CH_NOBTNS: int
CH_NOIDB: int
CH_NON_PERSISTED_TREE: int
CH_NO_FILTER: int
CH_NO_SORT: int
CH_NO_STATUS_BAR: int
CH_QFLT: int
CH_QFTYP_DEFAULT: int
CH_QFTYP_FUZZY: int
CH_QFTYP_MASK: int
CH_QFTYP_NORMAL: int
CH_QFTYP_REGEX: int
CH_QFTYP_SHIFT: int
CH_QFTYP_WHOLE_WORDS: int
CH_RENAME_IS_EDIT: int
CH_RESTORE: int
CH_TM_FOLDERS_ONLY: int
CH_TM_FULL_TREE: int
CH_TM_MASK: int
CH_TM_NO_TREE: int
CH_TM_SHIFT: int
CH_UNUSED: int
CK_EXTRA1: int
CK_EXTRA10: int
CK_EXTRA11: int
CK_EXTRA12: int
CK_EXTRA13: int
CK_EXTRA14: int
CK_EXTRA15: int
CK_EXTRA16: int
CK_EXTRA2: int
CK_EXTRA3: int
CK_EXTRA4: int
CK_EXTRA5: int
CK_EXTRA6: int
CK_EXTRA7: int
CK_EXTRA8: int
CK_EXTRA9: int
CK_TRACE: int
CK_TRACE_OVL: int
CLNL_FINDCMT: int
CLNL_LTRIM: int
CLNL_RTRIM: int
CLNL_TRIM: int
CREATETB_ADV: int
CVH_CLICK: int
CVH_CLOSE: int
CVH_CURPOS: int
CVH_DBLCLICK: int
CVH_HELP: int
CVH_KEYDOWN: int
CVH_MOUSEMOVE: int
CVH_POPUP: int
CVH_QT_AWARE: int
CVH_USERDATA: int
CVLF_USE_MOUSE: int
CVNF_ACT: int
CVNF_JUMP: int
CVNF_LAZY: int
DEFAULT_PLACE_LNNUM: int
DP_BEFORE: int
DP_BOTTOM: int
DP_FLOATING: int
DP_INSIDE: int
DP_LEFT: int
DP_RIGHT: int
DP_SZHINT: int
DP_TAB: int
DP_TOP: int
GCRF_ALL: int
GCRF_CURRENT: int
GCRF_HEADER: int
GCRF_HIGH_BIT: int
GCRF_SELECTION: int
HIF_IDENTIFIER: int
HIF_LOCKED: int
HIF_NOCASE: int
HIF_REGISTER: int
HIF_SLOT_0: int
HIF_SLOT_1: int
HIF_SLOT_2: int
HIF_SLOT_3: int
HIF_SLOT_4: int
HIF_SLOT_5: int
HIF_SLOT_6: int
HIF_SLOT_7: int
HIF_SLOT_SHIFT: int
HIF_USE_SLOT: int
HIST_CMD: int
HIST_CMT: int
HIST_DIR: int
HIST_FILE: int
HIST_IDENT: int
HIST_IDENT2: int
HIST_SEG: int
HIST_SRCH: int
HIST_TYPE: int
IDA_DEBUG_ACCESSIBILITY: int
IDA_DEBUG_ALREADY: int
IDA_DEBUG_ALWAYS: int
IDA_DEBUG_APPCALL: int
IDA_DEBUG_CHECKMEM: int
IDA_DEBUG_CONFIG: int
IDA_DEBUG_DBGINFO: int
IDA_DEBUG_DEBUGGER: int
IDA_DEBUG_DEMANGLE: int
IDA_DEBUG_DREFS: int
IDA_DEBUG_FLIRT: int
IDA_DEBUG_IDP: int
IDA_DEBUG_IDS: int
IDA_DEBUG_INTERNET: int
IDA_DEBUG_LDR: int
IDA_DEBUG_LICENSE: int
IDA_DEBUG_LUMINA: int
IDA_DEBUG_NETWORK: int
IDA_DEBUG_NOTIFY: int
IDA_DEBUG_OFFSET: int
IDA_DEBUG_PLUGIN: int
IDA_DEBUG_QUEUE: int
IDA_DEBUG_REGEX: int
IDA_DEBUG_ROLLBACK: int
IDA_DEBUG_SIMPLEX: int
IDA_DEBUG_SRCDBG: int
IDA_DEBUG_SUBPROC: int
IDA_DEBUG_THEMES: int
IDA_DEBUG_TIL: int
IDCHK_ARG: int
IDCHK_KEY: int
IDCHK_MAX: int
IDCHK_OK: int
IK_ADD: int
IK_APPS: int
IK_BACK: int
IK_BROWSER_BACK: int
IK_BROWSER_FAVORITES: int
IK_BROWSER_FORWARD: int
IK_BROWSER_HOME: int
IK_BROWSER_REFRESH: int
IK_BROWSER_SEARCH: int
IK_BROWSER_STOP: int
IK_CANCEL: int
IK_CAPITAL: int
IK_CLEAR: int
IK_CONTROL: int
IK_DECIMAL: int
IK_DELETE: int
IK_DIVIDE: int
IK_DOWN: int
IK_END: int
IK_ESCAPE: int
IK_EXECUTE: int
IK_F1: int
IK_F10: int
IK_F11: int
IK_F12: int
IK_F13: int
IK_F14: int
IK_F15: int
IK_F16: int
IK_F17: int
IK_F18: int
IK_F19: int
IK_F2: int
IK_F20: int
IK_F21: int
IK_F22: int
IK_F23: int
IK_F24: int
IK_F3: int
IK_F4: int
IK_F5: int
IK_F6: int
IK_F7: int
IK_F8: int
IK_F9: int
IK_HELP: int
IK_HOME: int
IK_INSERT: int
IK_KANA: int
IK_LAUNCH_APP1: int
IK_LAUNCH_APP2: int
IK_LAUNCH_MAIL: int
IK_LAUNCH_MEDIA_SELECT: int
IK_LCONTROL: int
IK_LEFT: int
IK_LMENU: int
IK_LSHIFT: int
IK_LWIN: int
IK_MEDIA_NEXT_TRACK: int
IK_MEDIA_PLAY_PAUSE: int
IK_MEDIA_PREV_TRACK: int
IK_MEDIA_STOP: int
IK_MENU: int
IK_MODECHANGE: int
IK_MULTIPLY: int
IK_NEXT: int
IK_NUMLOCK: int
IK_NUMPAD0: int
IK_NUMPAD1: int
IK_NUMPAD2: int
IK_NUMPAD3: int
IK_NUMPAD4: int
IK_NUMPAD5: int
IK_NUMPAD6: int
IK_NUMPAD7: int
IK_NUMPAD8: int
IK_NUMPAD9: int
IK_OEM_1: int
IK_OEM_102: int
IK_OEM_2: int
IK_OEM_3: int
IK_OEM_4: int
IK_OEM_5: int
IK_OEM_6: int
IK_OEM_7: int
IK_OEM_CLEAR: int
IK_OEM_COMMA: int
IK_OEM_FJ_MASSHOU: int
IK_OEM_FJ_TOUROKU: int
IK_OEM_MINUS: int
IK_OEM_PERIOD: int
IK_OEM_PLUS: int
IK_PAUSE: int
IK_PLAY: int
IK_PRINT: int
IK_PRIOR: int
IK_RCONTROL: int
IK_RETURN: int
IK_RIGHT: int
IK_RMENU: int
IK_RSHIFT: int
IK_RWIN: int
IK_SCROLL: int
IK_SELECT: int
IK_SEPARATOR: int
IK_SHIFT: int
IK_SLEEP: int
IK_SNAPSHOT: int
IK_SPACE: int
IK_SUBTRACT: int
IK_TAB: int
IK_UP: int
IK_VOLUME_DOWN: int
IK_VOLUME_MUTE: int
IK_VOLUME_UP: int
IK_ZOOM: int
IWID_ADDRWATCH: int
IWID_ALL: int
IWID_BOOKMARKS: int
IWID_BPTS: int
IWID_CALLS: int
IWID_CALLS_CALLEES: int
IWID_CALLS_CALLERS: int
IWID_CALL_STACK: int
IWID_CHOOSER: int
IWID_CLI: int
IWID_CMDPALCSR: int
IWID_CMDPALWIN: int
IWID_CPUREGS: int
IWID_CUSTVIEW: int
IWID_CV_LINE_INFOS: int
IWID_DISASM: int
IWID_DISASMS: int
IWID_DISASM_ARROWS: int
IWID_DUMP: int
IWID_DUMPS: int
IWID_ENUMS: int
IWID_EXPORTS: int
IWID_FRAME: int
IWID_FUNCS: int
IWID_IMPORTS: int
IWID_LOCALS: int
IWID_LOCTYPS: int
IWID_MDVIEWCSR: int
IWID_MODULES: int
IWID_NAMES: int
IWID_NAVBAND: int
IWID_NOTEPAD: int
IWID_OUTPUT: int
IWID_PROBS: int
IWID_PSEUDOCODE: int
IWID_SCRIPTS_CSR: int
IWID_SEARCH: int
IWID_SEARCHS: int
IWID_SEGREGS: int
IWID_SEGS: int
IWID_SELS: int
IWID_SHORTCUTCSR: int
IWID_SHORTCUTWIN: int
IWID_SIGNS: int
IWID_SNIPPETS: int
IWID_SNIPPETS_CSR: int
IWID_SO_OFFSETS: int
IWID_SO_STRUCTS: int
IWID_SRCPTHMAP_CSR: int
IWID_SRCPTHUND_CSR: int
IWID_STACK: int
IWID_STKVIEW: int
IWID_STRINGS: int
IWID_STRUCTS: int
IWID_THREADS: int
IWID_TILIST: int
IWID_TILS: int
IWID_TRACE: int
IWID_UNDOHIST: int
IWID_WATCH: int
IWID_XREFS: int
LECVT_CANCELED: int
LECVT_ERROR: int
LECVT_OK: int
LECVT_WITHIN_LISTING: int
LROEF_CPS_RANGE: int
LROEF_FULL_LINE: int
LROEF_MASK: int
MAX_SPACES_ADDED: int
MFF_FAST: int
MFF_NOWAIT: int
MFF_READ: int
MFF_WRITE: int
PCF_EA_CAPABLE: int
PCF_MAKEPLACE_ALLOCATES: int
REG_HINTS_MARKER: str
REG_HINTS_MARKER_LEN: int
RENADDR_HR: int
RENADDR_IDA: int
S2EAOPT_NOCALC: int
SETMENU_APP: int
SETMENU_ENSURE_SEP: int
SETMENU_FIRST: int
SETMENU_INS: int
SETMENU_POSMASK: int
SRCDBG_HINTS_MARKER: str
SRCDBG_HINTS_MARKER_LEN: int
SVF_COPY_LINES: int
SVF_LINES_BYPTR: int
SWIG_PYTHON_LEGACY_BOOL: int
TCCPT_ENUMPLACE: int
TCCPT_IDAPLACE: int
TCCPT_INVALID: int
TCCPT_PLACE: int
TCCPT_SIMPLELINE_PLACE: int
TCCPT_STRUCTPLACE: int
TCCPT_TIPLACE: int
TCCRT_FLAT: int
TCCRT_GRAPH: int
TCCRT_INVALID: int
TCCRT_PROXIMITY: int
UIJMP_ACTIVATE: int
UIJMP_ANYVIEW: int
UIJMP_DONTPUSH: int
UIJMP_IDAVIEW: int
UIJMP_IDAVIEW_NEW: int
UIJMP_VIEWMASK: int
VES_ALT: int
VES_CTRL: int
VES_META: int
VES_MOUSE_LEFT: int
VES_MOUSE_MIDDLE: int
VES_MOUSE_RIGHT: int
VES_SHIFT: int
VME_LEFT_BUTTON: int
VME_MID_BUTTON: int
VME_RIGHT_BUTTON: int
VME_UNKNOWN: int
WCLS_CLOSE_LATER: int
WCLS_DELETE_LATER: int
WCLS_DONT_SAVE_SIZE: int
WCLS_NO_CONTEXT: int
WCLS_SAVE: int
WOPN_CLOSED_BY_ESC: int
WOPN_DP_BEFORE: int
WOPN_DP_BOTTOM: int
WOPN_DP_FLOATING: int
WOPN_DP_INSIDE: int
WOPN_DP_INSIDE_BEFORE: int
WOPN_DP_LEFT: int
WOPN_DP_MASK: int
WOPN_DP_RIGHT: int
WOPN_DP_SHIFT: int
WOPN_DP_SZHINT: int
WOPN_DP_TAB: int
WOPN_DP_TAB_BEFORE: int
WOPN_DP_TOP: int
WOPN_NOT_CLOSED_BY_ESC: int
WOPN_PERSIST: int
WOPN_RESTORE: int
beep_default: int
chooser_base_t_NSTDPOPUPS: int
chooser_base_t_POPUP_DEL: int
chooser_base_t_POPUP_EDIT: int
chooser_base_t_POPUP_INS: int
chooser_base_t_POPUP_REFRESH: int
chtype_entry: int
chtype_enum: int
chtype_enum_by_value: int
chtype_enum_by_value_and_size: int
chtype_func: int
chtype_generic: int
chtype_idasgn: int
chtype_idatil: int
chtype_name: int
chtype_obsolete_enum: int
chtype_obsolete_enum_by_value_and_size: int
chtype_obsolete_struc: int
chtype_segm: int
chtype_srcp: int
chtype_stkvar_xref: int
chtype_strpath: int
chtype_struct: int
chtype_xref: int
cvar: Any
iek_key_press: int
iek_key_release: int
iek_mouse_button_press: int
iek_mouse_button_release: int
iek_mouse_wheel: int
iek_shortcut: int
iek_unknown: int
mbox_error: int
mbox_feedback: int
mbox_filestruct: int
mbox_hide: int
mbox_info: int
mbox_internal: int
mbox_nomem: int
mbox_readerror: int
mbox_replace: int
mbox_wait: int
mbox_warning: int
mbox_writeerror: int
msg_activated: int
msg_click: int
msg_closed: int
msg_dblclick: int
msg_deactivated: int
msg_keydown: int
nat_auto: int
nat_cod: int
nat_cur: int
nat_dat: int
nat_err: int
nat_ext: int
nat_fun: int
nat_gap: int
nat_hlo: int
nat_last: int
nat_lib: int
nat_lum: int
nat_und: int
view_activated: int
view_click: int
view_close: int
view_created: int
view_curpos: int
view_dblclick: int
view_deactivated: int
view_keydown: int
view_loc_changed: int
view_mouse_moved: int
view_mouse_over: int
view_switched: int

def TWidget__from_ptrval__(*args, **kwargs): ...
def UI_Hooks_create_desktop_widget(*args, **kwargs): ...
def UI_Hooks_current_widget_changed(self, widget, prev_widget) -> Any: ...
def UI_Hooks_database_closed(self) -> Any: ...
def UI_Hooks_database_inited(self, is_new_database, idc_script) -> Any: ...
def UI_Hooks_debugger_menu_change(self, enable) -> Any: ...
def UI_Hooks_desktop_applied(self, name, from_idb, type) -> Any: ...
def UI_Hooks_destroying_plugmod(self, plugmod, entry) -> Any: ...
def UI_Hooks_destroying_procmod(self, procmod) -> Any: ...
def UI_Hooks_finish_populating_widget_popup(self, widget, popup_handle, ctx=...) -> Any: ...
def UI_Hooks_get_chooser_item_attrs(self, chooser, n, attrs) -> Any: ...
def UI_Hooks_get_custom_viewer_hint(*args, **kwargs): ...
def UI_Hooks_get_ea_hint(*args, **kwargs): ...
def UI_Hooks_get_item_hint(*args, **kwargs): ...
def UI_Hooks_get_lines_rendering_info(self, out, widget, info) -> Any: ...
def UI_Hooks_get_widget_config(*args, **kwargs): ...
def UI_Hooks_hook(self) -> bool: ...
def UI_Hooks_idcstart(self) -> Any: ...
def UI_Hooks_idcstop(self) -> Any: ...
def UI_Hooks_initing_database(self) -> Any: ...
def UI_Hooks_plugin_loaded(self, plugin_info) -> Any: ...
def UI_Hooks_plugin_unloading(self, plugin_info) -> Any: ...
def UI_Hooks_populating_widget_popup(self, widget, popup_handle, ctx=...) -> Any: ...
def UI_Hooks_postprocess_action(self) -> Any: ...
def UI_Hooks_preprocess_action(self, name) -> int: ...
def UI_Hooks_range(self) -> Any: ...
def UI_Hooks_ready_to_run(self) -> Any: ...
def UI_Hooks_resume(self) -> Any: ...
def UI_Hooks_saved(self, path) -> Any: ...
def UI_Hooks_saving(self) -> Any: ...
def UI_Hooks_screen_ea_changed(self, ea, prev_ea) -> Any: ...
def UI_Hooks_set_widget_config(self, widget, cfg) -> Any: ...
def UI_Hooks_suspend(self) -> Any: ...
def UI_Hooks_swiginit(*args, **kwargs): ...
def UI_Hooks_swigregister(*args, **kwargs): ...
def UI_Hooks_unhook(self) -> bool: ...
def UI_Hooks_updated_actions(self) -> Any: ...
def UI_Hooks_updating_actions(self, ctx) -> Any: ...
def UI_Hooks_widget_closing(self, widget) -> Any: ...
def UI_Hooks_widget_invisible(self, widget) -> Any: ...
def UI_Hooks_widget_visible(self, widget) -> Any: ...
def View_Hooks_hook(self) -> bool: ...
def View_Hooks_swiginit(*args, **kwargs): ...
def View_Hooks_swigregister(*args, **kwargs): ...
def View_Hooks_unhook(self) -> bool: ...
def View_Hooks_view_activated(self, view) -> Any: ...
def View_Hooks_view_click(self, view, event) -> Any: ...
def View_Hooks_view_close(self, view) -> Any: ...
def View_Hooks_view_created(self, view) -> Any: ...
def View_Hooks_view_curpos(self, view) -> Any: ...
def View_Hooks_view_dblclick(self, view, event) -> Any: ...
def View_Hooks_view_deactivated(self, view) -> Any: ...
def View_Hooks_view_keydown(self, view, key, state) -> Any: ...
def View_Hooks_view_loc_changed(self, view, now, was) -> Any: ...
def View_Hooks_view_mouse_moved(self, view, event) -> Any: ...
def View_Hooks_view_mouse_over(self, view, event) -> Any: ...
def View_Hooks_view_switched(self, view, rt) -> Any: ...
def __qtimer_t_swiginit(*args, **kwargs): ...
def __qtimer_t_swigregister(*args, **kwargs): ...
def _ask_addr(addr, format) -> bool: ...
def _ask_long(value, format) -> bool: ...
def _ask_seg(sel, format) -> bool: ...
def _kludge_force_declare_dirspec_t(arg1) -> Any: ...
def _kludge_force_declare_dirtree_t(arg1) -> Any: ...
def action_ctx_base_cur_sel_t__from_get(self) -> twinpos_t: ...
def action_ctx_base_cur_sel_t__from_set(self, _from) -> Any: ...
def action_ctx_base_cur_sel_t_reset(self) -> Any: ...
def action_ctx_base_cur_sel_t_swiginit(*args, **kwargs): ...
def action_ctx_base_cur_sel_t_swigregister(*args, **kwargs): ...
def action_ctx_base_cur_sel_t_to_get(self) -> twinpos_t: ...
def action_ctx_base_cur_sel_t_to_set(self, to) -> Any: ...
def action_ctx_base_source_t_chooser_get(self) -> chooser_base_t: ...
def action_ctx_base_source_t_chooser_set(self, chooser) -> Any: ...
def action_ctx_base_source_t_reset(self) -> Any: ...
def action_ctx_base_source_t_swiginit(*args, **kwargs): ...
def action_ctx_base_source_t_swigregister(*args, **kwargs): ...
def action_ctx_base_t_action_get(*args, **kwargs): ...
def action_ctx_base_t_action_set(self, action) -> Any: ...
def action_ctx_base_t_chooser_selection_get(*args, **kwargs): ...
def action_ctx_base_t_chooser_selection_set(self, chooser_selection) -> Any: ...
def action_ctx_base_t_cur_ea_get(self) -> ea_t: ...
def action_ctx_base_t_cur_ea_set(self, cur_ea) -> Any: ...
def action_ctx_base_t_cur_enum_get(self) -> enum_t: ...
def action_ctx_base_t_cur_enum_member_get(self) -> const_t: ...
def action_ctx_base_t_cur_enum_member_set(self, cur_enum_member) -> Any: ...
def action_ctx_base_t_cur_enum_set(self, cur_enum) -> Any: ...
def action_ctx_base_t_cur_fchunk_get(*args, **kwargs): ...
def action_ctx_base_t_cur_fchunk_set(self, cur_fchunk) -> Any: ...
def action_ctx_base_t_cur_flags_get(self) -> uint32: ...
def action_ctx_base_t_cur_flags_set(self, cur_flags) -> Any: ...
def action_ctx_base_t_cur_func_get(*args, **kwargs): ...
def action_ctx_base_t_cur_func_set(self, cur_func) -> Any: ...
def action_ctx_base_t_cur_seg_get(*args, **kwargs): ...
def action_ctx_base_t_cur_seg_set(self, cur_seg) -> Any: ...
def action_ctx_base_t_cur_sel_get(self) -> action_ctx_base_cur_sel_t: ...
def action_ctx_base_t_cur_sel_set(self, cur_sel) -> Any: ...
def action_ctx_base_t_cur_strmem_get(*args, **kwargs): ...
def action_ctx_base_t_cur_strmem_set(self, cur_strmem) -> Any: ...
def action_ctx_base_t_cur_struc_get(*args, **kwargs): ...
def action_ctx_base_t_cur_struc_set(self, cur_struc) -> Any: ...
def action_ctx_base_t_cur_value_get(self) -> uval_t: ...
def action_ctx_base_t_cur_value_set(self, cur_value) -> Any: ...
def action_ctx_base_t_dirtree_selection_get(*args, **kwargs): ...
def action_ctx_base_t_dirtree_selection_set(self, dirtree_selection) -> Any: ...
def action_ctx_base_t_focus_get(*args, **kwargs): ...
def action_ctx_base_t_focus_set(self, focus) -> Any: ...
def action_ctx_base_t_graph_selection_get(*args, **kwargs): ...
def action_ctx_base_t_graph_selection_set(self, graph_selection) -> Any: ...
def action_ctx_base_t_has_flag(self, flag) -> bool: ...
def action_ctx_base_t_regname_get(*args, **kwargs): ...
def action_ctx_base_t_regname_set(self, regname) -> Any: ...
def action_ctx_base_t_reset(self) -> Any: ...
def action_ctx_base_t_source_get(self) -> action_ctx_base_source_t: ...
def action_ctx_base_t_source_set(self, source) -> Any: ...
def action_ctx_base_t_swiginit(*args, **kwargs): ...
def action_ctx_base_t_swigregister(*args, **kwargs): ...
def action_ctx_base_t_type_ref_get(*args, **kwargs): ...
def action_ctx_base_t_type_ref_set(self, type_ref) -> Any: ...
def action_ctx_base_t_widget_get(*args, **kwargs): ...
def action_ctx_base_t_widget_set(self, widget) -> Any: ...
def action_ctx_base_t_widget_title_get(*args, **kwargs): ...
def action_ctx_base_t_widget_title_set(self, widget_title) -> Any: ...
def action_ctx_base_t_widget_type_get(self) -> twidget_type_t: ...
def action_ctx_base_t_widget_type_set(self, widget_type) -> Any: ...
def action_desc_t_cb_get(self) -> int: ...
def action_desc_t_cb_set(self, cb) -> Any: ...
def action_desc_t_flags_get(self) -> int: ...
def action_desc_t_flags_set(self, flags) -> Any: ...
def action_desc_t_icon_get(self) -> int: ...
def action_desc_t_icon_set(self, icon) -> Any: ...
def action_desc_t_label_get(*args, **kwargs): ...
def action_desc_t_label_set(self, label) -> Any: ...
def action_desc_t_name_get(*args, **kwargs): ...
def action_desc_t_name_set(self, name) -> Any: ...
def action_desc_t_owner_get(*args, **kwargs): ...
def action_desc_t_owner_set(self, owner) -> Any: ...
def action_desc_t_shortcut_get(*args, **kwargs): ...
def action_desc_t_shortcut_set(self, shortcut) -> Any: ...
def action_desc_t_swiginit(*args, **kwargs): ...
def action_desc_t_swigregister(*args, **kwargs): ...
def action_desc_t_tooltip_get(*args, **kwargs): ...
def action_desc_t_tooltip_set(self, tooltip) -> Any: ...
def activate_widget(widget, take_focus) -> Any: ...
def add_hotkey(*args, **kwargs): ...
def add_idc_hotkey(hotkey, idcfunc) -> int: ...
def add_spaces(*args, **kwargs): ...
def addon_count() -> int: ...
def addon_info_t_cb_get(self) -> size_t: ...
def addon_info_t_cb_set(self, cb) -> Any: ...
def addon_info_t_custom_data_get(*args, **kwargs): ...
def addon_info_t_custom_data_set(self, custom_data) -> Any: ...
def addon_info_t_custom_size_get(self) -> size_t: ...
def addon_info_t_custom_size_set(self, custom_size) -> Any: ...
def addon_info_t_freeform_get(*args, **kwargs): ...
def addon_info_t_freeform_set(self, freeform) -> Any: ...
def addon_info_t_id_get(*args, **kwargs): ...
def addon_info_t_id_set(self, id) -> Any: ...
def addon_info_t_name_get(*args, **kwargs): ...
def addon_info_t_name_set(self, name) -> Any: ...
def addon_info_t_producer_get(*args, **kwargs): ...
def addon_info_t_producer_set(self, producer) -> Any: ...
def addon_info_t_swiginit(*args, **kwargs): ...
def addon_info_t_swigregister(*args, **kwargs): ...
def addon_info_t_url_get(*args, **kwargs): ...
def addon_info_t_url_set(self, url) -> Any: ...
def addon_info_t_version_get(*args, **kwargs): ...
def addon_info_t_version_set(self, version) -> Any: ...
def analyzer_options() -> Any: ...
def ask_buttons(Yes, No, Cancel, deflt, format) -> int: ...
def ask_file(*args, **kwargs): ...
def ask_for_feedback(format) -> Any: ...
def ask_ident2(str, format) -> bool: ...
def ask_str(*args, **kwargs): ...
def ask_text(*args, **kwargs): ...
def ask_yn(deflt, format) -> int: ...
def atoea(str) -> bool: ...
def attach_action_to_menu(menupath, name, flags=...) -> bool: ...
def attach_action_to_popup(widget, popup_handle, name, popuppath=..., flags=...) -> bool: ...
def attach_action_to_toolbar(toolbar_name, name) -> bool: ...
def attach_dynamic_action_to_popup(unused, popup_handle, desc, popuppath=..., flags=...) -> bool: ...
def banner(wait) -> bool: ...
def beep(beep_type=...) -> Any: ...
def call_nav_colorizer(dict, ea, nbytes) -> uint32: ...
def cancel_exec_request(req_id) -> bool: ...
def cancel_thread_exec_requests(tid) -> int: ...
def choose_activate(_self) -> Any: ...
def choose_choose(*args, **kwargs): ...
def choose_close(_self) -> Any: ...
def choose_create_embedded_chobj(*args, **kwargs): ...
def choose_entry(title) -> ea_t: ...
@overload
def choose_enum(out, title, default_ord) -> bool: ...
@overload
def choose_enum(title, default_id) -> enum_t: ...
@overload
def choose_enum_by_value(out, title, default_ord, value, nbytes) -> bool: ...
@overload
def choose_enum_by_value(title, default_id, value, nbytes) -> enum_t: ...
def choose_find(*args, **kwargs): ...
def choose_func(*args, **kwargs): ...
def choose_get_widget(*args, **kwargs): ...
def choose_idasgn(*args, **kwargs): ...
def choose_name(title) -> ea_t: ...
def choose_refresh(_self) -> Any: ...
def choose_segm(*args, **kwargs): ...
def choose_srcp(*args, **kwargs): ...
def choose_stkvar_xref(pfn, mptr) -> ea_t: ...
def choose_struc(*args, **kwargs): ...
def choose_struct(out, title) -> bool: ...
def choose_til() -> bool: ...
def choose_xref(to) -> ea_t: ...
def chooser_base_t_ask_item_attrs(self) -> bool: ...
def chooser_base_t_can_del(self) -> bool: ...
def chooser_base_t_can_edit(self) -> bool: ...
def chooser_base_t_can_filter(self) -> bool: ...
def chooser_base_t_can_ins(self) -> bool: ...
def chooser_base_t_can_refresh(self) -> bool: ...
def chooser_base_t_can_sort(self) -> bool: ...
def chooser_base_t_columns_get(self) -> int: ...
def chooser_base_t_deflt_col_get(self) -> int: ...
def chooser_base_t_get_builtin_number(self) -> uint: ...
def chooser_base_t_get_count(self) -> size_t: ...
def chooser_base_t_get_ea(self, arg2) -> ea_t: ...
def chooser_base_t_get_quick_filter_initial_mode(self) -> int: ...
def chooser_base_t_get_row(*args, **kwargs): ...
def chooser_base_t_has_diff_capability(self) -> bool: ...
def chooser_base_t_has_dirtree(self) -> bool: ...
def chooser_base_t_has_inode_to_index(self) -> bool: ...
def chooser_base_t_header_get(*args, **kwargs): ...
def chooser_base_t_height_get(self) -> int: ...
def chooser_base_t_icon_get(self) -> int: ...
def chooser_base_t_is_dirtree_persisted(self) -> bool: ...
def chooser_base_t_is_force_default(self) -> bool: ...
def chooser_base_t_is_lazy_loaded(self) -> bool: ...
def chooser_base_t_is_modal(self) -> bool: ...
def chooser_base_t_is_multi(self) -> bool: ...
def chooser_base_t_is_quick_filter_visible_initially(self) -> bool: ...
def chooser_base_t_is_same(self, other) -> bool: ...
def chooser_base_t_is_status_bar_hidden(self) -> bool: ...
def chooser_base_t_popup_allowed(self, stdact_idx) -> bool: ...
def chooser_base_t_popup_names_get(*args, **kwargs): ...
def chooser_base_t_should_rename_trigger_edit(self) -> bool: ...
def chooser_base_t_should_restore_geometry(self) -> bool: ...
def chooser_base_t_swigregister(*args, **kwargs): ...
def chooser_base_t_title_get(*args, **kwargs): ...
def chooser_base_t_width_get(self) -> int: ...
def chooser_base_t_widths_get(*args, **kwargs): ...
def chooser_base_t_x0_get(self) -> int: ...
def chooser_base_t_x1_get(self) -> int: ...
def chooser_base_t_y0_get(self) -> int: ...
def chooser_base_t_y1_get(self) -> int: ...
def chooser_item_attrs_t___eq__(self, other) -> bool: ...
def chooser_item_attrs_t_color_get(self) -> bgcolor_t: ...
def chooser_item_attrs_t_color_set(self, color) -> Any: ...
def chooser_item_attrs_t_flags_get(self) -> int: ...
def chooser_item_attrs_t_flags_set(self, flags) -> Any: ...
def chooser_item_attrs_t_reset(self) -> Any: ...
def chooser_item_attrs_t_swiginit(*args, **kwargs): ...
def chooser_item_attrs_t_swigregister(*args, **kwargs): ...
def chooser_row_info_t___eq__(self, other) -> bool: ...
def chooser_row_info_t___ne__(self, other) -> bool: ...
def chooser_row_info_t_attrs_get(self) -> chooser_item_attrs_t: ...
def chooser_row_info_t_attrs_set(self, attrs) -> Any: ...
def chooser_row_info_t_icon_get(self) -> int: ...
def chooser_row_info_t_icon_set(self, icon) -> Any: ...
def chooser_row_info_t_swiginit(*args, **kwargs): ...
def chooser_row_info_t_swigregister(*args, **kwargs): ...
def chooser_row_info_t_texts_get(*args, **kwargs): ...
def chooser_row_info_t_texts_set(self, texts) -> Any: ...
def chooser_row_info_vec_t___eq__(self, r) -> bool: ...
def chooser_row_info_vec_t___getitem__(self, i) -> chooser_row_info_t: ...
def chooser_row_info_vec_t___len__(self) -> size_t: ...
def chooser_row_info_vec_t___ne__(self, r) -> bool: ...
def chooser_row_info_vec_t___setitem__(self, i, v) -> Any: ...
def chooser_row_info_vec_t__del(self, x) -> bool: ...
def chooser_row_info_vec_t_add_unique(self, x) -> bool: ...
def chooser_row_info_vec_t_at(self, _idx) -> chooser_row_info_t: ...
@overload
def chooser_row_info_vec_t_begin(self) -> chooser_row_info_t: ...
@overload
def chooser_row_info_vec_t_begin(self) -> chooser_row_info_t: ...
def chooser_row_info_vec_t_capacity(self) -> size_t: ...
def chooser_row_info_vec_t_clear(self) -> Any: ...
def chooser_row_info_vec_t_empty(self) -> bool: ...
@overload
def chooser_row_info_vec_t_end(self) -> chooser_row_info_t: ...
@overload
def chooser_row_info_vec_t_end(self) -> chooser_row_info_t: ...
@overload
def chooser_row_info_vec_t_erase(self, it) -> chooser_row_info_t: ...
@overload
def chooser_row_info_vec_t_erase(self, first, last) -> chooser_row_info_t: ...
def chooser_row_info_vec_t_extract(self) -> chooser_row_info_t: ...
@overload
def chooser_row_info_vec_t_find(self, x) -> chooser_row_info_t: ...
@overload
def chooser_row_info_vec_t_find(self, x) -> chooser_row_info_t: ...
def chooser_row_info_vec_t_grow(self, x=...) -> Any: ...
def chooser_row_info_vec_t_has(self, x) -> bool: ...
def chooser_row_info_vec_t_inject(self, s, len) -> Any: ...
def chooser_row_info_vec_t_insert(self, it, x) -> chooser_row_info_t: ...
def chooser_row_info_vec_t_pop_back(self) -> Any: ...
@overload
def chooser_row_info_vec_t_push_back(self, x) -> Any: ...
@overload
def chooser_row_info_vec_t_push_back(self) -> chooser_row_info_t: ...
def chooser_row_info_vec_t_qclear(self) -> Any: ...
def chooser_row_info_vec_t_reserve(self, cnt) -> Any: ...
@overload
def chooser_row_info_vec_t_resize(self, _newsize, x) -> Any: ...
@overload
def chooser_row_info_vec_t_resize(self, _newsize) -> Any: ...
def chooser_row_info_vec_t_size(self) -> size_t: ...
def chooser_row_info_vec_t_swap(self, r) -> Any: ...
def chooser_row_info_vec_t_swiginit(*args, **kwargs): ...
def chooser_row_info_vec_t_swigregister(*args, **kwargs): ...
def chooser_row_info_vec_t_truncate(self) -> Any: ...
def chooser_stdact_desc_t_icon_get(self) -> int: ...
def chooser_stdact_desc_t_icon_set(self, icon) -> Any: ...
def chooser_stdact_desc_t_label_get(*args, **kwargs): ...
def chooser_stdact_desc_t_label_set(self, label) -> Any: ...
def chooser_stdact_desc_t_swiginit(*args, **kwargs): ...
def chooser_stdact_desc_t_swigregister(*args, **kwargs): ...
def chooser_stdact_desc_t_tooltip_get(*args, **kwargs): ...
def chooser_stdact_desc_t_tooltip_set(self, tooltip) -> Any: ...
def chooser_stdact_desc_t_ucb(self, arg0) -> action_state_t: ...
def chooser_stdact_desc_t_version_get(self) -> int: ...
def chooser_stdact_desc_t_version_set(self, version) -> Any: ...
def clear_refresh_request(mask) -> Any: ...
def close_chooser(title) -> bool: ...
def close_widget(widget, options) -> Any: ...
def clr_cancelled() -> Any: ...
def create_code_viewer(*args, **kwargs): ...
def create_empty_widget(*args, **kwargs): ...
def create_menu(name, label, menupath=...) -> bool: ...
def create_toolbar(name, label, before=..., flags=...) -> bool: ...
def custom_viewer_jump(v, loc, flags=...) -> bool: ...
def del_hotkey(pyctx) -> bool: ...
def del_idc_hotkey(hotkey) -> bool: ...
def delete_UI_Hooks(self) -> Any: ...
def delete_View_Hooks(self) -> Any: ...
def delete___qtimer_t(self) -> Any: ...
def delete_action_ctx_base_cur_sel_t(self) -> Any: ...
def delete_action_ctx_base_source_t(self) -> Any: ...
def delete_action_ctx_base_t(self) -> Any: ...
def delete_action_desc_t(self) -> Any: ...
def delete_addon_info_t(self) -> Any: ...
def delete_chooser_item_attrs_t(self) -> Any: ...
def delete_chooser_row_info_t(self) -> Any: ...
def delete_chooser_row_info_vec_t(self) -> Any: ...
def delete_chooser_stdact_desc_t(self) -> Any: ...
def delete_disasm_line_t(self) -> Any: ...
def delete_disasm_text_t(self) -> Any: ...
def delete_enumplace_t(self) -> Any: ...
def delete_idaplace_t(self) -> Any: ...
def delete_input_event_keyboard_data_t(self) -> Any: ...
def delete_input_event_mouse_data_t(self) -> Any: ...
def delete_input_event_shortcut_data_t(self) -> Any: ...
def delete_input_event_t(self) -> Any: ...
def delete_line_rendering_output_entries_refs_t(self) -> Any: ...
def delete_line_rendering_output_entry_t(self) -> Any: ...
def delete_line_section_t(self) -> Any: ...
def delete_linearray_t(self) -> Any: ...
def delete_lines_rendering_input_t(self) -> Any: ...
def delete_lines_rendering_output_t(self) -> Any: ...
def delete_listing_location_t(self) -> Any: ...
def delete_menu(name) -> bool: ...
def delete_place_t(self) -> Any: ...
def delete_renderer_pos_info_t(self) -> Any: ...
def delete_section_lines_refs_t(self) -> Any: ...
def delete_sections_lines_refs_t(self) -> Any: ...
def delete_simpleline_place_t(self) -> Any: ...
def delete_simpleline_t(self) -> Any: ...
def delete_strarray_t(self) -> Any: ...
def delete_structplace_t(self) -> Any: ...
def delete_sync_source_t(self) -> Any: ...
def delete_sync_source_vec_t(self) -> Any: ...
def delete_synced_group_t(self) -> Any: ...
def delete_tagged_line_section_t(self) -> Any: ...
def delete_tagged_line_sections_t(self) -> Any: ...
def delete_text_t(self) -> Any: ...
def delete_tiplace_t(self) -> Any: ...
def delete_toolbar(name) -> bool: ...
def delete_twinline_t(self) -> Any: ...
def delete_twinpos_t(self) -> Any: ...
def delete_ui_requests_t(self) -> Any: ...
def delete_view_mouse_event_location_t(self) -> Any: ...
def delete_view_mouse_event_t(self) -> Any: ...
def detach_action_from_menu(menupath, name) -> bool: ...
def detach_action_from_popup(widget, name) -> bool: ...
def detach_action_from_toolbar(toolbar_name, name) -> bool: ...
def disasm_line_t_at_get(self) -> place_t: ...
def disasm_line_t_at_set(self, at) -> Any: ...
def disasm_line_t_bg_color_get(self) -> bgcolor_t: ...
def disasm_line_t_bg_color_set(self, bg_color) -> Any: ...
def disasm_line_t_is_default_get(self) -> bool: ...
def disasm_line_t_is_default_set(self, is_default) -> Any: ...
def disasm_line_t_line_get(*args, **kwargs): ...
def disasm_line_t_line_set(self, line) -> Any: ...
def disasm_line_t_prefix_color_get(self) -> color_t: ...
def disasm_line_t_prefix_color_set(self, prefix_color) -> Any: ...
def disasm_line_t_swiginit(*args, **kwargs): ...
def disasm_line_t_swigregister(*args, **kwargs): ...
def disasm_text_t___getitem__(self, i) -> disasm_line_t: ...
def disasm_text_t___len__(self) -> size_t: ...
def disasm_text_t___setitem__(self, i, v) -> Any: ...
def disasm_text_t_at(self, _idx) -> disasm_line_t: ...
@overload
def disasm_text_t_begin(self) -> disasm_line_t: ...
@overload
def disasm_text_t_begin(self) -> disasm_line_t: ...
def disasm_text_t_capacity(self) -> size_t: ...
def disasm_text_t_clear(self) -> Any: ...
def disasm_text_t_empty(self) -> bool: ...
@overload
def disasm_text_t_end(self) -> disasm_line_t: ...
@overload
def disasm_text_t_end(self) -> disasm_line_t: ...
@overload
def disasm_text_t_erase(self, it) -> disasm_line_t: ...
@overload
def disasm_text_t_erase(self, first, last) -> disasm_line_t: ...
def disasm_text_t_extract(self) -> disasm_line_t: ...
def disasm_text_t_grow(self, x=...) -> Any: ...
def disasm_text_t_inject(self, s, len) -> Any: ...
def disasm_text_t_insert(self, it, x) -> disasm_line_t: ...
def disasm_text_t_pop_back(self) -> Any: ...
@overload
def disasm_text_t_push_back(self, x) -> Any: ...
@overload
def disasm_text_t_push_back(self) -> disasm_line_t: ...
def disasm_text_t_qclear(self) -> Any: ...
def disasm_text_t_reserve(self, cnt) -> Any: ...
@overload
def disasm_text_t_resize(self, _newsize, x) -> Any: ...
@overload
def disasm_text_t_resize(self, _newsize) -> Any: ...
def disasm_text_t_size(self) -> size_t: ...
def disasm_text_t_swap(self, r) -> Any: ...
def disasm_text_t_swiginit(*args, **kwargs): ...
def disasm_text_t_swigregister(*args, **kwargs): ...
def disasm_text_t_truncate(self) -> Any: ...
def disown_UI_Hooks(*args, **kwargs): ...
def disown_View_Hooks(*args, **kwargs): ...
def disown_chooser_stdact_desc_t(*args, **kwargs): ...
def display_copyright_warning() -> bool: ...
def display_widget(widget, options, dest_ctrl=...) -> Any: ...
def ea2str(ea) -> bool: ...
def ea_viewer_history_push_and_jump(v, ea, x, y, lnnum) -> bool: ...
def enable_chooser_item_attrs(chooser_caption, enable) -> bool: ...
def enumplace_t_bmask_get(self) -> bmask_t: ...
def enumplace_t_bmask_set(self, bmask) -> Any: ...
def enumplace_t_idx_get(self) -> size_t: ...
def enumplace_t_idx_set(self, idx) -> Any: ...
def enumplace_t_serial_get(self) -> uchar: ...
def enumplace_t_serial_set(self, serial) -> Any: ...
def enumplace_t_swigregister(*args, **kwargs): ...
def enumplace_t_value_get(self) -> uval_t: ...
def enumplace_t_value_set(self, value) -> Any: ...
def error(format) -> Any: ...
def execute_sync(py_callable, reqf) -> int: ...
def execute_ui_requests(py_list) -> bool: ...
def find_widget(*args, **kwargs): ...
def formchgcbfa_close(p_fa, close_normally) -> Any: ...
def formchgcbfa_enable_field(p_fa, fid, enable) -> bool: ...
def formchgcbfa_get_field_value(*args, **kwargs): ...
def formchgcbfa_get_focused_field(p_fa) -> int: ...
def formchgcbfa_move_field(p_fa, fid, x, y, w, h) -> bool: ...
def formchgcbfa_refresh_field(p_fa, fid) -> Any: ...
def formchgcbfa_set_field_value(p_fa, fid, ft, py_val) -> bool: ...
def formchgcbfa_set_focused_field(p_fa, fid) -> bool: ...
def formchgcbfa_show_field(p_fa, fid, show) -> bool: ...
def free_custom_icon(icon_id) -> Any: ...
def gen_disasm_text(text, ea1, ea2, truncate_lines) -> Any: ...
def get_action_checkable(name) -> bool: ...
def get_action_checked(name) -> bool: ...
def get_action_icon(name) -> bool: ...
def get_action_label(name) -> bool: ...
def get_action_shortcut(name) -> bool: ...
def get_action_state(name) -> bool: ...
def get_action_tooltip(name) -> bool: ...
def get_action_visibility(name) -> bool: ...
def get_active_modal_widget(*args, **kwargs): ...
def get_addon_info(id, info) -> bool: ...
def get_addon_info_idx(index, info) -> bool: ...
def get_chooser_data(*args, **kwargs): ...
def get_chooser_obj(*args, **kwargs): ...
def get_chooser_rows(out, chooser_caption, what) -> bool: ...
def get_curline(*args, **kwargs): ...
def get_current_viewer(*args, **kwargs): ...
def get_current_widget(*args, **kwargs): ...
def get_cursor() -> bool: ...
def get_custom_viewer_curline(*args, **kwargs): ...
@overload
def get_custom_viewer_location(out, custom_viewer, mouse=...) -> bool: ...
@overload
def get_custom_viewer_location(out, custom_viewer, flags=...) -> bool: ...
def get_custom_viewer_place(custom_viewer, mouse) -> place_t: ...
def get_custom_viewer_place_xcoord(custom_viewer, pline, pitem) -> int: ...
def get_ea_viewer_history_info(nback, nfwd, v) -> bool: ...
def get_hexdump_ea(hexdump_num) -> ea_t: ...
def get_highlight(*args, **kwargs): ...
def get_icon_id_by_name(icon_name) -> int: ...
def get_kernel_version() -> ssize_t: ...
def get_key_code(keyname) -> ushort: ...
def get_navband_ea(pixel) -> ea_t: ...
def get_navband_pixel(ea) -> int: ...
def get_opnum() -> int: ...
def get_output_curline(mouse) -> bool: ...
def get_output_cursor() -> bool: ...
def get_output_selected_text() -> bool: ...
def get_place_class(out_flags, out_sdk_version, id) -> place_t: ...
def get_place_class_id(name) -> int: ...
def get_place_class_template(id) -> place_t: ...
def get_registered_actions(*args, **kwargs): ...
def get_screen_ea() -> ea_t: ...
def get_synced_group(w) -> synced_group_t: ...
def get_tab_size(path) -> int: ...
def get_user_input_event(out) -> bool: ...
def get_user_strlist_options(out) -> Any: ...
def get_view_renderer_type(v) -> tcc_renderer_type_t: ...
def get_viewer_place_type(viewer) -> tcc_place_type_t: ...
def get_viewer_user_data(*args, **kwargs): ...
def get_widget_title(widget) -> bool: ...
def get_widget_type(widget) -> twidget_type_t: ...
def get_window_id(*args, **kwargs): ...
def hide_wait_box() -> Any: ...
def idaplace_t_ea_get(self) -> ea_t: ...
def idaplace_t_ea_set(self, ea) -> Any: ...
def idaplace_t_swigregister(*args, **kwargs): ...
def info(format) -> Any: ...
def input_event_keyboard_data_t_key_get(self) -> int: ...
def input_event_keyboard_data_t_key_set(self, key) -> Any: ...
def input_event_keyboard_data_t_swiginit(*args, **kwargs): ...
def input_event_keyboard_data_t_swigregister(*args, **kwargs): ...
def input_event_keyboard_data_t_text_get(self) -> char[8]: ...
def input_event_keyboard_data_t_text_set(self, text) -> Any: ...
def input_event_mouse_data_t_button_get(self) -> vme_button_t: ...
def input_event_mouse_data_t_button_set(self, button) -> Any: ...
def input_event_mouse_data_t_swiginit(*args, **kwargs): ...
def input_event_mouse_data_t_swigregister(*args, **kwargs): ...
def input_event_mouse_data_t_x_get(self) -> int: ...
def input_event_mouse_data_t_x_set(self, x) -> Any: ...
def input_event_mouse_data_t_y_get(self) -> int: ...
def input_event_mouse_data_t_y_set(self, y) -> Any: ...
def input_event_shortcut_data_t_action_name_get(*args, **kwargs): ...
def input_event_shortcut_data_t_action_name_set(self, action_name) -> Any: ...
def input_event_shortcut_data_t_swiginit(*args, **kwargs): ...
def input_event_shortcut_data_t_swigregister(*args, **kwargs): ...
def input_event_t__source_as_size(self) -> size_t: ...
def input_event_t__target_as_size(self) -> size_t: ...
def input_event_t_cb_get(self) -> int: ...
def input_event_t_cb_set(self, cb) -> Any: ...
def input_event_t_keyboard_get(self) -> input_event_keyboard_data_t: ...
def input_event_t_keyboard_set(self, keyboard) -> Any: ...
def input_event_t_kind_get(self) -> input_event_kind_t: ...
def input_event_t_kind_set(self, kind) -> Any: ...
def input_event_t_modifiers_get(self) -> input_event_modifiers_t: ...
def input_event_t_modifiers_set(self, modifiers) -> Any: ...
def input_event_t_mouse_get(self) -> input_event_mouse_data_t: ...
def input_event_t_mouse_set(self, mouse) -> Any: ...
def input_event_t_shortcut_get(self) -> input_event_shortcut_data_t: ...
def input_event_t_shortcut_set(self, shortcut) -> Any: ...
def input_event_t_source_get(*args, **kwargs): ...
def input_event_t_source_set(self, source) -> Any: ...
def input_event_t_swiginit(*args, **kwargs): ...
def input_event_t_swigregister(*args, **kwargs): ...
def input_event_t_target_get(*args, **kwargs): ...
def input_event_t_target_set(self, target) -> Any: ...
def install_command_interpreter(py_obj) -> int: ...
def internal_register_place_class(tmplate, flags, owner, sdk_version) -> int: ...
def is_action_enabled(s) -> bool: ...
def is_chooser_widget(t) -> bool: ...
def is_idaq() -> bool: ...
def is_idaview(v) -> bool: ...
def is_msg_inited() -> bool: ...
def is_place_class_ea_capable(id) -> bool: ...
def is_refresh_requested(mask) -> bool: ...
def is_tif_cursor_footer(c) -> bool: ...
def is_tif_cursor_header(c) -> bool: ...
def is_tif_cursor_index(c) -> bool: ...
def jobj_wrapper_t_get_dict(*args, **kwargs): ...
def jobj_wrapper_t_swigregister(*args, **kwargs): ...
@overload
def jumpto(ea, opnum=..., uijmp_flags=...) -> bool: ...
@overload
def jumpto(custom_viewer, place, x, y) -> bool: ...
def l_compare2(t1, t2, ud) -> int: ...
def line_rendering_output_entries_refs_t___eq__(self, r) -> bool: ...
def line_rendering_output_entries_refs_t___getitem__(self, i) -> line_rendering_output_entry_t: ...
def line_rendering_output_entries_refs_t___len__(self) -> size_t: ...
def line_rendering_output_entries_refs_t___ne__(self, r) -> bool: ...
def line_rendering_output_entries_refs_t___setitem__(self, i, v) -> Any: ...
def line_rendering_output_entries_refs_t__del(self, x) -> bool: ...
def line_rendering_output_entries_refs_t__internal_push_back(self, e) -> Any: ...
def line_rendering_output_entries_refs_t_add_unique(self, x) -> bool: ...
def line_rendering_output_entries_refs_t_at(self, _idx) -> line_rendering_output_entry_t: ...
def line_rendering_output_entries_refs_t_begin(*args, **kwargs): ...
def line_rendering_output_entries_refs_t_capacity(self) -> size_t: ...
def line_rendering_output_entries_refs_t_clear(self) -> Any: ...
def line_rendering_output_entries_refs_t_empty(self) -> bool: ...
def line_rendering_output_entries_refs_t_end(*args, **kwargs): ...
def line_rendering_output_entries_refs_t_erase(*args, **kwargs): ...
def line_rendering_output_entries_refs_t_extract(*args, **kwargs): ...
def line_rendering_output_entries_refs_t_find(*args, **kwargs): ...
def line_rendering_output_entries_refs_t_has(self, x) -> bool: ...
def line_rendering_output_entries_refs_t_inject(self, s, len) -> Any: ...
def line_rendering_output_entries_refs_t_insert(*args, **kwargs): ...
def line_rendering_output_entries_refs_t_pop_back(self) -> Any: ...
def line_rendering_output_entries_refs_t_push_back(self, x) -> Any: ...
def line_rendering_output_entries_refs_t_qclear(self) -> Any: ...
def line_rendering_output_entries_refs_t_reserve(self, cnt) -> Any: ...
@overload
def line_rendering_output_entries_refs_t_resize(self, _newsize, x) -> Any: ...
@overload
def line_rendering_output_entries_refs_t_resize(self, _newsize) -> Any: ...
def line_rendering_output_entries_refs_t_size(self) -> size_t: ...
def line_rendering_output_entries_refs_t_swap(self, r) -> Any: ...
def line_rendering_output_entries_refs_t_swiginit(*args, **kwargs): ...
def line_rendering_output_entries_refs_t_swigregister(*args, **kwargs): ...
def line_rendering_output_entries_refs_t_truncate(self) -> Any: ...
def line_rendering_output_entry_t___eq__(self, r) -> bool: ...
def line_rendering_output_entry_t___ne__(self, r) -> bool: ...
def line_rendering_output_entry_t_bg_color_get(self) -> bgcolor_t: ...
def line_rendering_output_entry_t_bg_color_set(self, bg_color) -> Any: ...
def line_rendering_output_entry_t_cpx_get(self) -> int: ...
def line_rendering_output_entry_t_cpx_set(self, cpx) -> Any: ...
def line_rendering_output_entry_t_flags_get(self) -> uint32: ...
def line_rendering_output_entry_t_flags_set(self, flags) -> Any: ...
def line_rendering_output_entry_t_is_bg_color_direct(self) -> bool: ...
def line_rendering_output_entry_t_is_bg_color_empty(self) -> bool: ...
def line_rendering_output_entry_t_is_bg_color_key(self) -> bool: ...
def line_rendering_output_entry_t_line_get(self) -> twinline_t: ...
def line_rendering_output_entry_t_line_set(self, line) -> Any: ...
def line_rendering_output_entry_t_nchars_get(self) -> int: ...
def line_rendering_output_entry_t_nchars_set(self, nchars) -> Any: ...
def line_rendering_output_entry_t_swiginit(*args, **kwargs): ...
def line_rendering_output_entry_t_swigregister(*args, **kwargs): ...
def line_section_t_contains(self, x) -> bool: ...
def line_section_t_is_closed(self) -> bool: ...
def line_section_t_is_open(self) -> bool: ...
def line_section_t_length_get(self) -> cplen_t: ...
def line_section_t_length_set(self, length) -> Any: ...
def line_section_t_start_get(self) -> cpidx_t: ...
def line_section_t_start_set(self, start) -> Any: ...
def line_section_t_swiginit(*args, **kwargs): ...
def line_section_t_swigregister(*args, **kwargs): ...
def line_section_t_valid(self) -> bool: ...
def linearray_t_beginning(self) -> bool: ...
def linearray_t_down(*args, **kwargs): ...
def linearray_t_ending(self) -> bool: ...
def linearray_t_get_bg_color(self) -> bgcolor_t: ...
def linearray_t_get_dlnnum(self) -> int: ...
def linearray_t_get_linecnt(self) -> int: ...
def linearray_t_get_pfx_color(self) -> bgcolor_t: ...
def linearray_t_get_place(self) -> place_t: ...
def linearray_t_set_place(self, new_at) -> int: ...
def linearray_t_set_userdata(self, userd) -> Any: ...
def linearray_t_swiginit(*args, **kwargs): ...
def linearray_t_swigregister(*args, **kwargs): ...
def linearray_t_up(*args, **kwargs): ...
def linearray_t_userdata(*args, **kwargs): ...
def lines_rendering_input_t_cb_get(self) -> int: ...
def lines_rendering_input_t_cb_set(self, cb) -> Any: ...
def lines_rendering_input_t_sections_lines_get(self) -> sections_lines_refs_t: ...
def lines_rendering_input_t_sections_lines_set(self, sections_lines) -> Any: ...
def lines_rendering_input_t_swiginit(*args, **kwargs): ...
def lines_rendering_input_t_swigregister(*args, **kwargs): ...
def lines_rendering_input_t_sync_group_get(self) -> synced_group_t: ...
def lines_rendering_input_t_sync_group_set(self, sync_group) -> Any: ...
def lines_rendering_output_t___eq__(self, r) -> bool: ...
def lines_rendering_output_t___ne__(self, r) -> bool: ...
def lines_rendering_output_t_clear(self) -> Any: ...
def lines_rendering_output_t_entries_get(self) -> line_rendering_output_entries_refs_t: ...
def lines_rendering_output_t_entries_set(self, entries) -> Any: ...
def lines_rendering_output_t_flags_get(self) -> uint32: ...
def lines_rendering_output_t_flags_set(self, flags) -> Any: ...
def lines_rendering_output_t_swap(self, r) -> Any: ...
def lines_rendering_output_t_swiginit(*args, **kwargs): ...
def lines_rendering_output_t_swigregister(*args, **kwargs): ...
def listing_location_t_cb_get(self) -> int: ...
def listing_location_t_cb_set(self, cb) -> Any: ...
def listing_location_t_loc_get(*args, **kwargs): ...
def listing_location_t_loc_set(self, loc) -> Any: ...
def listing_location_t_swiginit(*args, **kwargs): ...
def listing_location_t_swigregister(*args, **kwargs): ...
def listing_location_t_tagged_sections_get(self) -> tagged_line_sections_t: ...
def listing_location_t_tagged_sections_set(self, tagged_sections) -> Any: ...
def listing_location_t_text_get(*args, **kwargs): ...
def listing_location_t_text_set(self, text) -> Any: ...
def load_dbg_dbginfo(path, li=..., base=..., verbose=...) -> bool: ...
def lookup_key_code(key, shift, is_qt) -> ushort: ...
def msg(*args, **kwargs): ...
def msg_clear() -> Any: ...
def msg_get_lines(*args, **kwargs): ...
def msg_save(path) -> bool: ...
def new_UI_Hooks(_self, _flags=..., _hkcb_flags=...) -> UI_Hooks: ...
def new_View_Hooks(_self, _flags=..., _hkcb_flags=...) -> View_Hooks: ...
def new___qtimer_t() -> __qtimer_t: ...
def new_action_ctx_base_cur_sel_t() -> action_ctx_base_cur_sel_t: ...
def new_action_ctx_base_source_t() -> action_ctx_base_source_t: ...
def new_action_ctx_base_t() -> action_ctx_base_t: ...
def new_action_desc_t(name, label, handler, shortcut=..., tooltip=..., icon=..., flags=...) -> action_desc_t: ...
def new_addon_info_t() -> addon_info_t: ...
def new_chooser_item_attrs_t() -> chooser_item_attrs_t: ...
def new_chooser_row_info_t() -> chooser_row_info_t: ...
def new_chooser_row_info_vec_t(x) -> chooser_row_info_vec_t: ...
def new_chooser_stdact_desc_t(_self, _label=..., _tooltip=..., _icon=...) -> chooser_stdact_desc_t: ...
def new_disasm_line_t(other) -> disasm_line_t: ...
def new_disasm_text_t(x) -> disasm_text_t: ...
def new_input_event_keyboard_data_t() -> input_event_keyboard_data_t: ...
def new_input_event_mouse_data_t() -> input_event_mouse_data_t: ...
def new_input_event_shortcut_data_t() -> input_event_shortcut_data_t: ...
def new_input_event_t() -> input_event_t: ...
def new_line_rendering_output_entries_refs_t(x) -> line_rendering_output_entries_refs_t: ...
def new_line_rendering_output_entry_t(_line, _cpx, _nchars, _flags, _bg_color) -> line_rendering_output_entry_t: ...
def new_line_section_t() -> line_section_t: ...
def new_linearray_t(_ud) -> linearray_t: ...
def new_lines_rendering_input_t() -> lines_rendering_input_t: ...
def new_lines_rendering_output_t() -> lines_rendering_output_t: ...
def new_listing_location_t() -> listing_location_t: ...
def new_renderer_pos_info_t() -> renderer_pos_info_t: ...
def new_section_lines_refs_t(x) -> section_lines_refs_t: ...
def new_sections_lines_refs_t(x) -> sections_lines_refs_t: ...
def new_simpleline_t(str) -> simpleline_t: ...
def new_strarray_t() -> strarray_t: ...
def new_sync_source_t(_regname) -> sync_source_t: ...
def new_sync_source_vec_t(x) -> sync_source_vec_t: ...
def new_synced_group_t() -> synced_group_t: ...
def new_tagged_line_section_t() -> tagged_line_section_t: ...
def new_tagged_line_sections_t() -> tagged_line_sections_t: ...
def new_text_t(x) -> text_t: ...
def new_twinline_t(t, pc, bc) -> twinline_t: ...
def new_twinpos_t(t, x0) -> twinpos_t: ...
def new_ui_requests_t() -> ui_requests_t: ...
def new_view_mouse_event_location_t() -> view_mouse_event_location_t: ...
def new_view_mouse_event_t() -> view_mouse_event_t: ...
def nomem(format) -> Any: ...
def open_bookmarks_window(*args, **kwargs): ...
def open_bpts_window(*args, **kwargs): ...
def open_calls_window(*args, **kwargs): ...
def open_disasm_window(*args, **kwargs): ...
def open_enums_window(*args, **kwargs): ...
def open_exports_window(*args, **kwargs): ...
def open_frame_window(*args, **kwargs): ...
def open_funcs_window(*args, **kwargs): ...
def open_hexdump_window(*args, **kwargs): ...
def open_imports_window(*args, **kwargs): ...
def open_loctypes_window(*args, **kwargs): ...
def open_modules_window(*args, **kwargs): ...
def open_names_window(*args, **kwargs): ...
def open_navband_window(*args, **kwargs): ...
def open_notepad_window(*args, **kwargs): ...
def open_problems_window(*args, **kwargs): ...
def open_segments_window(*args, **kwargs): ...
def open_segregs_window(*args, **kwargs): ...
def open_selectors_window(*args, **kwargs): ...
def open_signatures_window(*args, **kwargs): ...
def open_stack_window(*args, **kwargs): ...
def open_strings_window(*args, **kwargs): ...
def open_structs_window(*args, **kwargs): ...
def open_threads_window(*args, **kwargs): ...
def open_tils_window(*args, **kwargs): ...
def open_trace_window(*args, **kwargs): ...
def open_url(url) -> Any: ...
def open_xrefs_window(*args, **kwargs): ...
def place_t__print(self, ud) -> Any: ...
def place_t_adjust(self, ud) -> Any: ...
def place_t_as_enumplace_t(p) -> enumplace_t: ...
def place_t_as_idaplace_t(p) -> idaplace_t: ...
def place_t_as_simpleline_place_t(p) -> simpleline_place_t: ...
def place_t_as_structplace_t(p) -> structplace_t: ...
def place_t_as_tiplace_t(p) -> tiplace_t: ...
def place_t_beginning(self, ud) -> bool: ...
def place_t_clone(self) -> place_t: ...
def place_t_compare(self, t2) -> int: ...
def place_t_compare2(self, t2, arg3) -> int: ...
def place_t_copyfrom(self, _from) -> Any: ...
def place_t_deserialize(self, _in) -> bool: ...
def place_t_ending(self, ud) -> bool: ...
def place_t_enter(self, arg2) -> place_t: ...
def place_t_generate(*args, **kwargs): ...
def place_t_id(self) -> int: ...
def place_t_leave(self, arg2) -> Any: ...
def place_t_lnnum_get(self) -> int: ...
def place_t_lnnum_set(self, lnnum) -> Any: ...
def place_t_makeplace(self, ud, x, lnnum) -> place_t: ...
def place_t_name(*args, **kwargs): ...
def place_t_next(self, ud) -> bool: ...
def place_t_prev(self, ud) -> bool: ...
def place_t_rebase(self, arg2) -> bool: ...
def place_t_serialize(self) -> Any: ...
def place_t_swigregister(*args, **kwargs): ...
def place_t_toea(self) -> ea_t: ...
def place_t_touval(self, ud) -> uval_t: ...
def plgform_close(py_link, options) -> Any: ...
def plgform_get_widget(*args, **kwargs): ...
def plgform_new(*args, **kwargs): ...
def plgform_show(py_link, py_obj, caption, options=...) -> bool: ...
def process_ui_action(name, flags=...) -> bool: ...
def py_chooser_base_t_get_row(*args, **kwargs): ...
def py_get_ask_form() -> size_t: ...
def py_get_open_form() -> size_t: ...
def py_load_custom_icon_data(data, format) -> int: ...
def py_load_custom_icon_fn(filename) -> int: ...
def py_register_compiled_form(py_form) -> Any: ...
def py_unregister_compiled_form(py_form) -> Any: ...
def pyidag_bind(_self) -> bool: ...
def pyidag_unbind(_self) -> bool: ...
def pyscv_add_line(py_this, py_sl) -> bool: ...
def pyscv_clear_lines(*args, **kwargs): ...
def pyscv_close(py_this) -> Any: ...
def pyscv_count(py_this) -> size_t: ...
def pyscv_del_line(py_this, nline) -> bool: ...
def pyscv_edit_line(py_this, nline, py_sl) -> bool: ...
def pyscv_get_current_line(*args, **kwargs): ...
def pyscv_get_current_word(*args, **kwargs): ...
def pyscv_get_line(*args, **kwargs): ...
def pyscv_get_pos(*args, **kwargs): ...
def pyscv_get_selection(*args, **kwargs): ...
def pyscv_get_widget(*args, **kwargs): ...
def pyscv_init(*args, **kwargs): ...
def pyscv_insert_line(py_this, nline, py_sl) -> bool: ...
def pyscv_is_focused(py_this) -> bool: ...
def pyscv_jumpto(py_this, ln, x, y) -> bool: ...
def pyscv_patch_line(py_this, nline, offs, value) -> bool: ...
def pyscv_refresh(py_this) -> bool: ...
def pyscv_show(py_this) -> bool: ...
def qcleanline(cmt_char=..., flags=...) -> ssize_t: ...
def read_range_selection(v) -> bool: ...
def read_selection(v, p1, p2) -> bool: ...
def refresh_chooser(title) -> bool: ...
def refresh_choosers() -> Any: ...
def refresh_custom_viewer(custom_viewer) -> Any: ...
def refresh_idaview() -> Any: ...
def refresh_idaview_anyway() -> Any: ...
def refresh_navband(force) -> Any: ...
def register_action(desc) -> bool: ...
def register_addon(info) -> int: ...
def register_and_attach_to_menu(menupath, name, label, shortcut, flags, handler, owner, action_desc_t_flags) -> bool: ...
def register_timer(*args, **kwargs): ...
def remove_command_interpreter(cli_idx) -> Any: ...
def renderer_pos_info_t___eq__(self, r) -> bool: ...
def renderer_pos_info_t___ne__(self, r) -> bool: ...
def renderer_pos_info_t_cx_get(self) -> short: ...
def renderer_pos_info_t_cx_set(self, cx) -> Any: ...
def renderer_pos_info_t_cy_get(self) -> short: ...
def renderer_pos_info_t_cy_set(self, cy) -> Any: ...
def renderer_pos_info_t_node_get(self) -> int: ...
def renderer_pos_info_t_node_set(self, node) -> Any: ...
def renderer_pos_info_t_swiginit(*args, **kwargs): ...
def renderer_pos_info_t_swigregister(*args, **kwargs): ...
def renderer_pos_info_t_sx_get(self) -> short: ...
def renderer_pos_info_t_sx_set(self, sx) -> Any: ...
def repaint_custom_viewer(custom_viewer) -> Any: ...
def replace_wait_box(format) -> Any: ...
def request_refresh(mask, cnd=...) -> Any: ...
def restore_database_snapshot(*args, **kwargs): ...
def section_lines_refs_t___eq__(self, r) -> bool: ...
def section_lines_refs_t___getitem__(self, i) -> twinline_t: ...
def section_lines_refs_t___len__(self) -> size_t: ...
def section_lines_refs_t___ne__(self, r) -> bool: ...
def section_lines_refs_t___setitem__(self, i, v) -> Any: ...
def section_lines_refs_t__del(self, x) -> bool: ...
def section_lines_refs_t_add_unique(self, x) -> bool: ...
def section_lines_refs_t_at(self, _idx) -> twinline_t: ...
def section_lines_refs_t_begin(*args, **kwargs): ...
def section_lines_refs_t_capacity(self) -> size_t: ...
def section_lines_refs_t_clear(self) -> Any: ...
def section_lines_refs_t_empty(self) -> bool: ...
def section_lines_refs_t_end(*args, **kwargs): ...
def section_lines_refs_t_erase(*args, **kwargs): ...
def section_lines_refs_t_extract(*args, **kwargs): ...
def section_lines_refs_t_find(*args, **kwargs): ...
def section_lines_refs_t_has(self, x) -> bool: ...
def section_lines_refs_t_inject(self, s, len) -> Any: ...
def section_lines_refs_t_insert(*args, **kwargs): ...
def section_lines_refs_t_pop_back(self) -> Any: ...
def section_lines_refs_t_push_back(self, x) -> Any: ...
def section_lines_refs_t_qclear(self) -> Any: ...
def section_lines_refs_t_reserve(self, cnt) -> Any: ...
@overload
def section_lines_refs_t_resize(self, _newsize, x) -> Any: ...
@overload
def section_lines_refs_t_resize(self, _newsize) -> Any: ...
def section_lines_refs_t_size(self) -> size_t: ...
def section_lines_refs_t_swap(self, r) -> Any: ...
def section_lines_refs_t_swiginit(*args, **kwargs): ...
def section_lines_refs_t_swigregister(*args, **kwargs): ...
def section_lines_refs_t_truncate(self) -> Any: ...
def sections_lines_refs_t___eq__(self, r) -> bool: ...
def sections_lines_refs_t___getitem__(self, i) -> section_lines_refs_t: ...
def sections_lines_refs_t___len__(self) -> size_t: ...
def sections_lines_refs_t___ne__(self, r) -> bool: ...
def sections_lines_refs_t___setitem__(self, i, v) -> Any: ...
def sections_lines_refs_t__del(self, x) -> bool: ...
def sections_lines_refs_t_add_unique(self, x) -> bool: ...
def sections_lines_refs_t_at(self, _idx) -> section_lines_refs_t: ...
def sections_lines_refs_t_begin(*args, **kwargs): ...
def sections_lines_refs_t_capacity(self) -> size_t: ...
def sections_lines_refs_t_clear(self) -> Any: ...
def sections_lines_refs_t_empty(self) -> bool: ...
def sections_lines_refs_t_end(*args, **kwargs): ...
def sections_lines_refs_t_erase(*args, **kwargs): ...
def sections_lines_refs_t_extract(self) -> section_lines_refs_t: ...
def sections_lines_refs_t_find(*args, **kwargs): ...
def sections_lines_refs_t_grow(self, x=...) -> Any: ...
def sections_lines_refs_t_has(self, x) -> bool: ...
def sections_lines_refs_t_inject(self, s, len) -> Any: ...
def sections_lines_refs_t_insert(*args, **kwargs): ...
def sections_lines_refs_t_pop_back(self) -> Any: ...
@overload
def sections_lines_refs_t_push_back(self, x) -> Any: ...
@overload
def sections_lines_refs_t_push_back(self) -> section_lines_refs_t: ...
def sections_lines_refs_t_qclear(self) -> Any: ...
def sections_lines_refs_t_reserve(self, cnt) -> Any: ...
@overload
def sections_lines_refs_t_resize(self, _newsize, x) -> Any: ...
@overload
def sections_lines_refs_t_resize(self, _newsize) -> Any: ...
def sections_lines_refs_t_size(self) -> size_t: ...
def sections_lines_refs_t_swap(self, r) -> Any: ...
def sections_lines_refs_t_swiginit(*args, **kwargs): ...
def sections_lines_refs_t_swigregister(*args, **kwargs): ...
def sections_lines_refs_t_truncate(self) -> Any: ...
def set_cancelled() -> Any: ...
def set_code_viewer_handler(*args, **kwargs): ...
def set_code_viewer_is_source(code_viewer) -> bool: ...
def set_code_viewer_line_handlers(code_viewer, click_handler, popup_handler, dblclick_handler, drawicon_handler, linenum_handler) -> Any: ...
def set_code_viewer_lines_alignment(code_viewer, align) -> bool: ...
def set_code_viewer_lines_icon_margin(code_viewer, margin) -> bool: ...
def set_code_viewer_lines_radix(code_viewer, radix) -> bool: ...
def set_code_viewer_user_data(code_viewer, ud) -> bool: ...
def set_custom_viewer_qt_aware(custom_viewer) -> bool: ...
def set_dock_pos(src_ctrl, dest_ctrl, orient, left=..., top=..., right=..., bottom=...) -> bool: ...
def set_highlight(viewer, str, flags) -> bool: ...
def set_nav_colorizer(*args, **kwargs): ...
def set_view_renderer_type(v, rt) -> Any: ...
def show_wait_box(message) -> Any: ...
def simpleline_place_t_n_get(self) -> uint32: ...
def simpleline_place_t_n_set(self, n) -> Any: ...
def simpleline_place_t_swigregister(*args, **kwargs): ...
def simpleline_t_bgcolor_get(self) -> bgcolor_t: ...
def simpleline_t_bgcolor_set(self, bgcolor) -> Any: ...
def simpleline_t_color_get(self) -> color_t: ...
def simpleline_t_color_set(self, color) -> Any: ...
def simpleline_t_line_get(*args, **kwargs): ...
def simpleline_t_line_set(self, line) -> Any: ...
def simpleline_t_swiginit(*args, **kwargs): ...
def simpleline_t_swigregister(*args, **kwargs): ...
def str2ea(str, screen_ea=...) -> bool: ...
def str2ea_ex(str, screen_ea=..., flags=...) -> bool: ...
def strarray(*args, **kwargs): ...
def strarray_t_code_get(self) -> int: ...
def strarray_t_code_set(self, code) -> Any: ...
def strarray_t_swiginit(*args, **kwargs): ...
def strarray_t_swigregister(*args, **kwargs): ...
def strarray_t_text_get(*args, **kwargs): ...
def strarray_t_text_set(self, text) -> Any: ...
def structplace_t_idx_get(self) -> uval_t: ...
def structplace_t_idx_set(self, idx) -> Any: ...
def structplace_t_offset_get(self) -> uval_t: ...
def structplace_t_offset_set(self, offset) -> Any: ...
def structplace_t_swigregister(*args, **kwargs): ...
def sync_source_t___eq__(self, _o) -> bool: ...
def sync_source_t___ne__(self, _o) -> bool: ...
def sync_source_t_get_register(*args, **kwargs): ...
def sync_source_t_get_widget(*args, **kwargs): ...
def sync_source_t_is_register(self) -> bool: ...
def sync_source_t_is_widget(self) -> bool: ...
def sync_source_t_swiginit(*args, **kwargs): ...
def sync_source_t_swigregister(*args, **kwargs): ...
def sync_source_vec_t___eq__(self, r) -> bool: ...
def sync_source_vec_t___getitem__(self, i) -> sync_source_t: ...
def sync_source_vec_t___len__(self) -> size_t: ...
def sync_source_vec_t___ne__(self, r) -> bool: ...
def sync_source_vec_t___setitem__(self, i, v) -> Any: ...
def sync_source_vec_t__del(self, x) -> bool: ...
def sync_source_vec_t_add_unique(self, x) -> bool: ...
def sync_source_vec_t_at(self, _idx) -> sync_source_t: ...
@overload
def sync_source_vec_t_begin(self) -> sync_source_t: ...
@overload
def sync_source_vec_t_begin(self) -> sync_source_t: ...
def sync_source_vec_t_capacity(self) -> size_t: ...
def sync_source_vec_t_clear(self) -> Any: ...
def sync_source_vec_t_empty(self) -> bool: ...
@overload
def sync_source_vec_t_end(self) -> sync_source_t: ...
@overload
def sync_source_vec_t_end(self) -> sync_source_t: ...
@overload
def sync_source_vec_t_erase(self, it) -> sync_source_t: ...
@overload
def sync_source_vec_t_erase(self, first, last) -> sync_source_t: ...
def sync_source_vec_t_extract(self) -> sync_source_t: ...
@overload
def sync_source_vec_t_find(self, x) -> sync_source_t: ...
@overload
def sync_source_vec_t_find(self, x) -> sync_source_t: ...
def sync_source_vec_t_has(self, x) -> bool: ...
def sync_source_vec_t_inject(self, s, len) -> Any: ...
def sync_source_vec_t_insert(self, it, x) -> sync_source_t: ...
def sync_source_vec_t_pop_back(self) -> Any: ...
def sync_source_vec_t_push_back(self, x) -> Any: ...
def sync_source_vec_t_qclear(self) -> Any: ...
def sync_source_vec_t_reserve(self, cnt) -> Any: ...
def sync_source_vec_t_size(self) -> size_t: ...
def sync_source_vec_t_swap(self, r) -> Any: ...
def sync_source_vec_t_swiginit(*args, **kwargs): ...
def sync_source_vec_t_swigregister(*args, **kwargs): ...
def sync_source_vec_t_truncate(self) -> Any: ...
def sync_sources(what, _with, sync) -> bool: ...
def synced_group_t_has(self, ss) -> bool: ...
def synced_group_t_has_register(self, r) -> bool: ...
def synced_group_t_has_widget(self, v) -> bool: ...
def synced_group_t_swiginit(*args, **kwargs): ...
def synced_group_t_swigregister(*args, **kwargs): ...
def tagged_line_section_t_substr(self, _in) -> bool: ...
def tagged_line_section_t_swiginit(*args, **kwargs): ...
def tagged_line_section_t_swigregister(*args, **kwargs): ...
def tagged_line_section_t_tag_get(self) -> color_t: ...
def tagged_line_section_t_tag_set(self, tag) -> Any: ...
def tagged_line_section_t_valid(self) -> bool: ...
def tagged_line_section_t_valid_in(self, _in) -> bool: ...
def tagged_line_sections_t_find_in(self, range, tag=...) -> tagged_line_section_t: ...
def tagged_line_sections_t_nearest_at(self, x, tag=...) -> tagged_line_section_t: ...
def tagged_line_sections_t_sections_at(self, out, x, tag=...) -> Any: ...
def tagged_line_sections_t_swiginit(*args, **kwargs): ...
def tagged_line_sections_t_swigregister(*args, **kwargs): ...
def take_database_snapshot(*args, **kwargs): ...
def text_t___getitem__(self, i) -> twinline_t: ...
def text_t___len__(self) -> size_t: ...
def text_t___setitem__(self, i, v) -> Any: ...
def text_t_at(self, _idx) -> twinline_t: ...
@overload
def text_t_begin(self) -> twinline_t: ...
@overload
def text_t_begin(self) -> twinline_t: ...
def text_t_capacity(self) -> size_t: ...
def text_t_clear(self) -> Any: ...
def text_t_empty(self) -> bool: ...
@overload
def text_t_end(self) -> twinline_t: ...
@overload
def text_t_end(self) -> twinline_t: ...
@overload
def text_t_erase(self, it) -> twinline_t: ...
@overload
def text_t_erase(self, first, last) -> twinline_t: ...
def text_t_extract(self) -> twinline_t: ...
def text_t_grow(self, x=...) -> Any: ...
def text_t_inject(self, s, len) -> Any: ...
def text_t_insert(self, it, x) -> twinline_t: ...
def text_t_pop_back(self) -> Any: ...
@overload
def text_t_push_back(self, x) -> Any: ...
@overload
def text_t_push_back(self) -> twinline_t: ...
def text_t_qclear(self) -> Any: ...
def text_t_reserve(self, cnt) -> Any: ...
@overload
def text_t_resize(self, _newsize, x) -> Any: ...
@overload
def text_t_resize(self, _newsize) -> Any: ...
def text_t_size(self) -> size_t: ...
def text_t_swap(self, r) -> Any: ...
def text_t_swiginit(*args, **kwargs): ...
def text_t_swigregister(*args, **kwargs): ...
def text_t_truncate(self) -> Any: ...
def textctrl_info_t_assign(_self, other) -> bool: ...
def textctrl_info_t_create(*args, **kwargs): ...
def textctrl_info_t_destroy(py_obj) -> bool: ...
def textctrl_info_t_get_clink(*args, **kwargs): ...
def textctrl_info_t_get_clink_ptr(*args, **kwargs): ...
def textctrl_info_t_get_flags(_self) -> unsignedint: ...
def textctrl_info_t_get_tabsize(_self) -> unsignedint: ...
def textctrl_info_t_get_text(*args, **kwargs): ...
def textctrl_info_t_set_flags(_self, flags) -> bool: ...
def textctrl_info_t_set_tabsize(_self, tabsize) -> bool: ...
def textctrl_info_t_set_text(_self, s) -> bool: ...
def tiplace_t_calc_udm_offset(self, ud, p_udmidx=..., p_bitoff=...) -> uint64: ...
def tiplace_t_cursor_get(self) -> tif_cursor_t: ...
def tiplace_t_cursor_set(self, cursor) -> Any: ...
def tiplace_t_fill_type_ref(self, out, ud) -> bool: ...
def tiplace_t_get_kind(self, ud) -> type_t: ...
def tiplace_t_is_footer(self) -> bool: ...
def tiplace_t_is_header(self) -> bool: ...
def tiplace_t_is_index(self) -> bool: ...
def tiplace_t_ordinal_get(self) -> uint32: ...
def tiplace_t_ordinal_set(self, ordinal) -> Any: ...
def tiplace_t_reset(self) -> Any: ...
def tiplace_t_set_footer(self) -> Any: ...
def tiplace_t_set_header(self) -> Any: ...
def tiplace_t_set_index_by_offset(self, ud, offset) -> Any: ...
def tiplace_t_swigregister(*args, **kwargs): ...
def tiplace_t_valid_ord(self) -> bool: ...
def twinline_t_at_get(self) -> place_t: ...
def twinline_t_at_set(self, at) -> Any: ...
def twinline_t_bg_color_get(self) -> bgcolor_t: ...
def twinline_t_bg_color_set(self, bg_color) -> Any: ...
def twinline_t_is_default_get(self) -> bool: ...
def twinline_t_is_default_set(self, is_default) -> Any: ...
def twinline_t_line_get(*args, **kwargs): ...
def twinline_t_line_set(self, line) -> Any: ...
def twinline_t_prefix_color_get(self) -> color_t: ...
def twinline_t_prefix_color_set(self, prefix_color) -> Any: ...
def twinline_t_swiginit(*args, **kwargs): ...
def twinline_t_swigregister(*args, **kwargs): ...
def twinpos_t_at_get(self) -> place_t: ...
def twinpos_t_at_set(self, at) -> Any: ...
def twinpos_t_swiginit(*args, **kwargs): ...
def twinpos_t_swigregister(*args, **kwargs): ...
def twinpos_t_x_get(self) -> int: ...
def twinpos_t_x_set(self, x) -> Any: ...
def ui_load_new_file(temp_file, filename, pli, neflags, ploaders) -> bool: ...
def ui_requests_t_swiginit(*args, **kwargs): ...
def ui_requests_t_swigregister(*args, **kwargs): ...
def ui_run_debugger(dbgopts, exename, argc, argv) -> bool: ...
def unmark_selection() -> Any: ...
def unregister_action(name) -> bool: ...
def unregister_timer(py_timerctx) -> bool: ...
def update_action_checkable(name, checkable) -> bool: ...
def update_action_checked(name, checked) -> bool: ...
def update_action_icon(name, icon) -> bool: ...
def update_action_label(name, label) -> bool: ...
def update_action_shortcut(name, shortcut) -> bool: ...
def update_action_state(name, state) -> bool: ...
def update_action_tooltip(name, tooltip) -> bool: ...
def update_action_visibility(name, visible) -> bool: ...
def user_cancelled() -> bool: ...
def view_mouse_event_location_t_ea_get(self) -> ea_t: ...
def view_mouse_event_location_t_ea_set(self, ea) -> Any: ...
def view_mouse_event_location_t_item_get(*args, **kwargs): ...
def view_mouse_event_location_t_item_set(self, item) -> Any: ...
def view_mouse_event_location_t_swiginit(*args, **kwargs): ...
def view_mouse_event_location_t_swigregister(*args, **kwargs): ...
def view_mouse_event_t_button_get(self) -> vme_button_t: ...
def view_mouse_event_t_button_set(self, button) -> Any: ...
def view_mouse_event_t_location_get(self) -> view_mouse_event_location_t: ...
def view_mouse_event_t_location_set(self, location) -> Any: ...
def view_mouse_event_t_renderer_pos_get(self) -> renderer_pos_info_t: ...
def view_mouse_event_t_renderer_pos_set(self, renderer_pos) -> Any: ...
def view_mouse_event_t_rtype_get(self) -> tcc_renderer_type_t: ...
def view_mouse_event_t_rtype_set(self, rtype) -> Any: ...
def view_mouse_event_t_state_get(self) -> view_event_state_t: ...
def view_mouse_event_t_state_set(self, state) -> Any: ...
def view_mouse_event_t_swiginit(*args, **kwargs): ...
def view_mouse_event_t_swigregister(*args, **kwargs): ...
def view_mouse_event_t_x_get(self) -> uint32: ...
def view_mouse_event_t_x_set(self, x) -> Any: ...
def view_mouse_event_t_y_get(self) -> uint32: ...
def view_mouse_event_t_y_set(self, y) -> Any: ...
def warning(format) -> Any: ...
