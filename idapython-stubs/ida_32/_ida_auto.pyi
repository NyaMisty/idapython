# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from typing import Any

SWIG_PYTHON_LEGACY_BOOL: int
cvar: Any

def auto_apply_tail(tail_ea, parent_ea) -> Any: ...
def auto_apply_type(caller, callee) -> Any: ...
def auto_cancel(ea1, ea2) -> Any: ...
def auto_display_t_ea_get(self) -> ea_t: ...
def auto_display_t_ea_set(self, ea) -> Any: ...
def auto_display_t_state_get(self) -> idastate_t: ...
def auto_display_t_state_set(self, state) -> Any: ...
def auto_display_t_swiginit(*args, **kwargs): ...
def auto_display_t_swigregister(*args, **kwargs): ...
def auto_display_t_type_get(self) -> atype_t: ...
def auto_display_t_type_set(self, type) -> Any: ...
def auto_get(type, lowEA, highEA) -> ea_t: ...
def auto_is_ok() -> bool: ...
def auto_make_code(ea) -> Any: ...
def auto_make_proc(ea) -> Any: ...
def auto_make_step(ea1, ea2) -> bool: ...
def auto_mark(ea, type) -> Any: ...
def auto_mark_range(start, end, type) -> Any: ...
def auto_postpone_analysis(ea) -> bool: ...
def auto_recreate_insn(ea) -> int: ...
def auto_unmark(start, end, type) -> Any: ...
def auto_wait() -> bool: ...
def auto_wait_range(ea1, ea2) -> ssize_t: ...
def delete_auto_display_t(self) -> Any: ...
def enable_auto(enable) -> bool: ...
def get_auto_display(auto_display) -> bool: ...
def get_auto_state() -> atype_t: ...
def is_auto_enabled() -> bool: ...
def may_create_stkvars() -> bool: ...
def may_trace_sp() -> bool: ...
def new_auto_display_t() -> auto_display_t: ...
def peek_auto_queue(low_ea, type) -> ea_t: ...
def plan_and_wait(ea1, ea2, final_pass=...) -> int: ...
def plan_ea(ea) -> Any: ...
def plan_range(sEA, eEA) -> Any: ...
def reanalyze_callers(ea, noret) -> Any: ...
def revert_ida_decisions(ea1, ea2) -> Any: ...
def set_auto_state(new_state) -> atype_t: ...
def set_ida_state(st) -> idastate_t: ...
def show_addr(ea) -> Any: ...
def show_auto(ea, type=...) -> Any: ...
