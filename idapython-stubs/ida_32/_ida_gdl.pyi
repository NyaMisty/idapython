# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from typing import Any, overload

CHART_FOLLOW_DIRECTION: int
CHART_GEN_DOT: int
CHART_GEN_GDL: int
CHART_IGNORE_DATA_BSS: int
CHART_IGNORE_LIB_FROM: int
CHART_IGNORE_LIB_TO: int
CHART_IGNORE_XTRN: int
CHART_NOLIBFUNCS: int
CHART_PRINT_COMMENTS: int
CHART_PRINT_DOTS: int
CHART_PRINT_NAMES: int
CHART_RECURSIVE: int
CHART_REFERENCED: int
CHART_REFERENCING: int
CHART_WINGRAPH: int
FC_APPND: int
FC_CALL_ENDS: int
FC_CHKBREAK: int
FC_NOEXT: int
FC_NOPREDS: int
FC_OUTLINES: int
FC_PRINT: int
FC_RESERVED: int
SWIG_PYTHON_LEGACY_BOOL: int
fcb_cndret: int
fcb_enoret: int
fcb_error: int
fcb_extern: int
fcb_indjump: int
fcb_noret: int
fcb_normal: int
fcb_ret: int

def cancellable_graph_t_cancelled_get(self) -> bool: ...
def cancellable_graph_t_cancelled_set(self, cancelled) -> Any: ...
def cancellable_graph_t_swiginit(*args, **kwargs): ...
def cancellable_graph_t_swigregister(*args, **kwargs): ...
def delete_cancellable_graph_t(self) -> Any: ...
def delete_gdl_graph_t(self) -> Any: ...
def delete_node_iterator(self) -> Any: ...
def delete_qbasic_block_t(self) -> Any: ...
def delete_qflow_chart_t(self) -> Any: ...
def disown_cancellable_graph_t(*args, **kwargs): ...
def disown_gdl_graph_t(*args, **kwargs): ...
def display_gdl(fname) -> int: ...
def gdl_graph_t_begin(self) -> node_iterator: ...
def gdl_graph_t_edge(self, node, i, ispred) -> int: ...
def gdl_graph_t_empty(self) -> bool: ...
def gdl_graph_t_end(self) -> node_iterator: ...
def gdl_graph_t_entry(self) -> int: ...
def gdl_graph_t_exists(self, node) -> bool: ...
def gdl_graph_t_exit(self) -> int: ...
def gdl_graph_t_front(self) -> int: ...
def gdl_graph_t_get_edge_color(self, i, j) -> bgcolor_t: ...
def gdl_graph_t_get_node_color(self, n) -> bgcolor_t: ...
def gdl_graph_t_get_node_label(*args, **kwargs): ...
def gdl_graph_t_nedge(self, node, ispred) -> size_t: ...
def gdl_graph_t_node_qty(self) -> int: ...
def gdl_graph_t_npred(self, node) -> int: ...
def gdl_graph_t_nsucc(self, node) -> int: ...
def gdl_graph_t_pred(self, node, i) -> int: ...
def gdl_graph_t_print_edge(self, fp, i, j) -> bool: ...
def gdl_graph_t_print_graph_attributes(self, fp) -> Any: ...
def gdl_graph_t_print_node(self, fp, n) -> bool: ...
def gdl_graph_t_print_node_attributes(self, fp, n) -> Any: ...
def gdl_graph_t_size(self) -> int: ...
def gdl_graph_t_succ(self, node, i) -> int: ...
def gdl_graph_t_swiginit(*args, **kwargs): ...
def gdl_graph_t_swigregister(*args, **kwargs): ...
def gen_complex_call_chart(filename, wait, title, ea1, ea2, flags, recursion_depth=...) -> bool: ...
def gen_flow_graph(filename, title, pfn, ea1, ea2, gflags) -> bool: ...
def gen_gdl(g, fname) -> Any: ...
def gen_simple_call_chart(filename, wait, title, gflags) -> bool: ...
def is_noret_block(btype) -> bool: ...
def is_ret_block(btype) -> bool: ...
def new_cancellable_graph_t(_self) -> cancellable_graph_t: ...
def new_gdl_graph_t(_self) -> gdl_graph_t: ...
def new_node_iterator(_g, n) -> node_iterator: ...
def new_qbasic_block_t() -> qbasic_block_t: ...
def new_qflow_chart_t(_title, _pfn, _ea1, _ea2, _flags) -> qflow_chart_t: ...
def node_iterator___eq__(self, n) -> bool: ...
def node_iterator___ne__(self, n) -> bool: ...
def node_iterator___ref__(self) -> int: ...
def node_iterator_swiginit(*args, **kwargs): ...
def node_iterator_swigregister(*args, **kwargs): ...
def qbasic_block_t_swiginit(*args, **kwargs): ...
def qbasic_block_t_swigregister(*args, **kwargs): ...
def qflow_chart_t___getitem__(self, n) -> qbasic_block_t: ...
def qflow_chart_t_append_to_flowchart(self, ea1, ea2) -> Any: ...
def qflow_chart_t_bounds_get(self) -> range_t: ...
def qflow_chart_t_bounds_set(self, bounds) -> Any: ...
def qflow_chart_t_calc_block_type(self, blknum) -> fc_block_type_t: ...
@overload
def qflow_chart_t_create(self, _title, _pfn, _ea1, _ea2, _flags) -> Any: ...
@overload
def qflow_chart_t_create(self, _title, ranges, _flags) -> Any: ...
def qflow_chart_t_flags_get(self) -> int: ...
def qflow_chart_t_flags_set(self, flags) -> Any: ...
def qflow_chart_t_get_node_label(*args, **kwargs): ...
def qflow_chart_t_is_noret_block(self, blknum) -> bool: ...
def qflow_chart_t_is_ret_block(self, blknum) -> bool: ...
def qflow_chart_t_npred(self, node) -> int: ...
def qflow_chart_t_nproper_get(self) -> int: ...
def qflow_chart_t_nproper_set(self, nproper) -> Any: ...
def qflow_chart_t_nsucc(self, node) -> int: ...
def qflow_chart_t_pfn_get(*args, **kwargs): ...
def qflow_chart_t_pfn_set(self, pfn) -> Any: ...
def qflow_chart_t_pred(self, node, i) -> int: ...
def qflow_chart_t_print_names(self) -> bool: ...
def qflow_chart_t_print_node_attributes(self, fp, n) -> Any: ...
def qflow_chart_t_refresh(self) -> Any: ...
def qflow_chart_t_size(self) -> int: ...
def qflow_chart_t_succ(self, node, i) -> int: ...
def qflow_chart_t_swiginit(*args, **kwargs): ...
def qflow_chart_t_swigregister(*args, **kwargs): ...
def qflow_chart_t_title_get(*args, **kwargs): ...
def qflow_chart_t_title_set(self, title) -> Any: ...
