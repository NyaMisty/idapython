# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from typing import Any, overload

FPC_ARGS: int
FPC_LVARS: int
FPC_RETADDR: int
FPC_SAVREGS: int
REGVAR_ERROR_ARG: int
REGVAR_ERROR_NAME: int
REGVAR_ERROR_OK: int
REGVAR_ERROR_RANGE: int
STKVAR_VALID_SIZE: int
SWIG_PYTHON_LEGACY_BOOL: int

def add_auto_stkpnt(pfn, ea, delta) -> bool: ...
def add_frame(pfn, frsize, frregs, argsize) -> bool: ...
def add_regvar(pfn, ea1, ea2, canon, user, cmt) -> int: ...
def add_user_stkpnt(ea, delta) -> bool: ...
def build_stkvar_name(pfn, v) -> ssize_t: ...
def build_stkvar_xrefs(out, pfn, mptr) -> Any: ...
def calc_stkvar_struc_offset(pfn, insn, n) -> ea_t: ...
def define_stkvar(pfn, name, off, flags, ti, nbytes) -> bool: ...
def del_frame(pfn) -> bool: ...
def del_regvar(pfn, ea1, ea2, canon) -> int: ...
def del_stkpnt(pfn, ea) -> bool: ...
def delete_regvar_t(self) -> Any: ...
def delete_stkpnt_t(self) -> Any: ...
def delete_stkpnts_t(self) -> Any: ...
def delete_unreferenced_stkvars(pfn) -> int: ...
def delete_wrong_stkvar_ops(pfn) -> int: ...
def delete_xreflist_entry_t(self) -> Any: ...
def delete_xreflist_t(self) -> Any: ...
@overload
def find_regvar(pfn, ea1, ea2, canon, user) -> regvar_t: ...
@overload
def find_regvar(pfn, ea, canon) -> regvar_t: ...
def frame_off_args(pfn) -> ea_t: ...
def frame_off_lvars(pfn) -> ea_t: ...
def frame_off_retaddr(pfn) -> ea_t: ...
def frame_off_savregs(pfn) -> ea_t: ...
def free_regvar(v) -> Any: ...
def get_effective_spd(pfn, ea) -> sval_t: ...
def get_frame(*args, **kwargs): ...
def get_frame_member_by_id(*args, **kwargs): ...
def get_frame_part(range, pfn, part) -> Any: ...
def get_frame_retsize(pfn) -> int: ...
def get_frame_size(pfn) -> asize_t: ...
def get_func_by_frame(frame_id) -> ea_t: ...
def get_min_spd_ea(pfn) -> ea_t: ...
def get_sp_delta(pfn, ea) -> sval_t: ...
def get_spd(pfn, ea) -> sval_t: ...
def get_stkvar(*args, **kwargs): ...
def has_regvar(pfn, ea) -> bool: ...
def is_funcarg_off(pfn, frameoff) -> bool: ...
def lvar_off(pfn, frameoff) -> sval_t: ...
def new_regvar_t(r) -> regvar_t: ...
def new_stkpnt_t() -> stkpnt_t: ...
def new_stkpnts_t() -> stkpnts_t: ...
def new_xreflist_entry_t() -> xreflist_entry_t: ...
def new_xreflist_t(x) -> xreflist_t: ...
def recalc_spd(cur_ea) -> bool: ...
def recalc_spd_for_basic_block(pfn, cur_ea) -> bool: ...
def regvar_t_canon_get(*args, **kwargs): ...
def regvar_t_canon_set(self, canon) -> Any: ...
def regvar_t_cmt_get(*args, **kwargs): ...
def regvar_t_cmt_set(self, cmt) -> Any: ...
def regvar_t_swap(self, r) -> Any: ...
def regvar_t_swiginit(*args, **kwargs): ...
def regvar_t_swigregister(*args, **kwargs): ...
def regvar_t_user_get(*args, **kwargs): ...
def regvar_t_user_set(self, user) -> Any: ...
def rename_regvar(pfn, v, user) -> int: ...
def set_auto_spd(pfn, ea, new_spd) -> bool: ...
def set_frame_size(pfn, frsize, frregs, argsize) -> bool: ...
def set_purged(ea, nbytes, override_old_value) -> bool: ...
def set_regvar_cmt(pfn, v, cmt) -> int: ...
def soff_to_fpoff(pfn, soff) -> sval_t: ...
def stkpnt_t___eq__(self, r) -> bool: ...
def stkpnt_t___ge__(self, r) -> bool: ...
def stkpnt_t___gt__(self, r) -> bool: ...
def stkpnt_t___le__(self, r) -> bool: ...
def stkpnt_t___lt__(self, r) -> bool: ...
def stkpnt_t___ne__(self, r) -> bool: ...
def stkpnt_t_compare(self, r) -> int: ...
def stkpnt_t_ea_get(self) -> ea_t: ...
def stkpnt_t_ea_set(self, ea) -> Any: ...
def stkpnt_t_spd_get(self) -> sval_t: ...
def stkpnt_t_spd_set(self, spd) -> Any: ...
def stkpnt_t_swiginit(*args, **kwargs): ...
def stkpnt_t_swigregister(*args, **kwargs): ...
def stkpnts_t___eq__(self, r) -> bool: ...
def stkpnts_t___ge__(self, r) -> bool: ...
def stkpnts_t___gt__(self, r) -> bool: ...
def stkpnts_t___le__(self, r) -> bool: ...
def stkpnts_t___lt__(self, r) -> bool: ...
def stkpnts_t___ne__(self, r) -> bool: ...
def stkpnts_t_compare(self, r) -> int: ...
def stkpnts_t_swiginit(*args, **kwargs): ...
def stkpnts_t_swigregister(*args, **kwargs): ...
def update_fpd(pfn, fpd) -> bool: ...
def xreflist_entry_t___eq__(self, r) -> bool: ...
def xreflist_entry_t___ge__(self, r) -> bool: ...
def xreflist_entry_t___gt__(self, r) -> bool: ...
def xreflist_entry_t___le__(self, r) -> bool: ...
def xreflist_entry_t___lt__(self, r) -> bool: ...
def xreflist_entry_t___ne__(self, r) -> bool: ...
def xreflist_entry_t_compare(self, r) -> int: ...
def xreflist_entry_t_ea_get(self) -> ea_t: ...
def xreflist_entry_t_ea_set(self, ea) -> Any: ...
def xreflist_entry_t_opnum_get(self) -> uchar: ...
def xreflist_entry_t_opnum_set(self, opnum) -> Any: ...
def xreflist_entry_t_swiginit(*args, **kwargs): ...
def xreflist_entry_t_swigregister(*args, **kwargs): ...
def xreflist_entry_t_type_get(self) -> uchar: ...
def xreflist_entry_t_type_set(self, type) -> Any: ...
def xreflist_t___eq__(self, r) -> bool: ...
def xreflist_t___getitem__(self, i) -> xreflist_entry_t: ...
def xreflist_t___len__(self) -> size_t: ...
def xreflist_t___ne__(self, r) -> bool: ...
def xreflist_t___setitem__(self, i, v) -> Any: ...
def xreflist_t__del(self, x) -> bool: ...
def xreflist_t_add_unique(self, x) -> bool: ...
def xreflist_t_at(self, _idx) -> xreflist_entry_t: ...
@overload
def xreflist_t_begin(self) -> xreflist_entry_t: ...
@overload
def xreflist_t_begin(self) -> xreflist_entry_t: ...
def xreflist_t_capacity(self) -> size_t: ...
def xreflist_t_clear(self) -> Any: ...
def xreflist_t_empty(self) -> bool: ...
@overload
def xreflist_t_end(self) -> xreflist_entry_t: ...
@overload
def xreflist_t_end(self) -> xreflist_entry_t: ...
@overload
def xreflist_t_erase(self, it) -> xreflist_entry_t: ...
@overload
def xreflist_t_erase(self, first, last) -> xreflist_entry_t: ...
def xreflist_t_extract(self) -> xreflist_entry_t: ...
@overload
def xreflist_t_find(self, x) -> xreflist_entry_t: ...
@overload
def xreflist_t_find(self, x) -> xreflist_entry_t: ...
def xreflist_t_grow(self, x=...) -> Any: ...
def xreflist_t_has(self, x) -> bool: ...
def xreflist_t_inject(self, s, len) -> Any: ...
def xreflist_t_insert(self, it, x) -> xreflist_entry_t: ...
def xreflist_t_pop_back(self) -> Any: ...
@overload
def xreflist_t_push_back(self, x) -> Any: ...
@overload
def xreflist_t_push_back(self) -> xreflist_entry_t: ...
def xreflist_t_qclear(self) -> Any: ...
def xreflist_t_reserve(self, cnt) -> Any: ...
@overload
def xreflist_t_resize(self, _newsize, x) -> Any: ...
@overload
def xreflist_t_resize(self, _newsize) -> Any: ...
def xreflist_t_size(self) -> size_t: ...
def xreflist_t_swap(self, r) -> Any: ...
def xreflist_t_swiginit(*args, **kwargs): ...
def xreflist_t_swigregister(*args, **kwargs): ...
def xreflist_t_truncate(self) -> Any: ...
