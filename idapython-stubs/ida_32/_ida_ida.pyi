# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from typing import Any, overload

ABI_8ALIGN4: int
ABI_BIGARG_ALIGN: int
ABI_GCC_LAYOUT: int
ABI_HARD_FLOAT: int
ABI_HUGEARG_ALIGN: int
ABI_MAP_STKARGS: int
ABI_PACK_STKARGS: int
ABI_SET_BY_USER: int
ABI_STACK_LDBL: int
ABI_STACK_VARARGS: int
AF2_DOEH: int
AF2_DORTTI: int
AF2_MACRO: int
AF2_MERGESTR: int
AF_ANORET: int
AF_CHKUNI: int
AF_CODE: int
AF_DATOFF: int
AF_DOCODE: int
AF_DODATA: int
AF_DREFOFF: int
AF_FINAL: int
AF_FIXUP: int
AF_FLIRT: int
AF_FTAIL: int
AF_HFLIRT: int
AF_IMMOFF: int
AF_JFUNC: int
AF_JUMPTBL: int
AF_LVAR: int
AF_MARKCODE: int
AF_MEMFUNC: int
AF_NULLSUB: int
AF_PROC: int
AF_PROCPTR: int
AF_PURDAT: int
AF_REGARG: int
AF_SIGCMT: int
AF_SIGMLT: int
AF_STKARG: int
AF_STRLIT: int
AF_TRACE: int
AF_TRFUNC: int
AF_UNK: int
AF_USED: int
AF_VERSP: int
DEMNAM_CMNT: int
DEMNAM_FIRST: int
DEMNAM_GCC3: int
DEMNAM_MASK: int
DEMNAM_NAME: int
DEMNAM_NONE: int
IDAINFO_PROCNAME_SIZE: int
IDAINFO_STRLIT_PREF_SIZE: int
IDAINFO_TAG_SIZE: int
IDB_COMPRESSED: int
IDB_EXT: str
IDB_EXT32: str
IDB_EXT64: str
IDB_PACKED: int
IDB_UNPACKED: int
INFFL_ALLASM: int
INFFL_AUTO: int
INFFL_CHKOPS: int
INFFL_GRAPH_VIEW: int
INFFL_LOADIDC: int
INFFL_NMOPS: int
INFFL_NOUSER: int
INFFL_READONLY: int
INF_ABIBITS: int
INF_ABINAME: int
INF_AF: int
INF_AF2: int
INF_APPCALL_OPTIONS: int
INF_APPTYPE: int
INF_ARCHIVE_PATH: int
INF_ASMTYPE: int
INF_BASEADDR: int
INF_BIN_PREFIX_SIZE: int
INF_CC: int
INF_CC_CM: int
INF_CC_DEFALIGN: int
INF_CC_ID: int
INF_CC_SIZE_B: int
INF_CC_SIZE_E: int
INF_CC_SIZE_I: int
INF_CC_SIZE_L: int
INF_CC_SIZE_LDBL: int
INF_CC_SIZE_LL: int
INF_CC_SIZE_S: int
INF_CMTFLG: int
INF_CMT_INDENT: int
INF_CRC32: int
INF_CTIME: int
INF_C_MACROS: int
INF_DATABASE_CHANGE_COUNT: int
INF_DATATYPES: int
INF_DBG_BINPATHS: int
INF_DEMNAMES: int
INF_DUALOP_GRAPH: int
INF_DUALOP_TEXT: int
INF_ELAPSED: int
INF_FILETYPE: int
INF_FILE_FORMAT_NAME: int
INF_FSIZE: int
INF_GENFLAGS: int
INF_GROUPS: int
INF_HIGHOFF: int
INF_H_PATH: int
INF_IDA_VERSION: int
INF_IDSNODE: int
INF_IMAGEBASE: int
INF_INCLUDE: int
INF_INDENT: int
INF_INITIAL_VERSION: int
INF_INPUT_FILE_PATH: int
INF_LAST: int
INF_LENXREF: int
INF_LFLAGS: int
INF_LIMITER: int
INF_LISTNAMES: int
INF_LONG_DEMNAMES: int
INF_LOWOFF: int
INF_MAIN: int
INF_MARGIN: int
INF_MAXREF: int
INF_MAX_AUTONAME_LEN: int
INF_MAX_EA: int
INF_MD5: int
INF_MIN_EA: int
INF_NAMETYPE: int
INF_NETDELTA: int
INF_NOPENS: int
INF_NOTEPAD: int
INF_OMAX_EA: int
INF_OMIN_EA: int
INF_OSTYPE: int
INF_OUTFILEENC: int
INF_OUTFLAGS: int
INF_PREFFLAG: int
INF_PRIVRANGE: int
INF_PRIVRANGE_END_EA: int
INF_PRIVRANGE_START_EA: int
INF_PROBLEMS: int
INF_PROCNAME: int
INF_REFCMTNUM: int
INF_SELECTORS: int
INF_SHA256: int
INF_SHORT_DEMNAMES: int
INF_SPECSEGS: int
INF_SRCDBG_PATHS: int
INF_SRCDBG_UNDESIRED: int
INF_START_CS: int
INF_START_EA: int
INF_START_IP: int
INF_START_SP: int
INF_START_SS: int
INF_STRLIT_BREAK: int
INF_STRLIT_FLAGS: int
INF_STRLIT_PREF: int
INF_STRLIT_SERNUM: int
INF_STRLIT_ZEROES: int
INF_STRTYPE: int
INF_STR_ENCODINGS: int
INF_TYPE_XREFNUM: int
INF_VERSION: int
INF_XREFFLAG: int
INF_XREFNUM: int
LFLG_64BIT: int
LFLG_COMPRESS: int
LFLG_DBG_NOPATH: int
LFLG_FLAT_OFF32: int
LFLG_IS_DLL: int
LFLG_KERNMODE: int
LFLG_MSF: int
LFLG_PACK: int
LFLG_PC_FLAT: int
LFLG_PC_FPP: int
LFLG_SNAPSHOT: int
LFLG_WIDE_HBF: int
LMT_EMPTY: int
LMT_THICK: int
LMT_THIN: int
LN_AUTO: int
LN_NORMAL: int
LN_PUBLIC: int
LN_WEAK: int
NM_EA: int
NM_EA4: int
NM_EA8: int
NM_NAM_EA: int
NM_NAM_OFF: int
NM_PTR_EA: int
NM_PTR_OFF: int
NM_REL_EA: int
NM_REL_OFF: int
NM_SERIAL: int
NM_SHORT: int
OFLG_GEN_ASSUME: int
OFLG_GEN_NULL: int
OFLG_GEN_ORG: int
OFLG_GEN_TRYBLKS: int
OFLG_LZERO: int
OFLG_PREF_SEG: int
OFLG_SHOW_AUTO: int
OFLG_SHOW_PREF: int
OFLG_SHOW_VOID: int
PREF_FNCOFF: int
PREF_PFXTRUNC: int
PREF_SEGADR: int
PREF_STACK: int
SCF_ALLCMT: int
SCF_LINNUM: int
SCF_NOCMT: int
SCF_RPTCMT: int
SCF_SHHID_FUNC: int
SCF_SHHID_ITEM: int
SCF_SHHID_SEGM: int
SCF_TESTMODE: int
STRF_AUTO: int
STRF_COMMENT: int
STRF_GEN: int
STRF_SAVECASE: int
STRF_SERIAL: int
STRF_UNICODE: int
STT_CUR: int
STT_DBG: int
STT_MM: int
STT_VA: int
SWIG_PYTHON_LEGACY_BOOL: int
SW_ALLCMT: int
SW_LINNUM: int
SW_NOCMT: int
SW_RPTCMT: int
SW_SEGXRF: int
SW_SHHID_FUNC: int
SW_SHHID_ITEM: int
SW_SHHID_SEGM: int
SW_TESTMODE: int
SW_XRFFNC: int
SW_XRFMRK: int
SW_XRFVAL: int
UA_MAXOP: int
VLD_AUTO_REPAIR: int
VLD_DIALOG: int
VLD_SILENT: int
cvar: Any
f_AIXAR: int
f_AOUT: int
f_AR: int
f_BIN: int
f_COFF: int
f_COM: int
f_COM_old: int
f_DRV: int
f_ELF: int
f_EXE: int
f_EXE_old: int
f_HEX: int
f_LE: int
f_LOADER: int
f_LX: int
f_MACHO: int
f_MEX: int
f_NLM: int
f_OMF: int
f_OMFLIB: int
f_PE: int
f_PRC: int
f_PSXOBJ: int
f_SREC: int
f_W32RUN: int
f_WIN: int
f_ZIP: int

def calc_default_idaplace_flags() -> int: ...
def compiler_info_t_cm_get(self) -> cm_t: ...
def compiler_info_t_cm_set(self, cm) -> Any: ...
def compiler_info_t_defalign_get(self) -> uchar: ...
def compiler_info_t_defalign_set(self, defalign) -> Any: ...
def compiler_info_t_id_get(self) -> comp_t: ...
def compiler_info_t_id_set(self, id) -> Any: ...
def compiler_info_t_size_b_get(self) -> uchar: ...
def compiler_info_t_size_b_set(self, size_b) -> Any: ...
def compiler_info_t_size_e_get(self) -> uchar: ...
def compiler_info_t_size_e_set(self, size_e) -> Any: ...
def compiler_info_t_size_i_get(self) -> uchar: ...
def compiler_info_t_size_i_set(self, size_i) -> Any: ...
def compiler_info_t_size_l_get(self) -> uchar: ...
def compiler_info_t_size_l_set(self, size_l) -> Any: ...
def compiler_info_t_size_ldbl_get(self) -> uchar: ...
def compiler_info_t_size_ldbl_set(self, size_ldbl) -> Any: ...
def compiler_info_t_size_ll_get(self) -> uchar: ...
def compiler_info_t_size_ll_set(self, size_ll) -> Any: ...
def compiler_info_t_size_s_get(self) -> uchar: ...
def compiler_info_t_size_s_set(self, size_s) -> Any: ...
def compiler_info_t_swiginit(*args, **kwargs): ...
def compiler_info_t_swigregister(*args, **kwargs): ...
def delete_compiler_info_t(self) -> Any: ...
def delinf(tag) -> bool: ...
def get_dbctx_id() -> ssize_t: ...
def get_dbctx_qty() -> size_t: ...
def getinf_str(tag) -> ssize_t: ...
def idainfo__get_lflags(self) -> uint32: ...
def idainfo__set_lflags(self, _f) -> Any: ...
def idainfo_abibits_get(self) -> uint32: ...
def idainfo_abibits_set(self, abibits) -> Any: ...
def idainfo_af2_get(self) -> uint32: ...
def idainfo_af2_set(self, af2) -> Any: ...
def idainfo_af_get(self) -> uint32: ...
def idainfo_af_set(self, af) -> Any: ...
def idainfo_appcall_options_get(self) -> uint32: ...
def idainfo_appcall_options_set(self, appcall_options) -> Any: ...
def idainfo_apptype_get(self) -> ushort: ...
def idainfo_apptype_set(self, apptype) -> Any: ...
def idainfo_asmtype_get(self) -> uchar: ...
def idainfo_asmtype_set(self, asmtype) -> Any: ...
def idainfo_baseaddr_get(self) -> uval_t: ...
def idainfo_baseaddr_set(self, baseaddr) -> Any: ...
def idainfo_bin_prefix_size_get(self) -> short: ...
def idainfo_bin_prefix_size_set(self, bin_prefix_size) -> Any: ...
def idainfo_cc_get(self) -> compiler_info_t: ...
def idainfo_cc_set(self, cc) -> Any: ...
def idainfo_cmt_indent_get(self) -> uchar: ...
def idainfo_cmt_indent_set(self, cmt_indent) -> Any: ...
def idainfo_database_change_count_get(self) -> uint32: ...
def idainfo_database_change_count_set(self, database_change_count) -> Any: ...
def idainfo_datatypes_get(self) -> uval_t: ...
def idainfo_datatypes_set(self, datatypes) -> Any: ...
def idainfo_demnames_get(self) -> uchar: ...
def idainfo_demnames_set(self, demnames) -> Any: ...
def idainfo_filetype_get(self) -> ushort: ...
def idainfo_filetype_set(self, filetype) -> Any: ...
def idainfo_get_abiname(self) -> qstring: ...
def idainfo_highoff_get(self) -> ea_t: ...
def idainfo_highoff_set(self, highoff) -> Any: ...
def idainfo_indent_get(self) -> uchar: ...
def idainfo_indent_set(self, indent) -> Any: ...
def idainfo_lenxref_get(self) -> ushort: ...
def idainfo_lenxref_set(self, lenxref) -> Any: ...
def idainfo_listnames_get(self) -> uchar: ...
def idainfo_listnames_set(self, listnames) -> Any: ...
def idainfo_long_demnames_get(self) -> uint32: ...
def idainfo_long_demnames_set(self, long_demnames) -> Any: ...
def idainfo_lowoff_get(self) -> ea_t: ...
def idainfo_lowoff_set(self, lowoff) -> Any: ...
def idainfo_main_get(self) -> ea_t: ...
def idainfo_main_set(self, main) -> Any: ...
def idainfo_margin_get(self) -> ushort: ...
def idainfo_margin_set(self, margin) -> Any: ...
def idainfo_max_autoname_len_get(self) -> ushort: ...
def idainfo_max_autoname_len_set(self, max_autoname_len) -> Any: ...
def idainfo_max_ea_get(self) -> ea_t: ...
def idainfo_max_ea_set(self, max_ea) -> Any: ...
def idainfo_maxref_get(self) -> uval_t: ...
def idainfo_maxref_set(self, maxref) -> Any: ...
def idainfo_min_ea_get(self) -> ea_t: ...
def idainfo_min_ea_set(self, min_ea) -> Any: ...
def idainfo_nametype_get(self) -> char: ...
def idainfo_nametype_set(self, nametype) -> Any: ...
def idainfo_omax_ea_get(self) -> ea_t: ...
def idainfo_omax_ea_set(self, omax_ea) -> Any: ...
def idainfo_omin_ea_get(self) -> ea_t: ...
def idainfo_omin_ea_set(self, omin_ea) -> Any: ...
def idainfo_ostype_get(self) -> ushort: ...
def idainfo_ostype_set(self, ostype) -> Any: ...
def idainfo_outflags_get(self) -> uint32: ...
def idainfo_outflags_set(self, outflags) -> Any: ...
def idainfo_procname_get(self) -> char[16]: ...
def idainfo_procname_set(self, procname) -> Any: ...
def idainfo_refcmtnum_get(self) -> uchar: ...
def idainfo_refcmtnum_set(self, refcmtnum) -> Any: ...
def idainfo_s_cmtflg_get(self) -> uchar: ...
def idainfo_s_cmtflg_set(self, s_cmtflg) -> Any: ...
def idainfo_s_genflags_get(self) -> ushort: ...
def idainfo_s_genflags_set(self, s_genflags) -> Any: ...
def idainfo_s_limiter_get(self) -> uchar: ...
def idainfo_s_limiter_set(self, s_limiter) -> Any: ...
def idainfo_s_prefflag_get(self) -> uchar: ...
def idainfo_s_prefflag_set(self, s_prefflag) -> Any: ...
def idainfo_s_xrefflag_get(self) -> uchar: ...
def idainfo_s_xrefflag_set(self, s_xrefflag) -> Any: ...
def idainfo_short_demnames_get(self) -> uint32: ...
def idainfo_short_demnames_set(self, short_demnames) -> Any: ...
def idainfo_specsegs_get(self) -> uchar: ...
def idainfo_specsegs_set(self, specsegs) -> Any: ...
def idainfo_start_cs_get(self) -> sel_t: ...
def idainfo_start_cs_set(self, start_cs) -> Any: ...
def idainfo_start_ea_get(self) -> ea_t: ...
def idainfo_start_ea_set(self, start_ea) -> Any: ...
def idainfo_start_ip_get(self) -> ea_t: ...
def idainfo_start_ip_set(self, start_ip) -> Any: ...
def idainfo_start_sp_get(self) -> ea_t: ...
def idainfo_start_sp_set(self, start_sp) -> Any: ...
def idainfo_start_ss_get(self) -> sel_t: ...
def idainfo_start_ss_set(self, start_ss) -> Any: ...
def idainfo_strlit_break_get(self) -> uchar: ...
def idainfo_strlit_break_set(self, strlit_break) -> Any: ...
def idainfo_strlit_flags_get(self) -> uchar: ...
def idainfo_strlit_flags_set(self, strlit_flags) -> Any: ...
def idainfo_strlit_pref_get(self) -> char[16]: ...
def idainfo_strlit_pref_set(self, strlit_pref) -> Any: ...
def idainfo_strlit_sernum_get(self) -> uval_t: ...
def idainfo_strlit_sernum_set(self, strlit_sernum) -> Any: ...
def idainfo_strlit_zeroes_get(self) -> char: ...
def idainfo_strlit_zeroes_set(self, strlit_zeroes) -> Any: ...
def idainfo_strtype_get(self) -> int32: ...
def idainfo_strtype_set(self, strtype) -> Any: ...
def idainfo_swigregister(*args, **kwargs): ...
def idainfo_tag_get(self) -> char[3]: ...
def idainfo_tag_set(self, tag) -> Any: ...
def idainfo_type_xrefnum_get(self) -> uchar: ...
def idainfo_type_xrefnum_set(self, type_xrefnum) -> Any: ...
def idainfo_version_get(self) -> ushort: ...
def idainfo_version_set(self, version) -> Any: ...
def idainfo_xrefnum_get(self) -> uchar: ...
def idainfo_xrefnum_set(self, xrefnum) -> Any: ...
def inf_abi_set_by_user() -> bool: ...
def inf_allow_non_matched_ops() -> bool: ...
def inf_allow_sigmulti() -> bool: ...
def inf_append_sigcmt() -> bool: ...
@overload
def inf_big_arg_align(cc) -> bool: ...
@overload
def inf_big_arg_align() -> bool: ...
def inf_check_manual_ops() -> bool: ...
def inf_check_unicode_strlits() -> bool: ...
def inf_coagulate_code() -> bool: ...
def inf_coagulate_data() -> bool: ...
def inf_compress_idb() -> bool: ...
def inf_create_all_xrefs() -> bool: ...
def inf_create_func_from_call() -> bool: ...
def inf_create_func_from_ptr() -> bool: ...
def inf_create_func_tails() -> bool: ...
def inf_create_jump_tables() -> bool: ...
def inf_create_off_on_dref() -> bool: ...
def inf_create_off_using_fixup() -> bool: ...
def inf_create_strlit_on_xref() -> bool: ...
def inf_data_offset() -> bool: ...
def inf_dbg_no_store_path() -> bool: ...
def inf_decode_fpp() -> bool: ...
def inf_del_no_xref_insns() -> bool: ...
def inf_final_pass() -> bool: ...
def inf_full_sp_ana() -> bool: ...
def inf_gen_assume() -> bool: ...
def inf_gen_lzero() -> bool: ...
def inf_gen_null() -> bool: ...
def inf_gen_org() -> bool: ...
def inf_gen_tryblks() -> bool: ...
def inf_get_abibits() -> uint32: ...
def inf_get_af() -> uint32: ...
def inf_get_af2() -> uint32: ...
def inf_get_af2_low() -> ushort: ...
def inf_get_af_high() -> ushort: ...
def inf_get_af_low() -> ushort: ...
def inf_get_app_bitness() -> uint: ...
def inf_get_appcall_options() -> uint32: ...
def inf_get_apptype() -> ushort: ...
def inf_get_asmtype() -> uchar: ...
def inf_get_baseaddr() -> uval_t: ...
def inf_get_bin_prefix_size() -> short: ...
def inf_get_cc(out) -> bool: ...
def inf_get_cc_cm() -> cm_t: ...
def inf_get_cc_defalign() -> uchar: ...
def inf_get_cc_id() -> comp_t: ...
def inf_get_cc_size_b() -> uchar: ...
def inf_get_cc_size_e() -> uchar: ...
def inf_get_cc_size_i() -> uchar: ...
def inf_get_cc_size_l() -> uchar: ...
def inf_get_cc_size_ldbl() -> uchar: ...
def inf_get_cc_size_ll() -> uchar: ...
def inf_get_cc_size_s() -> uchar: ...
def inf_get_cmt_indent() -> uchar: ...
def inf_get_cmtflg() -> uchar: ...
def inf_get_database_change_count() -> uint32: ...
def inf_get_datatypes() -> uval_t: ...
def inf_get_demname_form() -> uchar: ...
def inf_get_demnames() -> uchar: ...
def inf_get_filetype() -> filetype_t: ...
def inf_get_genflags() -> ushort: ...
def inf_get_highoff() -> ea_t: ...
def inf_get_indent() -> uchar: ...
def inf_get_lenxref() -> ushort: ...
def inf_get_lflags() -> uint32: ...
def inf_get_limiter() -> uchar: ...
def inf_get_listnames() -> uchar: ...
def inf_get_long_demnames() -> uint32: ...
def inf_get_lowoff() -> ea_t: ...
def inf_get_main() -> ea_t: ...
def inf_get_margin() -> ushort: ...
def inf_get_max_autoname_len() -> ushort: ...
def inf_get_max_ea() -> ea_t: ...
def inf_get_maxref() -> uval_t: ...
def inf_get_min_ea() -> ea_t: ...
def inf_get_nametype() -> char: ...
def inf_get_netdelta() -> sval_t: ...
def inf_get_omax_ea() -> ea_t: ...
def inf_get_omin_ea() -> ea_t: ...
def inf_get_ostype() -> ushort: ...
def inf_get_outflags() -> uint32: ...
def inf_get_pack_mode() -> int: ...
def inf_get_prefflag() -> uchar: ...
@overload
def inf_get_privrange(out) -> bool: ...
@overload
def inf_get_privrange() -> range_t: ...
def inf_get_privrange_end_ea() -> ea_t: ...
def inf_get_privrange_start_ea() -> ea_t: ...
def inf_get_procname() -> bool: ...
def inf_get_refcmtnum() -> uchar: ...
def inf_get_short_demnames() -> uint32: ...
def inf_get_specsegs() -> uchar: ...
def inf_get_start_cs() -> sel_t: ...
def inf_get_start_ea() -> ea_t: ...
def inf_get_start_ip() -> ea_t: ...
def inf_get_start_sp() -> ea_t: ...
def inf_get_start_ss() -> sel_t: ...
def inf_get_strlit_break() -> uchar: ...
def inf_get_strlit_flags() -> uchar: ...
def inf_get_strlit_pref() -> bool: ...
def inf_get_strlit_sernum() -> uval_t: ...
def inf_get_strlit_zeroes() -> char: ...
def inf_get_strtype() -> int32: ...
def inf_get_type_xrefnum() -> uchar: ...
def inf_get_version() -> ushort: ...
def inf_get_xrefflag() -> uchar: ...
def inf_get_xrefnum() -> uchar: ...
def inf_guess_func_type() -> bool: ...
def inf_handle_eh() -> bool: ...
def inf_handle_rtti() -> bool: ...
def inf_hide_comments() -> bool: ...
def inf_hide_libfuncs() -> bool: ...
@overload
def inf_huge_arg_align(cc) -> bool: ...
@overload
def inf_huge_arg_align() -> bool: ...
def inf_inc_database_change_count(cnt=...) -> Any: ...
def inf_is_16bit() -> bool: ...
def inf_is_32bit_exactly() -> bool: ...
def inf_is_32bit_or_higher() -> bool: ...
def inf_is_64bit() -> bool: ...
def inf_is_auto_enabled() -> bool: ...
def inf_is_be() -> bool: ...
def inf_is_dll() -> bool: ...
def inf_is_flat_off32() -> bool: ...
def inf_is_graph_view() -> bool: ...
def inf_is_hard_float() -> bool: ...
def inf_is_kernel_mode() -> bool: ...
def inf_is_limiter_empty() -> bool: ...
def inf_is_limiter_thick() -> bool: ...
def inf_is_limiter_thin() -> bool: ...
def inf_is_mem_aligned4() -> bool: ...
def inf_is_snapshot() -> bool: ...
def inf_is_wide_high_byte_first() -> bool: ...
def inf_like_binary() -> bool: ...
def inf_line_pref_with_seg() -> bool: ...
def inf_loading_idc() -> bool: ...
def inf_macros_enabled() -> bool: ...
def inf_map_stkargs() -> bool: ...
def inf_mark_code() -> bool: ...
def inf_merge_strlits() -> bool: ...
def inf_no_store_user_info() -> bool: ...
def inf_noflow_to_data() -> bool: ...
def inf_noret_ana() -> bool: ...
def inf_op_offset() -> bool: ...
def inf_pack_idb() -> bool: ...
@overload
def inf_pack_stkargs(cc) -> bool: ...
@overload
def inf_pack_stkargs() -> bool: ...
def inf_postinc_strlit_sernum(cnt=...) -> uval_t: ...
def inf_prefix_show_funcoff() -> bool: ...
def inf_prefix_show_segaddr() -> bool: ...
def inf_prefix_show_stack() -> bool: ...
def inf_prefix_truncate_opcode_bytes() -> bool: ...
def inf_propagate_regargs() -> bool: ...
def inf_propagate_stkargs() -> bool: ...
def inf_readonly_idb() -> bool: ...
def inf_rename_jumpfunc() -> bool: ...
def inf_rename_nullsub() -> bool: ...
def inf_set_32bit(_v=...) -> bool: ...
def inf_set_64bit(_v=...) -> bool: ...
def inf_set_abi_set_by_user(_v=...) -> bool: ...
def inf_set_abibits(_v) -> bool: ...
def inf_set_af(_v) -> bool: ...
def inf_set_af2(_v) -> bool: ...
def inf_set_af2_low(saf) -> Any: ...
def inf_set_af_high(saf2) -> Any: ...
def inf_set_af_low(saf) -> Any: ...
def inf_set_allow_non_matched_ops(_v=...) -> bool: ...
def inf_set_allow_sigmulti(_v=...) -> bool: ...
def inf_set_app_bitness(bitness) -> Any: ...
def inf_set_appcall_options(_v) -> bool: ...
def inf_set_append_sigcmt(_v=...) -> bool: ...
def inf_set_apptype(_v) -> bool: ...
def inf_set_asmtype(_v) -> bool: ...
def inf_set_auto_enabled(_v=...) -> bool: ...
def inf_set_baseaddr(_v) -> bool: ...
def inf_set_be(_v=...) -> bool: ...
def inf_set_big_arg_align(_v=...) -> bool: ...
def inf_set_bin_prefix_size(_v) -> bool: ...
def inf_set_cc(_v) -> bool: ...
def inf_set_cc_cm(_v) -> bool: ...
def inf_set_cc_defalign(_v) -> bool: ...
def inf_set_cc_id(_v) -> bool: ...
def inf_set_cc_size_b(_v) -> bool: ...
def inf_set_cc_size_e(_v) -> bool: ...
def inf_set_cc_size_i(_v) -> bool: ...
def inf_set_cc_size_l(_v) -> bool: ...
def inf_set_cc_size_ldbl(_v) -> bool: ...
def inf_set_cc_size_ll(_v) -> bool: ...
def inf_set_cc_size_s(_v) -> bool: ...
def inf_set_check_manual_ops(_v=...) -> bool: ...
def inf_set_check_unicode_strlits(_v=...) -> bool: ...
def inf_set_cmt_indent(_v) -> bool: ...
def inf_set_cmtflg(_v) -> bool: ...
def inf_set_coagulate_code(_v=...) -> bool: ...
def inf_set_coagulate_data(_v=...) -> bool: ...
def inf_set_compress_idb(_v=...) -> bool: ...
def inf_set_create_all_xrefs(_v=...) -> bool: ...
def inf_set_create_func_from_call(_v=...) -> bool: ...
def inf_set_create_func_from_ptr(_v=...) -> bool: ...
def inf_set_create_func_tails(_v=...) -> bool: ...
def inf_set_create_jump_tables(_v=...) -> bool: ...
def inf_set_create_off_on_dref(_v=...) -> bool: ...
def inf_set_create_off_using_fixup(_v=...) -> bool: ...
def inf_set_create_strlit_on_xref(_v=...) -> bool: ...
def inf_set_data_offset(_v=...) -> bool: ...
def inf_set_database_change_count(_v) -> bool: ...
def inf_set_datatypes(_v) -> bool: ...
def inf_set_dbg_no_store_path(_v=...) -> bool: ...
def inf_set_decode_fpp(_v=...) -> bool: ...
def inf_set_del_no_xref_insns(_v=...) -> bool: ...
def inf_set_demnames(_v) -> bool: ...
def inf_set_dll(_v=...) -> bool: ...
def inf_set_filetype(_v) -> bool: ...
def inf_set_final_pass(_v=...) -> bool: ...
def inf_set_flat_off32(_v=...) -> bool: ...
def inf_set_full_sp_ana(_v=...) -> bool: ...
def inf_set_gen_assume(_v=...) -> bool: ...
def inf_set_gen_lzero(_v=...) -> bool: ...
def inf_set_gen_null(_v=...) -> bool: ...
def inf_set_gen_org(_v=...) -> bool: ...
def inf_set_gen_tryblks(_v=...) -> bool: ...
def inf_set_genflags(_v) -> bool: ...
def inf_set_graph_view(_v=...) -> bool: ...
def inf_set_guess_func_type(_v=...) -> bool: ...
def inf_set_handle_eh(_v=...) -> bool: ...
def inf_set_handle_rtti(_v=...) -> bool: ...
def inf_set_hard_float(_v=...) -> bool: ...
def inf_set_hide_comments(_v=...) -> bool: ...
def inf_set_hide_libfuncs(_v=...) -> bool: ...
def inf_set_highoff(_v) -> bool: ...
def inf_set_huge_arg_align(_v=...) -> bool: ...
def inf_set_indent(_v) -> bool: ...
def inf_set_kernel_mode(_v=...) -> bool: ...
def inf_set_lenxref(_v) -> bool: ...
def inf_set_lflags(_v) -> bool: ...
def inf_set_limiter(_v) -> bool: ...
def inf_set_limiter_empty(_v=...) -> bool: ...
def inf_set_limiter_thick(_v=...) -> bool: ...
def inf_set_limiter_thin(_v=...) -> bool: ...
def inf_set_line_pref_with_seg(_v=...) -> bool: ...
def inf_set_listnames(_v) -> bool: ...
def inf_set_loading_idc(_v=...) -> bool: ...
def inf_set_long_demnames(_v) -> bool: ...
def inf_set_lowoff(_v) -> bool: ...
def inf_set_macros_enabled(_v=...) -> bool: ...
def inf_set_main(_v) -> bool: ...
def inf_set_map_stkargs(_v=...) -> bool: ...
def inf_set_margin(_v) -> bool: ...
def inf_set_mark_code(_v=...) -> bool: ...
def inf_set_max_autoname_len(_v) -> bool: ...
def inf_set_max_ea(_v) -> bool: ...
def inf_set_maxref(_v) -> bool: ...
def inf_set_mem_aligned4(_v=...) -> bool: ...
def inf_set_merge_strlits(_v=...) -> bool: ...
def inf_set_min_ea(_v) -> bool: ...
def inf_set_nametype(_v) -> bool: ...
def inf_set_netdelta(_v) -> bool: ...
def inf_set_no_store_user_info(_v=...) -> bool: ...
def inf_set_noflow_to_data(_v=...) -> bool: ...
def inf_set_noret_ana(_v=...) -> bool: ...
def inf_set_omax_ea(_v) -> bool: ...
def inf_set_omin_ea(_v) -> bool: ...
def inf_set_op_offset(_v=...) -> bool: ...
def inf_set_ostype(_v) -> bool: ...
def inf_set_outflags(_v) -> bool: ...
def inf_set_pack_idb(_v=...) -> bool: ...
def inf_set_pack_mode(pack_mode) -> int: ...
def inf_set_pack_stkargs(_v=...) -> bool: ...
def inf_set_prefflag(_v) -> bool: ...
def inf_set_prefix_show_funcoff(_v=...) -> bool: ...
def inf_set_prefix_show_segaddr(_v=...) -> bool: ...
def inf_set_prefix_show_stack(_v=...) -> bool: ...
def inf_set_prefix_truncate_opcode_bytes(_v=...) -> bool: ...
def inf_set_privrange(_v) -> bool: ...
def inf_set_privrange_end_ea(_v) -> bool: ...
def inf_set_privrange_start_ea(_v) -> bool: ...
def inf_set_procname(_v, len=...) -> bool: ...
def inf_set_propagate_regargs(_v=...) -> bool: ...
def inf_set_propagate_stkargs(_v=...) -> bool: ...
def inf_set_readonly_idb(_v=...) -> bool: ...
def inf_set_refcmtnum(_v) -> bool: ...
def inf_set_rename_jumpfunc(_v=...) -> bool: ...
def inf_set_rename_nullsub(_v=...) -> bool: ...
def inf_set_short_demnames(_v) -> bool: ...
def inf_set_should_create_stkvars(_v=...) -> bool: ...
def inf_set_should_trace_sp(_v=...) -> bool: ...
def inf_set_show_all_comments(_v=...) -> bool: ...
def inf_set_show_auto(_v=...) -> bool: ...
def inf_set_show_hidden_funcs(_v=...) -> bool: ...
def inf_set_show_hidden_insns(_v=...) -> bool: ...
def inf_set_show_hidden_segms(_v=...) -> bool: ...
def inf_set_show_line_pref(_v=...) -> bool: ...
def inf_set_show_repeatables(_v=...) -> bool: ...
def inf_set_show_src_linnum(_v=...) -> bool: ...
def inf_set_show_void(_v=...) -> bool: ...
def inf_set_show_xref_fncoff(_v=...) -> bool: ...
def inf_set_show_xref_seg(_v=...) -> bool: ...
def inf_set_show_xref_tmarks(_v=...) -> bool: ...
def inf_set_show_xref_val(_v=...) -> bool: ...
def inf_set_snapshot(_v=...) -> bool: ...
def inf_set_specsegs(_v) -> bool: ...
def inf_set_stack_ldbl(_v=...) -> bool: ...
def inf_set_stack_varargs(_v=...) -> bool: ...
def inf_set_start_cs(_v) -> bool: ...
def inf_set_start_ea(_v) -> bool: ...
def inf_set_start_ip(_v) -> bool: ...
def inf_set_start_sp(_v) -> bool: ...
def inf_set_start_ss(_v) -> bool: ...
def inf_set_strlit_autocmt(_v=...) -> bool: ...
def inf_set_strlit_break(_v) -> bool: ...
def inf_set_strlit_flags(_v) -> bool: ...
def inf_set_strlit_name_bit(_v=...) -> bool: ...
def inf_set_strlit_names(_v=...) -> bool: ...
def inf_set_strlit_pref(_v, len=...) -> bool: ...
def inf_set_strlit_savecase(_v=...) -> bool: ...
def inf_set_strlit_serial_names(_v=...) -> bool: ...
def inf_set_strlit_sernum(_v) -> bool: ...
def inf_set_strlit_zeroes(_v) -> bool: ...
def inf_set_strtype(_v) -> bool: ...
def inf_set_trace_flow(_v=...) -> bool: ...
def inf_set_truncate_on_del(_v=...) -> bool: ...
def inf_set_type_xrefnum(_v) -> bool: ...
def inf_set_unicode_strlits(_v=...) -> bool: ...
def inf_set_use_allasm(_v=...) -> bool: ...
def inf_set_use_flirt(_v=...) -> bool: ...
def inf_set_use_gcc_layout(_v=...) -> bool: ...
def inf_set_version(_v) -> bool: ...
def inf_set_wide_high_byte_first(_v=...) -> bool: ...
def inf_set_xrefflag(_v) -> bool: ...
def inf_set_xrefnum(_v) -> bool: ...
def inf_should_create_stkvars() -> bool: ...
def inf_should_trace_sp() -> bool: ...
def inf_show_all_comments() -> bool: ...
def inf_show_auto() -> bool: ...
def inf_show_hidden_funcs() -> bool: ...
def inf_show_hidden_insns() -> bool: ...
def inf_show_hidden_segms() -> bool: ...
def inf_show_line_pref() -> bool: ...
def inf_show_repeatables() -> bool: ...
def inf_show_src_linnum() -> bool: ...
def inf_show_void() -> bool: ...
def inf_show_xref_fncoff() -> bool: ...
def inf_show_xref_seg() -> bool: ...
def inf_show_xref_tmarks() -> bool: ...
def inf_show_xref_val() -> bool: ...
def inf_stack_ldbl() -> bool: ...
def inf_stack_varargs() -> bool: ...
def inf_strlit_autocmt() -> bool: ...
def inf_strlit_name_bit() -> bool: ...
def inf_strlit_names() -> bool: ...
def inf_strlit_savecase() -> bool: ...
def inf_strlit_serial_names() -> bool: ...
def inf_test_mode() -> bool: ...
def inf_trace_flow() -> bool: ...
def inf_truncate_on_del() -> bool: ...
def inf_unicode_strlits() -> bool: ...
def inf_use_allasm() -> bool: ...
def inf_use_flirt() -> bool: ...
def inf_use_gcc_layout() -> bool: ...
def is_database_busy() -> bool: ...
def is_filetype_like_binary(ft) -> bool: ...
def move_privrange(new_privrange_start) -> bool: ...
def new_compiler_info_t() -> compiler_info_t: ...
def switch_dbctx(*args, **kwargs): ...
def to_ea(reg_cs, reg_ip) -> ea_t: ...
def validate_idb(vld_flags=...) -> size_t: ...
