# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from typing import Any, overload

BADNODE: int
SIZEOF_nodeidx_t: int
SWIG_PYTHON_LEGACY_BOOL: int
cvar: Any

def delete_netnode(self) -> Any: ...
def exist(n) -> bool: ...
@overload
def netnode___eq__(self, n) -> bool: ...
@overload
def netnode___eq__(self, x) -> bool: ...
@overload
def netnode___ne__(self, n) -> bool: ...
@overload
def netnode___ne__(self, x) -> bool: ...
@overload
def netnode_altdel(self, alt, tag=...) -> bool: ...
@overload
def netnode_altdel(self) -> bool: ...
def netnode_altdel_all(self, tag=...) -> bool: ...
def netnode_altdel_ea(self, ea, tag=...) -> bool: ...
def netnode_altdel_idx8(self, alt, tag) -> bool: ...
def netnode_altfirst(self, tag=...) -> nodeidx_t: ...
def netnode_altfirst_idx8(self, tag) -> nodeidx_t: ...
def netnode_altlast(self, tag=...) -> nodeidx_t: ...
def netnode_altlast_idx8(self, tag) -> nodeidx_t: ...
def netnode_altnext(self, cur, tag=...) -> nodeidx_t: ...
def netnode_altnext_idx8(self, cur, tag) -> nodeidx_t: ...
def netnode_altprev(self, cur, tag=...) -> nodeidx_t: ...
def netnode_altprev_idx8(self, cur, tag) -> nodeidx_t: ...
def netnode_altset(self, alt, value, tag=...) -> bool: ...
def netnode_altset_ea(self, ea, value, tag=...) -> bool: ...
def netnode_altset_idx8(self, alt, val, tag) -> bool: ...
def netnode_altshift(self, _from, to, size, tag=...) -> size_t: ...
def netnode_altval(self, alt, tag=...) -> nodeidx_t: ...
def netnode_altval_ea(self, ea, tag=...) -> nodeidx_t: ...
def netnode_altval_idx8(self, alt, tag) -> nodeidx_t: ...
def netnode_blobshift(self, _from, to, size, tag) -> size_t: ...
def netnode_blobsize(self, _start, tag) -> size_t: ...
def netnode_blobsize_ea(self, ea, tag) -> size_t: ...
def netnode_chardel(self, alt, tag) -> bool: ...
def netnode_chardel_ea(self, ea, tag) -> bool: ...
def netnode_chardel_idx8(self, alt, tag) -> bool: ...
def netnode_charfirst(self, tag) -> nodeidx_t: ...
def netnode_charfirst_idx8(self, tag) -> nodeidx_t: ...
def netnode_charlast(self, tag) -> nodeidx_t: ...
def netnode_charlast_idx8(self, tag) -> nodeidx_t: ...
def netnode_charnext(self, cur, tag) -> nodeidx_t: ...
def netnode_charnext_idx8(self, cur, tag) -> nodeidx_t: ...
def netnode_charprev(self, cur, tag) -> nodeidx_t: ...
def netnode_charprev_idx8(self, cur, tag) -> nodeidx_t: ...
def netnode_charset(self, alt, val, tag) -> bool: ...
def netnode_charset_ea(self, ea, val, tag) -> bool: ...
def netnode_charset_idx8(self, alt, val, tag) -> bool: ...
def netnode_charshift(self, _from, to, size, tag) -> size_t: ...
def netnode_charval(self, alt, tag) -> uchar: ...
def netnode_charval_ea(self, ea, tag) -> uchar: ...
def netnode_charval_idx8(self, alt, tag) -> uchar: ...
def netnode_copyto(self, destnode, count=...) -> size_t: ...
@overload
def netnode_create(self, _name, namlen=...) -> bool: ...
@overload
def netnode_create(self) -> bool: ...
def netnode_delblob(self, _start, tag) -> int: ...
def netnode_delblob_ea(self, ea, tag) -> int: ...
def netnode_delvalue(self) -> bool: ...
def netnode_eadel(self, ea, tag) -> bool: ...
def netnode_eadel_idx8(self, idx, tag) -> bool: ...
def netnode_eaget(self, ea, tag) -> ea_t: ...
def netnode_eaget_idx(self, idx, tag) -> ea_t: ...
def netnode_eaget_idx8(self, idx, tag) -> ea_t: ...
def netnode_easet(self, ea, addr, tag) -> bool: ...
def netnode_easet_idx(self, idx, addr, tag) -> bool: ...
def netnode_easet_idx8(self, idx, addr, tag) -> bool: ...
def netnode_end(self) -> bool: ...
def netnode_exist(_name) -> bool: ...
def netnode_get_name(self) -> ssize_t: ...
def netnode_getblob(*args, **kwargs): ...
def netnode_getblob_ea(*args, **kwargs): ...
def netnode_getclob(*args, **kwargs): ...
def netnode_hashdel(self, idx, tag=...) -> bool: ...
def netnode_hashdel_all(self, tag=...) -> bool: ...
def netnode_hashfirst(self, tag=...) -> ssize_t: ...
def netnode_hashlast(self, tag=...) -> ssize_t: ...
def netnode_hashnext(self, idx, tag=...) -> ssize_t: ...
def netnode_hashprev(self, idx, tag=...) -> ssize_t: ...
def netnode_hashset(self, idx, value, tag=...) -> bool: ...
def netnode_hashset_buf(self, idx, py_str, tag=...) -> bool: ...
def netnode_hashset_idx(self, idx, value, tag=...) -> bool: ...
def netnode_hashstr(self, idx, tag=...) -> ssize_t: ...
def netnode_hashstr_buf(*args, **kwargs): ...
def netnode_hashval(self, idx, tag=...) -> ssize_t: ...
def netnode_hashval_long(self, idx, tag=...) -> nodeidx_t: ...
def netnode_index(self) -> nodeidx_t: ...
def netnode_kill(self) -> Any: ...
def netnode_long_value(self) -> nodeidx_t: ...
def netnode_lower_bound(self, cur, tag=...) -> nodeidx_t: ...
def netnode_lower_bound_ea(self, ea, tag=...) -> nodeidx_t: ...
def netnode_lower_bound_idx8(self, alt, tag) -> nodeidx_t: ...
def netnode_moveto(self, destnode, count=...) -> size_t: ...
def netnode_next(self) -> bool: ...
def netnode_prev(self) -> bool: ...
def netnode_rename(self, newname, namlen=...) -> bool: ...
def netnode_set(self, value) -> bool: ...
def netnode_set_long(self, x) -> bool: ...
def netnode_setblob(self, buf, _start, tag) -> bool: ...
def netnode_setblob_ea(self, buf, ea, tag) -> bool: ...
def netnode_start(self) -> bool: ...
@overload
def netnode_supdel(self, alt, tag=...) -> bool: ...
@overload
def netnode_supdel(self) -> bool: ...
def netnode_supdel_all(self, tag) -> bool: ...
def netnode_supdel_ea(self, ea, tag=...) -> bool: ...
def netnode_supdel_idx8(self, alt, tag) -> bool: ...
def netnode_supdel_range(self, idx1, idx2, tag) -> int: ...
def netnode_supdel_range_idx8(self, idx1, idx2, tag) -> int: ...
def netnode_supfirst(self, tag=...) -> nodeidx_t: ...
def netnode_supfirst_idx8(self, tag) -> nodeidx_t: ...
def netnode_suplast(self, tag=...) -> nodeidx_t: ...
def netnode_suplast_idx8(self, tag) -> nodeidx_t: ...
def netnode_supnext(self, cur, tag=...) -> nodeidx_t: ...
def netnode_supnext_idx8(self, alt, tag) -> nodeidx_t: ...
def netnode_supprev(self, cur, tag=...) -> nodeidx_t: ...
def netnode_supprev_idx8(self, alt, tag) -> nodeidx_t: ...
@overload
def netnode_supset(self, alt, value, tag=...) -> bool: ...
@overload
def netnode_supset(self, alt, value, tag=...) -> bool: ...
@overload
def netnode_supset_ea(self, ea, value, tag=...) -> bool: ...
@overload
def netnode_supset_ea(self, ea, value, tag=...) -> bool: ...
def netnode_supset_idx8(self, alt, value, tag) -> bool: ...
def netnode_supshift(self, _from, to, size, tag=...) -> size_t: ...
def netnode_supstr(self, alt, tag=...) -> ssize_t: ...
def netnode_supstr_ea(self, ea, tag=...) -> ssize_t: ...
def netnode_supstr_idx8(self, alt, tag) -> ssize_t: ...
def netnode_supval(self, alt, tag=...) -> ssize_t: ...
def netnode_supval_ea(self, ea, tag=...) -> ssize_t: ...
def netnode_supval_idx8(self, alt, tag) -> ssize_t: ...
def netnode_swiginit(*args, **kwargs): ...
def netnode_swigregister(*args, **kwargs): ...
def netnode_valobj(self) -> ssize_t: ...
def netnode_valstr(self) -> ssize_t: ...
def netnode_value_exists(self) -> bool: ...
def new_netnode(_name, namlen=..., do_create=...) -> netnode: ...
