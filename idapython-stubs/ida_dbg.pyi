# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

import ida_idaapi
from _typeshed import Incomplete

def _swig_repr(self): ...
def _swig_setattr_nondynamic_instance_variable(set): ...
def _swig_setattr_nondynamic_class_variable(set): ...
def _swig_add_metaclass(metaclass): ...

class _SwigNonDynamicMeta(type):
    __setattr__: Incomplete

SWIG_PYTHON_LEGACY_BOOL: Incomplete

class bpt_vec_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def push_back(self, *args) -> 'bpt_t &': ...
    def pop_back(self, *args) -> None: ...
    def size(self, *args) -> size_t: ...
    def empty(self, *args) -> bool: ...
    def at(self, *args) -> 'bpt_t const &': ...
    def qclear(self, *args) -> None: ...
    def clear(self, *args) -> None: ...
    def resize(self, *args) -> None: ...
    def grow(self, *args) -> None: ...
    def capacity(self, *args) -> size_t: ...
    def reserve(self, *args) -> None: ...
    def truncate(self, *args) -> None: ...
    def swap(self, *args) -> None: ...
    def extract(self, *args) -> 'bpt_t *': ...
    def inject(self, *args) -> None: ...
    def begin(self, *args) -> 'qvector< bpt_t >::const_iterator': ...
    def end(self, *args) -> 'qvector< bpt_t >::const_iterator': ...
    def insert(self, *args) -> 'qvector< bpt_t >::iterator': ...
    def erase(self, *args) -> 'qvector< bpt_t >::iterator': ...
    def __len__(self, *args) -> size_t: ...
    def __getitem__(self, *args) -> 'bpt_t const &': ...
    def __setitem__(self, *args) -> None: ...
    front = ida_idaapi._qvector_front
    back = ida_idaapi._qvector_back
    __iter__ = ida_idaapi._bounded_getitem_iterator

class tev_reg_values_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def push_back(self, *args) -> 'tev_reg_value_t &': ...
    def pop_back(self, *args) -> None: ...
    def size(self, *args) -> size_t: ...
    def empty(self, *args) -> bool: ...
    def at(self, *args) -> 'tev_reg_value_t const &': ...
    def qclear(self, *args) -> None: ...
    def clear(self, *args) -> None: ...
    def resize(self, *args) -> None: ...
    def grow(self, *args) -> None: ...
    def capacity(self, *args) -> size_t: ...
    def reserve(self, *args) -> None: ...
    def truncate(self, *args) -> None: ...
    def swap(self, *args) -> None: ...
    def extract(self, *args) -> 'tev_reg_value_t *': ...
    def inject(self, *args) -> None: ...
    def begin(self, *args) -> 'qvector< tev_reg_value_t >::const_iterator': ...
    def end(self, *args) -> 'qvector< tev_reg_value_t >::const_iterator': ...
    def insert(self, *args) -> 'qvector< tev_reg_value_t >::iterator': ...
    def erase(self, *args) -> 'qvector< tev_reg_value_t >::iterator': ...
    def __len__(self, *args) -> size_t: ...
    def __getitem__(self, *args) -> 'tev_reg_value_t const &': ...
    def __setitem__(self, *args) -> None: ...
    front = ida_idaapi._qvector_front
    back = ida_idaapi._qvector_back
    __iter__ = ida_idaapi._bounded_getitem_iterator

class tevinforeg_vec_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def push_back(self, *args) -> 'tev_info_reg_t &': ...
    def pop_back(self, *args) -> None: ...
    def size(self, *args) -> size_t: ...
    def empty(self, *args) -> bool: ...
    def at(self, *args) -> 'tev_info_reg_t const &': ...
    def qclear(self, *args) -> None: ...
    def clear(self, *args) -> None: ...
    def resize(self, *args) -> None: ...
    def grow(self, *args) -> None: ...
    def capacity(self, *args) -> size_t: ...
    def reserve(self, *args) -> None: ...
    def truncate(self, *args) -> None: ...
    def swap(self, *args) -> None: ...
    def extract(self, *args) -> 'tev_info_reg_t *': ...
    def inject(self, *args) -> None: ...
    def begin(self, *args) -> 'qvector< tev_info_reg_t >::const_iterator': ...
    def end(self, *args) -> 'qvector< tev_info_reg_t >::const_iterator': ...
    def insert(self, *args) -> 'qvector< tev_info_reg_t >::iterator': ...
    def erase(self, *args) -> 'qvector< tev_info_reg_t >::iterator': ...
    def __len__(self, *args) -> size_t: ...
    def __getitem__(self, *args) -> 'tev_info_reg_t const &': ...
    def __setitem__(self, *args) -> None: ...
    front = ida_idaapi._qvector_front
    back = ida_idaapi._qvector_back
    __iter__ = ida_idaapi._bounded_getitem_iterator

class memreg_infos_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def push_back(self, *args) -> 'memreg_info_t &': ...
    def pop_back(self, *args) -> None: ...
    def size(self, *args) -> size_t: ...
    def empty(self, *args) -> bool: ...
    def at(self, *args) -> 'memreg_info_t const &': ...
    def qclear(self, *args) -> None: ...
    def clear(self, *args) -> None: ...
    def resize(self, *args) -> None: ...
    def grow(self, *args) -> None: ...
    def capacity(self, *args) -> size_t: ...
    def reserve(self, *args) -> None: ...
    def truncate(self, *args) -> None: ...
    def swap(self, *args) -> None: ...
    def extract(self, *args) -> 'memreg_info_t *': ...
    def inject(self, *args) -> None: ...
    def begin(self, *args) -> 'qvector< memreg_info_t >::const_iterator': ...
    def end(self, *args) -> 'qvector< memreg_info_t >::const_iterator': ...
    def insert(self, *args) -> 'qvector< memreg_info_t >::iterator': ...
    def erase(self, *args) -> 'qvector< memreg_info_t >::iterator': ...
    def __len__(self, *args) -> size_t: ...
    def __getitem__(self, *args) -> 'memreg_info_t const &': ...
    def __setitem__(self, *args) -> None: ...
    front = ida_idaapi._qvector_front
    back = ida_idaapi._qvector_back
    __iter__ = ida_idaapi._bounded_getitem_iterator

def run_to(*args) -> bool: ...
def request_run_to(*args) -> bool: ...

dbg_null: Incomplete
dbg_process_start: Incomplete
dbg_process_exit: Incomplete
dbg_process_attach: Incomplete
dbg_process_detach: Incomplete
dbg_thread_start: Incomplete
dbg_thread_exit: Incomplete
dbg_library_load: Incomplete
dbg_library_unload: Incomplete
dbg_information: Incomplete
dbg_exception: Incomplete
dbg_suspend_process: Incomplete
dbg_bpt: Incomplete
dbg_trace: Incomplete
dbg_request_error: Incomplete
dbg_step_into: Incomplete
dbg_step_over: Incomplete
dbg_run_to: Incomplete
dbg_step_until_ret: Incomplete
dbg_bpt_changed: Incomplete
dbg_started_loading_bpts: Incomplete
dbg_finished_loading_bpts: Incomplete
dbg_last: Incomplete
BPTEV_ADDED: Incomplete
BPTEV_REMOVED: Incomplete
BPTEV_CHANGED: Incomplete

def run_requests(*args) -> bool: ...
def get_running_request(*args) -> ui_notification_t: ...
def is_request_running(*args) -> bool: ...
def get_running_notification(*args) -> dbg_notification_t: ...
def clear_requests_queue(*args) -> None: ...
def get_process_state(*args) -> int: ...

DSTATE_SUSP: Incomplete
DSTATE_NOTASK: Incomplete
DSTATE_RUN: Incomplete

def is_valid_dstate(*args) -> bool: ...

DBGINV_MEMORY: Incomplete
DBGINV_MEMCFG: Incomplete
DBGINV_REGS: Incomplete
DBGINV_ALL: Incomplete
DBGINV_REDRAW: Incomplete
DBGINV_NONE: Incomplete

def set_process_state(*args) -> int: ...
def invalidate_dbg_state(*args) -> int: ...
def start_process(*args) -> int: ...
def request_start_process(*args) -> int: ...
def suspend_process(*args) -> bool: ...
def request_suspend_process(*args) -> bool: ...
def continue_process(*args) -> bool: ...
def request_continue_process(*args) -> bool: ...
def exit_process(*args) -> bool: ...
def request_exit_process(*args) -> bool: ...
def get_processes(*args) -> ssize_t: ...
def attach_process(*args) -> int: ...
def request_attach_process(*args) -> int: ...
def detach_process(*args) -> bool: ...
def request_detach_process(*args) -> bool: ...
def is_debugger_busy(*args) -> bool: ...
def get_thread_qty(*args) -> int: ...
def getn_thread(*args) -> thid_t: ...
def get_current_thread(*args) -> thid_t: ...
def getn_thread_name(*args) -> 'char const *': ...
def select_thread(*args) -> bool: ...
def request_select_thread(*args) -> bool: ...
def suspend_thread(*args) -> int: ...
def request_suspend_thread(*args) -> int: ...
def resume_thread(*args) -> int: ...
def request_resume_thread(*args) -> int: ...
def get_first_module(*args) -> bool: ...
def get_next_module(*args) -> bool: ...
def step_into(*args) -> bool: ...
def request_step_into(*args) -> bool: ...
def step_over(*args) -> bool: ...
def request_step_over(*args) -> bool: ...
def step_until_ret(*args) -> bool: ...
def request_step_until_ret(*args) -> bool: ...
def set_resume_mode(*args) -> bool: ...
def request_set_resume_mode(*args) -> bool: ...
def get_dbg_reg_info(*args) -> bool: ...
def get_sp_val(*args) -> 'uint64 *': ...
def get_ip_val(*args) -> 'uint64 *': ...
def is_reg_integer(*args) -> bool: ...
def is_reg_float(*args) -> bool: ...
def is_reg_custom(*args) -> bool: ...
def set_bptloc_string(*args) -> int: ...
def get_bptloc_string(*args) -> 'char const *': ...

MOVBPT_OK: Incomplete
MOVBPT_NOT_FOUND: Incomplete
MOVBPT_DEST_BUSY: Incomplete
MOVBPT_BAD_TYPE: Incomplete

class bptaddrs_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    bpt: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete

BPLT_ABS: Incomplete
BPLT_REL: Incomplete
BPLT_SYM: Incomplete
BPLT_SRC: Incomplete

class bpt_location_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    info: Incomplete
    index: Incomplete
    loctype: Incomplete
    def type(self, *args) -> bpt_loctype_t: ...
    def is_empty_path(self, *args) -> bool: ...
    def path(self, *args) -> 'char const *': ...
    def symbol(self, *args) -> 'char const *': ...
    def lineno(self, *args) -> int: ...
    def offset(self, *args) -> uval_t: ...
    def ea(self, *args) -> ea_t: ...
    def __init__(self, *args) -> None: ...
    def set_abs_bpt(self, *args) -> None: ...
    def set_src_bpt(self, *args) -> None: ...
    def set_sym_bpt(self, *args) -> None: ...
    def set_rel_bpt(self, *args) -> None: ...
    def compare(self, *args) -> int: ...
    def __eq__(self, *args) -> bool: ...
    def __ne__(self, *args) -> bool: ...
    def __lt__(self, *args) -> bool: ...
    def __gt__(self, *args) -> bool: ...
    def __le__(self, *args) -> bool: ...
    def __ge__(self, *args) -> bool: ...
    __swig_destroy__: Incomplete

class bpt_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    cb: Incomplete
    loc: Incomplete
    pid: Incomplete
    tid: Incomplete
    ea: Incomplete
    type: Incomplete
    pass_count: Incomplete
    flags: Incomplete
    props: Incomplete
    size: Incomplete
    cndidx: Incomplete
    bptid: Incomplete
    def __init__(self, *args) -> None: ...
    def is_hwbpt(self, *args) -> bool: ...
    def enabled(self, *args) -> bool: ...
    def is_low_level(self, *args) -> bool: ...
    def badbpt(self, *args) -> bool: ...
    def listbpt(self, *args) -> bool: ...
    def is_compiled(self, *args) -> bool: ...
    def is_active(self, *args) -> bool: ...
    def is_partially_active(self, *args) -> bool: ...
    def is_inactive(self, *args) -> bool: ...
    def is_page_bpt(self, *args) -> bool: ...
    def get_size(self, *args) -> int: ...
    def set_abs_bpt(self, *args) -> None: ...
    def set_src_bpt(self, *args) -> None: ...
    def set_sym_bpt(self, *args) -> None: ...
    def set_rel_bpt(self, *args) -> None: ...
    def is_absbpt(self, *args) -> bool: ...
    def is_relbpt(self, *args) -> bool: ...
    def is_symbpt(self, *args) -> bool: ...
    def is_srcbpt(self, *args) -> bool: ...
    def is_tracemodebpt(self, *args) -> bool: ...
    def is_traceonbpt(self, *args) -> bool: ...
    def is_traceoffbpt(self, *args) -> bool: ...
    def set_trace_action(self, *args) -> bool: ...
    def get_cnd_elang_idx(self, *args) -> size_t: ...
    condition: Incomplete
    elang: Incomplete
    __swig_destroy__: Incomplete

BPT_BRK: Incomplete
BPT_TRACE: Incomplete
BPT_UPDMEM: Incomplete
BPT_ENABLED: Incomplete
BPT_LOWCND: Incomplete
BPT_TRACEON: Incomplete
BPT_TRACE_INSN: Incomplete
BPT_TRACE_FUNC: Incomplete
BPT_TRACE_BBLK: Incomplete
BPT_TRACE_TYPES: Incomplete
BPT_ELANG_MASK: Incomplete
BPT_ELANG_SHIFT: Incomplete
BKPT_BADBPT: Incomplete
BKPT_LISTBPT: Incomplete
BKPT_TRACE: Incomplete
BKPT_ACTIVE: Incomplete
BKPT_PARTIAL: Incomplete
BKPT_CNDREADY: Incomplete
BKPT_FAKEPEND: Incomplete
BKPT_PAGE: Incomplete

def get_bpt_qty(*args) -> int: ...
def getn_bpt(*args) -> bool: ...
def get_bpt(*args) -> bool: ...
def exist_bpt(*args) -> bool: ...
def add_bpt(*args) -> bool: ...
def request_add_bpt(*args) -> bool: ...
def del_bpt(*args) -> bool: ...
def request_del_bpt(*args) -> bool: ...
def update_bpt(*args) -> bool: ...
def find_bpt(*args) -> bool: ...
def enable_bpt(*args) -> bool: ...
def disable_bpt(*args) -> bool: ...
def request_enable_bpt(*args) -> bool: ...
def request_disable_bpt(*args) -> bool: ...
def check_bpt(*args) -> int: ...

BPTCK_NONE: Incomplete
BPTCK_NO: Incomplete
BPTCK_YES: Incomplete
BPTCK_ACT: Incomplete

def set_trace_size(*args) -> bool: ...
def clear_trace(*args) -> None: ...
def request_clear_trace(*args) -> None: ...
def is_step_trace_enabled(*args) -> bool: ...
def enable_step_trace(*args) -> bool: ...
def disable_step_trace(*args) -> bool: ...
def request_enable_step_trace(*args) -> bool: ...
def request_disable_step_trace(*args) -> bool: ...

ST_OVER_DEBUG_SEG: Incomplete
ST_OVER_LIB_FUNC: Incomplete
ST_ALREADY_LOGGED: Incomplete
ST_SKIP_LOOPS: Incomplete
ST_DIFFERENTIAL: Incomplete
ST_OPTIONS_MASK: Incomplete
ST_OPTIONS_DEFAULT: Incomplete
IT_LOG_SAME_IP: Incomplete
FT_LOG_RET: Incomplete
BT_LOG_INSTS: Incomplete

def get_step_trace_options(*args) -> int: ...
def set_step_trace_options(*args) -> None: ...
def request_set_step_trace_options(*args) -> None: ...
def is_insn_trace_enabled(*args) -> bool: ...
def enable_insn_trace(*args) -> bool: ...
def disable_insn_trace(*args) -> bool: ...
def request_enable_insn_trace(*args) -> bool: ...
def request_disable_insn_trace(*args) -> bool: ...
def get_insn_trace_options(*args) -> int: ...
def set_insn_trace_options(*args) -> None: ...
def request_set_insn_trace_options(*args) -> None: ...
def is_func_trace_enabled(*args) -> bool: ...
def enable_func_trace(*args) -> bool: ...
def disable_func_trace(*args) -> bool: ...
def request_enable_func_trace(*args) -> bool: ...
def request_disable_func_trace(*args) -> bool: ...
def get_func_trace_options(*args) -> int: ...
def set_func_trace_options(*args) -> None: ...
def request_set_func_trace_options(*args) -> None: ...
def enable_bblk_trace(*args) -> bool: ...
def disable_bblk_trace(*args) -> bool: ...
def request_enable_bblk_trace(*args) -> bool: ...
def request_disable_bblk_trace(*args) -> bool: ...
def is_bblk_trace_enabled(*args) -> bool: ...
def get_bblk_trace_options(*args) -> int: ...
def set_bblk_trace_options(*args) -> None: ...
def request_set_bblk_trace_options(*args) -> None: ...

tev_none: Incomplete
tev_insn: Incomplete
tev_call: Incomplete
tev_ret: Incomplete
tev_bpt: Incomplete
tev_mem: Incomplete
tev_event: Incomplete
tev_max: Incomplete

class tev_info_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    type: Incomplete
    tid: Incomplete
    ea: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete

class memreg_info_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    ea: Incomplete
    def get_bytes(self, *args) -> 'PyObject *': ...
    bytes: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete

def get_tev_qty(*args) -> int: ...
def get_tev_info(*args) -> bool: ...
def get_insn_tev_reg_val(*args) -> bool: ...
def get_insn_tev_reg_mem(*args) -> bool: ...
def get_insn_tev_reg_result(*args) -> bool: ...
def get_call_tev_callee(*args) -> ea_t: ...
def get_ret_tev_return(*args) -> ea_t: ...
def get_bpt_tev_ea(*args) -> ea_t: ...
def get_tev_memory_info(*args) -> bool: ...
def get_tev_event(*args) -> bool: ...
def get_trace_base_address(*args) -> ea_t: ...
def set_trace_base_address(*args) -> None: ...
def dbg_add_thread(*args) -> None: ...
def dbg_del_thread(*args) -> None: ...
def dbg_add_tev(*args) -> None: ...

class tev_reg_value_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    value: Incomplete
    reg_idx: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete

class tev_info_reg_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    info: Incomplete
    registers: Incomplete
    def __init__(self, *args) -> None: ...
    __swig_destroy__: Incomplete

SAVE_ALL_VALUES: Incomplete
SAVE_DIFF: Incomplete
SAVE_NONE: Incomplete

def dbg_add_many_tevs(*args) -> bool: ...
def dbg_add_insn_tev(*args) -> bool: ...
def dbg_add_bpt_tev(*args) -> bool: ...
def dbg_add_call_tev(*args) -> None: ...
def dbg_add_ret_tev(*args) -> None: ...
def dbg_add_debug_event(*args) -> None: ...
def load_trace_file(*args) -> 'qstring *': ...
def save_trace_file(*args) -> bool: ...
def is_valid_trace_file(*args) -> bool: ...
def set_trace_file_desc(*args) -> bool: ...
def get_trace_file_desc(*args) -> 'qstring *': ...
def choose_trace_file(*args) -> 'qstring *': ...
def diff_trace_file(*args) -> bool: ...
def graph_trace(*args) -> bool: ...
def set_highlight_trace_options(*args) -> None: ...
def set_trace_platform(*args) -> None: ...
def get_trace_platform(*args) -> 'char const *': ...
def set_trace_dynamic_register_set(*args) -> None: ...
def get_trace_dynamic_register_set(*args) -> None: ...

DEC_NOTASK: Incomplete
DEC_ERROR: Incomplete
DEC_TIMEOUT: Incomplete
WFNE_ANY: Incomplete
WFNE_SUSP: Incomplete
WFNE_SILENT: Incomplete
WFNE_CONT: Incomplete
WFNE_NOWAIT: Incomplete
WFNE_USEC: Incomplete
DOPT_SEGM_MSGS: Incomplete
DOPT_START_BPT: Incomplete
DOPT_THREAD_MSGS: Incomplete
DOPT_THREAD_BPT: Incomplete
DOPT_BPT_MSGS: Incomplete
DOPT_LIB_MSGS: Incomplete
DOPT_LIB_BPT: Incomplete
DOPT_INFO_MSGS: Incomplete
DOPT_INFO_BPT: Incomplete
DOPT_REAL_MEMORY: Incomplete
DOPT_REDO_STACK: Incomplete
DOPT_ENTRY_BPT: Incomplete
DOPT_EXCDLG: Incomplete
EXCDLG_NEVER: Incomplete
EXCDLG_UNKNOWN: Incomplete
EXCDLG_ALWAYS: Incomplete
DOPT_LOAD_DINFO: Incomplete
DOPT_END_BPT: Incomplete
DOPT_TEMP_HWBPT: Incomplete
DOPT_FAST_STEP: Incomplete
DOPT_DISABLE_ASLR: Incomplete

def wait_for_next_event(*args) -> dbg_event_code_t: ...
def get_debug_event(*args) -> 'debug_event_t const *': ...
def set_debugger_options(*args) -> uint: ...
def set_remote_debugger(*args) -> None: ...
def get_process_options(*args) -> 'qstring *, qstring *, qstring *, qstring *, qstring *, int *': ...
def set_process_options(*args) -> None: ...
def retrieve_exceptions(*args) -> 'excvec_t *': ...
def store_exceptions(*args) -> bool: ...
def define_exception(*args) -> 'char const *': ...

class eval_ctx_t:
    thisown: Incomplete
    __repr__ = _swig_repr
    def __init__(self, *args) -> None: ...
    ea: Incomplete
    __swig_destroy__: Incomplete

SRCIT_NONE: Incomplete
SRCIT_MODULE: Incomplete
SRCIT_FUNC: Incomplete
SRCIT_STMT: Incomplete
SRCIT_EXPR: Incomplete
SRCIT_STTVAR: Incomplete
SRCIT_LOCVAR: Incomplete
SRCDBG_PROV_VERSION: Incomplete

def create_source_viewer(*args) -> 'source_view_t *': ...
def get_dbg_byte(*args) -> 'uint32 *': ...
def put_dbg_byte(*args) -> bool: ...
def invalidate_dbgmem_config(*args) -> None: ...
def invalidate_dbgmem_contents(*args) -> None: ...
def is_debugger_on(*args) -> bool: ...
def is_debugger_memory(*args) -> bool: ...
def get_tev_ea(*args) -> ea_t: ...
def get_tev_type(*args) -> int: ...
def get_tev_tid(*args) -> int: ...
def bring_debugger_to_front(*args) -> None: ...
def set_manual_regions(*args) -> None: ...
def edit_manual_regions(*args) -> None: ...
def enable_manual_regions(*args) -> None: ...
def handle_debug_event(*args) -> int: ...
def add_virt_module(*args) -> bool: ...
def del_virt_module(*args) -> bool: ...
def internal_ioctl(*args) -> int: ...
def get_dbg_memory_info(*args) -> int: ...
def set_bpt_group(*args) -> bool: ...
def set_bptloc_group(*args) -> bool: ...
def get_bpt_group(*args) -> 'qstring *': ...
def rename_bptgrp(*args) -> bool: ...
def del_bptgrp(*args) -> bool: ...
def get_grp_bpts(*args) -> ssize_t: ...
def enable_bptgrp(*args) -> int: ...
def get_local_vars(*args) -> bool: ...
def srcdbg_request_step_into(*args) -> bool: ...
def srcdbg_request_step_over(*args) -> bool: ...
def srcdbg_request_step_until_ret(*args) -> bool: ...
def hide_all_bpts(*args) -> int: ...
def read_dbg_memory(*args) -> ssize_t: ...
def get_module_info(*args) -> bool: ...
def dbg_bin_search(*args) -> 'uint64 *, qstring *': ...
def load_debugger(*args) -> bool: ...
def collect_stack_trace(*args) -> bool: ...
def get_global_var(*args) -> bool: ...
def get_local_var(*args) -> bool: ...
def get_srcinfo_provider(*args) -> 'srcinfo_provider_t *': ...
def get_current_source_file(*args) -> 'qstring *': ...
def get_current_source_line(*args) -> int: ...
def add_path_mapping(*args) -> None: ...
def srcdbg_step_into(*args) -> bool: ...
def srcdbg_step_over(*args) -> bool: ...
def srcdbg_step_until_ret(*args) -> bool: ...
def set_debugger_event_cond(*args) -> None: ...
def get_debugger_event_cond(*args) -> 'char const *': ...
def get_manual_regions(*args) -> 'PyObject *': ...
def dbg_is_loaded(*args) -> bool: ...
def refresh_debugger_memory(*args) -> 'PyObject *': ...

class DBG_Hooks:
    thisown: Incomplete
    __repr__ = _swig_repr
    def __init__(self, *args) -> None: ...
    def hook(self, *args) -> bool: ...
    def unhook(self, *args) -> bool: ...
    def dbg_process_start(self, *args) -> None: ...
    def dbg_process_exit(self, *args) -> None: ...
    def dbg_process_attach(self, *args) -> None: ...
    def dbg_process_detach(self, *args) -> None: ...
    def dbg_thread_start(self, *args) -> None: ...
    def dbg_thread_exit(self, *args) -> None: ...
    def dbg_library_load(self, *args) -> None: ...
    def dbg_library_unload(self, *args) -> None: ...
    def dbg_information(self, *args) -> None: ...
    def dbg_exception(self, *args) -> int: ...
    def dbg_suspend_process(self, *args) -> None: ...
    def dbg_bpt(self, *args) -> int: ...
    def dbg_trace(self, *args) -> int: ...
    def dbg_request_error(self, *args) -> None: ...
    def dbg_step_into(self, *args) -> None: ...
    def dbg_step_over(self, *args) -> None: ...
    def dbg_run_to(self, *args) -> None: ...
    def dbg_step_until_ret(self, *args) -> None: ...
    def dbg_bpt_changed(self, *args) -> None: ...
    def dbg_started_loading_bpts(self, *args) -> None: ...
    def dbg_finished_loading_bpts(self, *args) -> None: ...
    __swig_destroy__: Incomplete
    def __disown__(self): ...

def list_bptgrps(*args) -> 'PyObject *': ...
def internal_get_sreg_base(*args) -> ea_t: ...
def write_dbg_memory(*args) -> ssize_t: ...
def dbg_can_query(*args) -> bool: ...
def set_reg_val(*args) -> 'PyObject *': ...
def request_set_reg_val(*args) -> 'PyObject *': ...
def get_reg_val(*args) -> 'PyObject *': ...
def get_reg_vals(*args) -> 'regvals_t *': ...
def get_tev_reg_val(tev, reg): ...
def get_tev_reg_mem_qty(tev): ...
def get_tev_reg_mem(tev, idx): ...
def get_tev_reg_mem_ea(tev, idx): ...
def send_dbg_command(command): ...
move_bpt_to_grp = set_bpt_group
