# mypy: disable-error-code="valid-type, name-defined, no-redef, assignment, misc, override"

from _typeshed import Incomplete

def _swig_repr(self): ...
def _swig_setattr_nondynamic_instance_variable(set): ...
def _swig_setattr_nondynamic_class_variable(set): ...
def _swig_add_metaclass(metaclass): ...

class _SwigNonDynamicMeta(type):
    __setattr__: Incomplete

SWIG_PYTHON_LEGACY_BOOL: Incomplete

def reg_read_string(*args) -> 'PyObject *': ...
def reg_data_type(*args) -> regval_type_t: ...
def reg_read_binary(*args) -> 'PyObject *': ...
def reg_write_binary(*args) -> 'PyObject *': ...
def reg_subkey_subkeys(*args) -> 'PyObject *': ...
def reg_subkey_values(*args) -> 'PyObject *': ...

ROOT_KEY_NAME: Incomplete
reg_unknown: Incomplete
reg_sz: Incomplete
reg_binary: Incomplete
reg_dword: Incomplete

def reg_delete_subkey(*args) -> bool: ...
def reg_delete_tree(*args) -> bool: ...
def reg_delete(*args) -> bool: ...
def reg_subkey_exists(*args) -> bool: ...
def reg_exists(*args) -> bool: ...
def reg_read_strlist(*args) -> 'qstrvec_t *': ...
def reg_update_strlist(*args) -> None: ...
def reg_write_string(*args) -> None: ...
def reg_read_int(*args) -> int: ...
def reg_write_int(*args) -> None: ...
def reg_read_bool(*args) -> bool: ...
def reg_write_bool(*args) -> None: ...
def reg_update_filestrlist(*args) -> None: ...
def set_registry_root(*args) -> bool: ...
def reg_load(*args) -> None: ...
def reg_flush(*args) -> None: ...
